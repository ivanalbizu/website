(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,function(e,r,t){"use strict";t.d(r,"i",function(){return m}),t.d(r,"j",function(){return f}),t.d(r,"a",function(){return h}),t.d(r,"o",function(){return v}),t.d(r,"e",function(){return x}),t.d(r,"f",function(){return w}),t.d(r,"c",function(){return y}),t.d(r,"n",function(){return k}),t.d(r,"h",function(){return S}),t.d(r,"p",function(){return A}),t.d(r,"k",function(){return E}),t.d(r,"m",function(){return C}),t.d(r,"d",function(){return T}),t.d(r,"b",function(){return z}),t.d(r,"g",function(){return I}),t.d(r,"l",function(){return L});var n=t(108),o=(t(97),t(198),t(199),t(28)),l=(t(201),t(203),t(204),t(206),t(98),t(31),t(5)),d=(t(77),t(37),t(38),t(92),t(69),t(7)),c=t(0);function m(e){c.a.config.errorHandler&&c.a.config.errorHandler(e)}function f(e){return e.then(function(e){return e.default||e})}function h(e,r){if(r||!e.options.__hasNuxtData){var t=e.options._originDataFn||e.options.data||function(){return{}};e.options._originDataFn=t,e.options.data=function(){var data=t.call(this);return this.$ssrContext&&(r=this.$ssrContext.asyncData[e.cid]),Object(d.a)({},data,r)},e.options.__hasNuxtData=!0,e._Ctor&&e._Ctor.options&&(e._Ctor.options.data=e.options.data)}}function v(e){return e.options&&e._Ctor===e?e:(e.options?(e._Ctor=e,e.extendOptions=e.options):(e=c.a.extend(e))._Ctor=e,!e.options.name&&e.options.__file&&(e.options.name=e.options.__file),e)}function x(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Array.prototype.concat.apply([],e.matched.map(function(e,t){return Object.keys(e.components).map(function(n){return r&&r.push(t),e.components[n]})}))}function w(e){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return Array.prototype.concat.apply([],e.matched.map(function(e,t){return Object.keys(e.instances).map(function(n){return r&&r.push(t),e.instances[n]})}))}function y(e,r){return Array.prototype.concat.apply([],e.matched.map(function(e,t){return Object.keys(e.components).reduce(function(n,o){return e.components[o]?n.push(r(e.components[o],e.instances[o],e,o,t)):delete e.components[o],n},[])}))}function k(e){return Promise.all(y(e,function(){var e=Object(l.a)(regeneratorRuntime.mark(function e(r,t,n,o){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("function"!=typeof r||r.options){e.next=4;break}return e.next=3,r();case 3:r=e.sent;case 4:return n.components[o]=v(r),e.abrupt("return",n.components[o]);case 6:case"end":return e.stop()}},e)}));return function(r,t,n,o){return e.apply(this,arguments)}}()))}function S(e){return _.apply(this,arguments)}function _(){return(_=Object(l.a)(regeneratorRuntime.mark(function e(r){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r){e.next=2;break}return e.abrupt("return");case 2:return e.next=4,k(r);case 4:return e.abrupt("return",Object(d.a)({},r,{meta:x(r).map(function(e,t){return Object(d.a)({},e.options.meta,(r.matched[t]||{}).meta)})}));case 5:case"end":return e.stop()}},e)}))).apply(this,arguments)}function A(e,r){return j.apply(this,arguments)}function j(){return(j=Object(l.a)(regeneratorRuntime.mark(function e(r,t){var l,d,c,m;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r.context||(r.context={isStatic:!0,isDev:!1,isHMR:!1,app:r,store:r.store,payload:t.payload,error:t.error,base:"/",env:{}},t.req&&(r.context.req=t.req),t.res&&(r.context.res=t.res),t.ssrContext&&(r.context.ssrContext=t.ssrContext),r.context.redirect=function(e,path,t){if(e){r.context._redirected=!0;var n=Object(o.a)(path);if("number"==typeof e||"undefined"!==n&&"object"!==n||(t=path||{},path=e,n=Object(o.a)(path),e=302),"object"===n&&(path=r.router.resolve(path).route.fullPath),!/(^[.]{1,2}\/)|(^\/(?!\/))/.test(path))throw path=O(path,t),window.location.replace(path),new Error("ERR_REDIRECT");r.context.next({path:path,query:t,status:e})}},r.context.nuxtState=window.__NUXT__),e.next=3,Promise.all([S(t.route),S(t.from)]);case 3:l=e.sent,d=Object(n.a)(l,2),c=d[0],m=d[1],t.route&&(r.context.route=c),t.from&&(r.context.from=m),r.context.next=t.next,r.context._redirected=!1,r.context._errored=!1,r.context.isHMR=!!t.isHMR,r.context.params=r.context.route.params||{},r.context.query=r.context.route.query||{};case 15:case"end":return e.stop()}},e)}))).apply(this,arguments)}function E(e,r){return!e.length||r._redirected||r._errored?Promise.resolve():C(e[0],r).then(function(){return E(e.slice(1),r)})}function C(e,r){var t;return(t=2===e.length?new Promise(function(t){e(r,function(e,data){e&&r.error(e),t(data=data||{})})}):e(r))&&(t instanceof Promise||"function"==typeof t.then)||(t=Promise.resolve(t)),t}function T(base,e){var path=decodeURI(window.location.pathname);return"hash"===e?window.location.hash.replace(/^#\//,""):(base&&0===path.indexOf(base)&&(path=path.slice(base.length)),(path||"/")+window.location.search+window.location.hash)}function z(e,r){return function(e){for(var r=new Array(e.length),i=0;i<e.length;i++)"object"===Object(o.a)(e[i])&&(r[i]=new RegExp("^(?:"+e[i].pattern+")$"));return function(t,n){for(var path="",data=t||{},o=n||{},l=o.pretty?R:encodeURIComponent,d=0;d<e.length;d++){var c=e[d];if("string"!=typeof c){var m=data[c.name||"pathMatch"],f=void 0;if(null==m){if(c.optional){c.partial&&(path+=c.prefix);continue}throw new TypeError('Expected "'+c.name+'" to be defined')}if(Array.isArray(m)){if(!c.repeat)throw new TypeError('Expected "'+c.name+'" to not repeat, but received `'+JSON.stringify(m)+"`");if(0===m.length){if(c.optional)continue;throw new TypeError('Expected "'+c.name+'" to not be empty')}for(var h=0;h<m.length;h++){if(f=l(m[h]),!r[d].test(f))throw new TypeError('Expected all "'+c.name+'" to match "'+c.pattern+'", but received `'+JSON.stringify(f)+"`");path+=(0===h?c.prefix:c.delimiter)+f}}else{if(f=c.asterisk?encodeURI(m).replace(/[?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}):l(m),!r[d].test(f))throw new TypeError('Expected "'+c.name+'" to match "'+c.pattern+'", but received "'+f+'"');path+=c.prefix+f}}else path+=c}return path}}(function(e,r){var t,n=[],o=0,l=0,path="",d=r&&r.delimiter||"/";for(;null!=(t=P.exec(e));){var c=t[0],m=t[1],f=t.index;if(path+=e.slice(l,f),l=f+c.length,m)path+=m[1];else{var h=e[l],v=t[2],x=t[3],w=t[4],y=t[5],k=t[6],S=t[7];path&&(n.push(path),path="");var _=null!=v&&null!=h&&h!==v,A="+"===k||"*"===k,j="?"===k||"*"===k,E=t[2]||d,pattern=w||y;n.push({name:x||o++,prefix:v||"",delimiter:E,optional:j,repeat:A,partial:_,asterisk:!!S,pattern:pattern?D(pattern):S?".*":"[^"+M(E)+"]+?"})}}l<e.length&&(path+=e.substr(l));path&&n.push(path);return n}(e,r))}function I(e,r){var t={},n=Object(d.a)({},e,r);for(var o in n)String(e[o])!==String(r[o])&&(t[o]=!0);return t}function L(e){var r;if(e.message||"string"==typeof e)r=e.message||e;else try{r=JSON.stringify(e,null,2)}catch(t){r="[".concat(e.constructor.name,"]")}return Object(d.a)({},e,{message:r,statusCode:e.statusCode||e.status||e.response&&e.response.status||500})}window.onNuxtReadyCbs=[],window.onNuxtReady=function(e){window.onNuxtReadyCbs.push(e)};var P=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function R(e){return encodeURI(e).replace(/[\/?#]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function M(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function D(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function O(e,r){var t,n=e.indexOf("://");-1!==n?(t=e.substring(0,n),e=e.substring(n+3)):e.startsWith("//")&&(e=e.substring(2));var o,l=e.split("/"),d=(t?t+"://":"//")+l.shift(),path=l.filter(Boolean).join("/");return 2===(l=path.split("#")).length&&(path=l[0],o=l[1]),d+=path?"/"+path:"",r&&"{}"!==JSON.stringify(r)&&(d+=(2===e.split("?").length?"&":"?")+function(e){return Object.keys(e).sort().map(function(r){var t=e[r];return null==t?"":Array.isArray(t)?t.slice().map(function(e){return[r,"=",e].join("")}).join("&"):r+"="+t}).filter(Boolean).join("&")}(r)),d+=o?"#"+o:""}},,,,,,,,,,,,,,,,,,,function(e,r,t){"use strict";t(38);var n=t(7),o=(t(31),t(5)),l=(t(69),t(0)),d=t(104),c=t.n(d),m=t(73),f=t(1),h=function(){return Object(f.j)(t.e(3).then(t.bind(null,534)))},v=function(){return Object(f.j)(Promise.all([t.e(7),t.e(2)]).then(t.bind(null,535)))},x=function(){return Object(f.j)(t.e(4).then(t.bind(null,533)))};l.a.use(m.a);var w=function(e,r,t){if(t)return t;var n={};return e.matched.length<2?n={x:0,y:0}:e.matched.some(function(e){return e.components.default.options.scrollToTop})&&(n={x:0,y:0}),e.hash&&(n={selector:e.hash}),n};var y=t(105),k=t.n(y),S=Object(n.a)({},k.a,{name:"NoSsr"}),_={name:"NuxtChild",functional:!0,props:{nuxtChildKey:{type:String,default:""},keepAlive:Boolean,keepAliveProps:{type:Object,default:void 0}},render:function(e,r){var t=r.parent,data=r.data,n=r.props;data.nuxtChild=!0;for(var o=t,l=t.$nuxt.nuxt.transitions,d=t.$nuxt.nuxt.defaultTransition,c=0;t;)t.$vnode&&t.$vnode.data.nuxtChild&&c++,t=t.$parent;data.nuxtChildDepth=c;var m=l[c]||d,f={};A.forEach(function(e){void 0!==m[e]&&(f[e]=m[e])});var h={};j.forEach(function(e){"function"==typeof m[e]&&(h[e]=m[e].bind(o))});var v=h.beforeEnter;h.beforeEnter=function(e){if(window.$nuxt.$nextTick(function(){window.$nuxt.$emit("triggerScroll")}),v)return v.call(o,e)};var x=[e("router-view",data)];return n.keepAlive&&(x=[e("keep-alive",{props:n.keepAliveProps},x)]),e("transition",{props:f,on:h},x)}},A=["name","mode","appear","css","type","duration","enterClass","leaveClass","appearClass","enterActiveClass","enterActiveClass","leaveActiveClass","appearActiveClass","enterToClass","leaveToClass","appearToClass"],j=["beforeEnter","enter","afterEnter","enterCancelled","beforeLeave","leave","afterLeave","leaveCancelled","beforeAppear","appear","afterAppear","appearCancelled"],E={name:"NuxtError",props:{error:{type:Object,default:null}},head:function(){return{title:this.message,meta:[{name:"viewport",content:"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no"}]}},computed:{statusCode:function(){return this.error&&this.error.statusCode||500},message:function(){return this.error.message||"Error"}}},C=(t(209),t(11)),T=Object(C.a)(E,function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"__nuxt-error-page"},[t("div",{staticClass:"error"},[t("svg",{attrs:{xmlns:"http://www.w3.org/2000/svg",width:"90",height:"90",fill:"#DBE1EC",viewBox:"0 0 48 48"}},[t("path",{attrs:{d:"M22 30h4v4h-4zm0-16h4v12h-4zm1.99-10C12.94 4 4 12.95 4 24s8.94 20 19.99 20S44 35.05 44 24 35.04 4 23.99 4zM24 40c-8.84 0-16-7.16-16-16S15.16 8 24 8s16 7.16 16 16-7.16 16-16 16z"}})]),e._v(" "),t("div",{staticClass:"title"},[e._v(e._s(e.message))]),e._v(" "),404===e.statusCode?t("p",{staticClass:"description"},[t("NuxtLink",{staticClass:"error-link",attrs:{to:"/"}},[e._v("Back to the home page")])],1):e._e(),e._v(" "),e._m(0)])])},[function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"logo"},[r("a",{attrs:{href:"https://nuxtjs.org",target:"_blank",rel:"noopener"}},[this._v("Nuxt.js")])])}],!1,null,null,null).exports,z=(t(62),t(63),t(37),{name:"Nuxt",components:{NuxtChild:_,NuxtError:T},props:{nuxtChildKey:{type:String,default:void 0},keepAlive:Boolean,keepAliveProps:{type:Object,default:void 0},name:{type:String,default:"default"}},computed:{routerViewKey:function(){if(void 0!==this.nuxtChildKey||this.$route.matched.length>1)return this.nuxtChildKey||Object(f.b)(this.$route.matched[0].path)(this.$route.params);var e=this.$route.matched[0]&&this.$route.matched[0].components.default;if(e&&e.options){var r=e.options,t=r.key,n=r.watchQuery;if(t)return"function"==typeof t?t(this.$route):t;if(n){if(n.length){var o={},l=!0,d=!1,c=void 0;try{for(var m,h=n[Symbol.iterator]();!(l=(m=h.next()).done);l=!0){var v=m.value;o[v]=this.$route.query[v]}}catch(e){d=!0,c=e}finally{try{l||null==h.return||h.return()}finally{if(d)throw c}}return this.$router.resolve({path:this.$route.path,query:o}).href}return this.$route.fullPath}}return this.$route.path}},beforeCreate:function(){l.a.util.defineReactive(this,"nuxt",this.$root.$options.nuxt)},render:function(e){return this.nuxt.err?e("NuxtError",{props:{error:this.nuxt.err}}):e("NuxtChild",{key:this.routerViewKey,props:this.$props})}}),I={name:"NuxtLoading",data:function(){return{percent:0,show:!1,canSucceed:!0,reversed:!1,skipTimerCount:0,rtl:!1,throttle:200,duration:5e3,continuous:!1}},computed:{left:function(){return!(!this.continuous&&!this.rtl)&&(this.rtl?this.reversed?"0px":"auto":this.reversed?"auto":"0px")}},beforeDestroy:function(){this.clear()},methods:{clear:function(){clearInterval(this._timer),clearTimeout(this._throttle),this._timer=null},start:function(){var e=this;return this.clear(),this.percent=0,this.reversed=!1,this.skipTimerCount=0,this.canSucceed=!0,this.throttle?this._throttle=setTimeout(function(){return e.startTimer()},this.throttle):this.startTimer(),this},set:function(e){return this.show=!0,this.canSucceed=!0,this.percent=Math.min(100,Math.max(0,Math.floor(e))),this},get:function(){return this.percent},increase:function(e){return this.percent=Math.min(100,Math.floor(this.percent+e)),this},decrease:function(e){return this.percent=Math.max(0,Math.floor(this.percent-e)),this},pause:function(){return clearInterval(this._timer),this},resume:function(){return this.startTimer(),this},finish:function(){return this.percent=this.reversed?0:100,this.hide(),this},hide:function(){var e=this;return this.clear(),setTimeout(function(){e.show=!1,e.$nextTick(function(){e.percent=0,e.reversed=!1})},500),this},fail:function(){return this.canSucceed=!1,this},startTimer:function(){var e=this;this.show||(this.show=!0),void 0===this._cut&&(this._cut=1e4/Math.floor(this.duration)),this._timer=setInterval(function(){e.skipTimerCount>0?e.skipTimerCount--:(e.reversed?e.decrease(e._cut):e.increase(e._cut),e.continuous&&(e.percent>=100?(e.skipTimerCount=1,e.reversed=!e.reversed):e.percent<=0&&(e.skipTimerCount=1,e.reversed=!e.reversed)))},100)}},render:function(e){var r=e(!1);return this.show&&(r=e("div",{staticClass:"nuxt-progress",class:{"nuxt-progress-notransition":this.skipTimerCount>0,"nuxt-progress-failed":!this.canSucceed},style:{width:this.percent+"%",left:this.left}})),r}},L=(t(211),Object(C.a)(I,void 0,void 0,!1,null,null,null).exports),P=(t(213),t(215),t(217),{name:"Navbar"}),R={data:function(){return{socials:[{link:"https://github.com/ivanalbizu",icon:"github",label:"Perfil en Github"},{link:"https://twitter.com/ivan_albizu",icon:"twitter",label:"Perfil en Twitter"},{link:"https://www.linkedin.com/in/ivanalbizu/",icon:"linkedin",label:"Perfil en Linkedin"},{link:"https://www.youtube.com/channel/UCgAVPB3yw74JP5UEEXHgccA",icon:"youtube",label:"Canal de Youtube"}]}}},M={components:{NavBar:Object(C.a)(P,function(){var e=this.$createElement,r=this._self._c||e;return r("nav",{staticClass:"navbar is-fixed-top has-shadow",attrs:{role:"navigation","aria-label":"main navigation"}},[r("div",{staticClass:"navbar-brand"},[r("div",{staticClass:"navbar-item"},[r("div",{staticClass:"title nirebu-title has-background-gradient"},[r("nuxt-link",{attrs:{to:"/"}},[this._v("&: ivan.albizu")])],1)]),this._v(" "),this._m(0)]),this._v(" "),r("div",{staticClass:"navbar-menu"},[r("div",{staticClass:"navbar-end"},[r("div",{staticClass:"navbar-item"},[r("nuxt-link",{staticClass:"button is-primary",attrs:{to:"/blog/"}},[this._v("Blog")])],1)])])])},[function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"navbar-burger"},[r("span"),this._v(" "),r("span"),this._v(" "),r("span")])}],!1,null,null,null).exports,SiteFooter:Object(C.a)(R,function(){var e=this.$createElement,r=this._self._c||e;return r("footer",{staticClass:"footer"},[r("div",{staticClass:"columns is-centered"},[r("div",{staticClass:"column is-one-fifth"},[r("div",{staticClass:"columns fa-lg has-text-centered is-narrow"},this._l(this.socials,function(e,t){return r("div",{key:t,staticClass:"column"},[r("a",{attrs:{href:e.link,target:"_blank","aria-label":e.label,rel:"noopener"}},[r("font-awesome-icon",{attrs:{icon:["fab",e.icon]}})],1)])}),0)])]),this._v(" "),this._m(0)])},[function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"content has-text-centered"},[r("p",[this._v("NO © Iván Albizu con "),r("a",{attrs:{href:"https://vuejs.org/"}},[this._v("Vuejs")]),this._v(" + "),r("a",{attrs:{href:"https://nuxtjs.org/"}},[this._v("Nuxtjs")])])])}],!1,null,null,null).exports}},D={_default:Object(C.a)(M,function(){var e=this.$createElement,r=this._self._c||e;return r("div",{staticClass:"main"},[r("NavBar"),this._v(" "),r("nuxt",{key:this.$route.fullPath}),this._v(" "),r("SiteFooter")],1)},[],!1,null,null,null).exports},O={head:{title:"Iván Albizu | Maquetador Web",titleTemplate:"%s - Iván Albizu | Maquetador Web",meta:[{charset:"utf-8"},{name:"viewport",content:"width=device-width, initial-scale=1"},{hid:"description",name:"description",content:"Hi, I'm Nicolò, a Linux system administrator focusing on email deliverability, system standardisation, deployment automation and containerisation."},{hid:"keywords",name:"keywords",content:"vuejs, nuxt, javascript, sysadmin, frontend, ansible, mongodb, docker"},{name:"robots",hid:"robots",content:"index, follow"},{name:"twitter:card",content:"summary_large_image"},{name:"twitter:site",content:"@nirebu"}],link:[{rel:"icon",type:"image/x-icon",href:"/favicon.ico"}],bodyAttrs:{class:"has-navbar-fixed-top"},htmlAttrs:{lang:"en-GB"},style:[],script:[]},render:function(e,r){var t=e("NuxtLoading",{ref:"loading"}),n=e(this.layout||"nuxt"),o=e("div",{domProps:{id:"__layout"},key:this.layoutName},[n]),l=e("transition",{props:{name:"layout",mode:"out-in"},on:{beforeEnter:function(e){window.$nuxt.$nextTick(function(){window.$nuxt.$emit("triggerScroll")})}}},[o]);return e("div",{domProps:{id:"__nuxt"}},[t,l])},data:function(){return{isOnline:!0,layout:null,layoutName:""}},beforeCreate:function(){l.a.util.defineReactive(this,"nuxt",this.$options.nuxt)},created:function(){l.a.prototype.$nuxt=this,window.$nuxt=this,this.refreshOnlineStatus(),window.addEventListener("online",this.refreshOnlineStatus),window.addEventListener("offline",this.refreshOnlineStatus),this.error=this.nuxt.error},mounted:function(){this.$loading=this.$refs.loading},watch:{"nuxt.err":"errorChanged"},computed:{isOffline:function(){return!this.isOnline}},methods:{refreshOnlineStatus:function(){void 0===window.navigator.onLine?this.isOnline=!0:this.isOnline=window.navigator.onLine},errorChanged:function(){this.nuxt.err&&this.$loading&&(this.$loading.fail&&this.$loading.fail(),this.$loading.finish&&this.$loading.finish())},setLayout:function(e){return e&&D["_"+e]||(e="default"),this.layoutName=e,this.layout=D["_"+e],this.layout},loadLayout:function(e){return e&&D["_"+e]||(e="default"),Promise.resolve(D["_"+e])}},components:{NuxtLoading:L}},V=(t(67),t(97),t(98),t(74));l.a.use(V.a);var $=console,G={};(G=function(e,r){if((e=e.default||e).commit)throw new Error("[nuxt] ".concat(r," should export a method that returns a Vuex instance."));return"function"!=typeof e&&(e=Object.assign({},e)),N(e,r)}(t(221),"store/index.js")).modules=G.modules||{};var U=G instanceof Function?G:function(){return new V.a.Store(Object.assign({strict:!1},G))};function N(e,r){if(e.state&&"function"!=typeof e.state){$.warn("'state' should be a method that returns an object in ".concat(r));var t=Object.assign({},e.state);e=Object.assign({},e,{state:function(){return t}})}return e}var B=t(16),F=t(55),J=t(106);B.a.autoAddCss=!1,B.c.add(J.a),l.a.component("font-awesome-icon",F.a),l.a.component("font-awesome-layers",F.b),l.a.component("font-awesome-layers-text",F.c);var H=t(54),W=t.n(H),Y=function(e,r){e.$moment=W.a,r("moment",W.a)},X=t(107),Q=t.n(X),K=function(){var e=Object(o.a)(regeneratorRuntime.mark(function e(r,t){var o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("function"!=typeof(o={dev:!0,debug:{},id:"UA-133940660-1"}).asyncID){e.next=5;break}return e.next=4,o.asyncID(r);case 4:o.id=e.sent;case 5:l.a.use(Q.a,Object(n.a)({},{router:r.app.router},o)),r.$ga=l.a.$ga,t("ga",l.a.$ga);case 8:case"end":return e.stop()}},e)}));return function(r,t){return e.apply(this,arguments)}}();t.d(r,"b",function(){return ee}),t.d(r,"a",function(){return T}),l.a.component(S.name,S),l.a.component(_.name,_),l.a.component("NChild",_),l.a.component(z.name,z),l.a.use(c.a,{keyName:"head",attribute:"data-n-head",ssrAttribute:"data-n-head-ssr",tagIDKeyName:"hid"});var Z={name:"page",mode:"out-in",appear:!0,appearClass:"appear",appearActiveClass:"appear-active",appearToClass:"appear-to"};function ee(e){return re.apply(this,arguments)}function re(){return(re=Object(o.a)(regeneratorRuntime.mark(function e(r){var t,o,d,c,y,path,k;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,new m.a({mode:"history",base:decodeURI("/"),linkActiveClass:"nuxt-link-active",linkExactActiveClass:"nuxt-link-exact-active",scrollBehavior:w,routes:[{path:"/blog",component:h,name:"blog"},{path:"/blog/:post",component:v,name:"blog-post"},{path:"/",component:x,name:"index"}],fallback:!1});case 2:return t=e.sent,(o=U(r)).$router=t,d=Object(n.a)({router:t,store:o,nuxt:{defaultTransition:Z,transitions:[Z],setTransitions:function(e){return Array.isArray(e)||(e=[e]),e=e.map(function(e){return e=e?"string"==typeof e?Object.assign({},Z,{name:e}):Object.assign({},Z,e):Z}),this.$options.nuxt.transitions=e,e},err:null,dateErr:null,error:function(e){e=e||null,d.context._errored=!!e,e=e?Object(f.l)(e):null;var t=this.nuxt||this.$options.nuxt;return t.dateErr=Date.now(),t.err=e,r&&(r.nuxt.error=e),e}}},O),o.app=d,c=r?r.next:function(e){return d.router.push(e)},r?y=t.resolve(r.url).route:(path=Object(f.d)(t.options.base),y=t.resolve(path).route),e.next=11,Object(f.p)(d,{route:y,next:c,error:d.nuxt.error.bind(d),store:o,payload:r?r.payload:void 0,req:r?r.req:void 0,res:r?r.res:void 0,beforeRenderFns:r?r.beforeRenderFns:void 0,ssrContext:r});case 11:k=function(e,r){if(!e)throw new Error("inject(key, value) has no key provided");if(void 0===r)throw new Error("inject(key, value) has no value provided");d[e="$"+e]=r,o[e]=d[e];var t="__nuxt_"+e+"_installed__";l.a[t]||(l.a[t]=!0,l.a.use(function(){l.a.prototype.hasOwnProperty(e)||Object.defineProperty(l.a.prototype,e,{get:function(){return this.$root.$options[e]}})}))},window.__NUXT__&&window.__NUXT__.state&&o.replaceState(window.__NUXT__.state),e.next=16;break;case 16:if("function"!=typeof Y){e.next=19;break}return e.next=19,Y(d.context,k);case 19:if("function"!=typeof K){e.next=22;break}return e.next=22,K(d.context,k);case 22:e.next=25;break;case 25:return e.abrupt("return",{app:d,store:o,router:t});case 26:case"end":return e.stop()}},e)}))).apply(this,arguments)}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,r,t){var content=t(210);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,t(30).default)("848b7032",content,!0,{sourceMap:!1})},function(e,r,t){var content=t(212);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,t(30).default)("ea2236b2",content,!0,{sourceMap:!1})},,,function(e,r,t){"use strict";t(62),t(63),t(37),t(67),t(88);var n=t(0),o=window.requestIdleCallback||function(e){var r=Date.now();return setTimeout(function(){e({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-r))}})},1)},l=window.IntersectionObserver&&new window.IntersectionObserver(function(e){e.forEach(function(e){var r=e.intersectionRatio,link=e.target;r<=0||link.__prefetch()})});r.a={name:"NuxtLink",extends:n.a.component("RouterLink"),props:{noPrefetch:{type:Boolean,default:!1}},mounted:function(){this.noPrefetch||o(this.observe,{timeout:2e3})},beforeDestroy:function(){this.__observed&&(l.unobserve(this.$el),delete this.$el.__prefetch)},methods:{observe:function(){l&&this.shouldPrefetch()&&(this.$el.__prefetch=this.prefetch.bind(this),l.observe(this.$el),this.__observed=!0)},shouldPrefetch:function(){return this.getPrefetchComponents().length>0},canPrefetch:function(){var e=navigator.connection;return!(this.$nuxt.isOffline||e&&((e.effectiveType||"").includes("2g")||e.saveData))},getPrefetchComponents:function(){return this.$router.resolve(this.to,this.$route,this.append).resolved.matched.map(function(e){return e.components.default}).filter(function(e){return"function"==typeof e&&!e.options&&!e.__prefetched})},prefetch:function(){if(this.canPrefetch()){l.unobserve(this.$el);var e=this.getPrefetchComponents(),r=!0,t=!1,n=void 0;try{for(var o,d=e[Symbol.iterator]();!(r=(o=d.next()).done);r=!0){var c=o.value;c().catch(function(){}),c.__prefetched=!0}}catch(e){t=!0,n=e}finally{try{r||null==d.return||d.return()}finally{if(t)throw n}}}}}}},,,,,,,,,,,,,,,,function(e,r,t){"use strict";r.a={}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: Angular consumiendo de AEMET\r\npublished: true\r\ndescription: Angular consumiendo datos de la AEMET en formato Xml. Los datos que proporciona la AEMET\r\ntags: AngularJS,JavaScript,Php\r\nctime: Wed, 07 Dec 2016 15:46:05 +0000\r\ncover_image: angular-consumiendo-aemet.jpg\r\n---\r\n\r\nAngular consumiendo datos de la AEMET en formato Xml. Los datos que proporciona la [AEMET](http://www.aemet.es/es/datos_abiertos) son en formato Xml. Para consumirlos he transformado los datos a Json mediante Php. En varios archivos tengo la lista de provincias y localidades con formato Json, por lo que la única petición a la web de la AEMET es para obtener los datos de la localidad seleccionada. La petición es tratada con con Php para las transformaciones y con [SlimPHP](https://www.slimframework.com/) para obtener el identificador de la localidad. La maquetación está con Bootstrap y [Bootstrap Material](http://fezvrasta.github.io/bootstrap-material-design/), y los iconos usados [Weather icons](https://erikflowers.github.io/weather-icons/). El código completo se encuentra en mi [GitHub](https://github.com/ivanalbizu/angular-consuming-aemet). Y el [ejemplo funcionando](http://mentiraspoliticas.es/projects/aemet/app/#/)."},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Angular consumiendo de Wordpress Rest Api - Autenticación'\r\ndate: Thu, 05 May 2016 13:48:16 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Php,Wordpress\r\n---\r\n\r\nEn esta entrada voy a trabajar con **AngularJS y Wordpress**. Wordpress lo voy a usar para generar la **Rest Api y AngularJS** para leer los datos de WordPress. (Al final de la entrada he publicado un vídeo y el repositorio en Git Hub). Usaré dos plugins, uno [WordPress REST API (Version 2)](https://es.wordpress.org/plugins/rest-api/)  genera la Api y otro [JWT Authentication for WP REST API](https://es.wordpress.org/plugins/jwt-authentication-for-wp-rest-api/) genera el sistema de Autenticación mediante JSON WEB TOKEN (JWT).\r\n\r\n## Configuracíon de Wordpress y sus plugins:\r\n\r\nEl primer plugin, **WordPress REST API (Version 2)**, no requiere de ninguna configuración. En el segundo plugin, **JWT Authentication for WP REST API**, tal cómo viene en su página, hay que que modificar el archivo '.htaccess'. Mi archivo modificado queda así:\r\n\r\n```\r\n# BEGIN WordPress\r\n<IfModule mod_rewrite.c>\r\nRewriteEngine On\r\nRewriteBase /nombre/carpeta/wordpress/en/xampp/\r\nRewriteRule ^index.php$ - [L]\r\nRewriteCond %{REQUEST_FILENAME} !-d\r\nRewriteRule . /nombre/carpeta/wordpress/en/xampp/index.php [L]\r\n</IfModule>\r\n# END WordPress\r\nSetEnvIf Authorization \"(.*)\" HTTP_AUTHORIZATION=$1\r\n```\r\n\r\nPara terminar con la configuración básica del plugin JWT hay que modificar el archivo 'wp-config.php' añadiendo estas dos línea:\r\n\r\n```\r\ndefine('JWT/AUTH/SECRET_KEY', 'palabra-clave-que-generará-el-token');\r\ndefine('JWT/AUTH/CORS_ENABLE', true);\r\n```\r\n\r\nA partir de aquí la mayoría de las modificaciones van a ser sobre la **instalación de AngularJS realizada usando [Yeoman](http://ivanalbizu.eu/demo-angularjs-shop-01-generando-proyecto-con-yeoman/)**.\r\n\r\n## Dependencias:\r\n\r\nAñadimos la dependencia a UI Boostrap que será usada para mostrar una ventana modal.\r\n\r\n## Constantes:\r\n\r\nPara evitar repeticiones de código y facilitar su mantenimiento añadimos una constante para obtener la base url de nuestra **Api Wordpress**:\r\n\r\n```\r\n.constant('URL_API', {\r\n  BASE_URL:  'http://localhost/wpapi/wp-json'\r\n})\r\n```\r\n\r\n## Configuración de rutas y $httpProvider:\r\n\r\nSegún la ruta especificamos la vista y el controlador asociado. Añadimos 'Interceptor' al $httpProvider para que las peticiones a nuestro Wordpress Rest Api lleven la cabecera, en este caso la **Authorization Bearer** usado por el plugin **JWT**. La Autenticación la almacenamos en Local Storage del navegador.\r\n\r\n```\r\n$httpProvider.defaults.headers.post['Content-Type'] =  'application/x-www-form-urlencoded';\r\n\r\n$httpProvider.interceptors.push(['$q', '$location', function( $q, $location ) {\r\n  return {\r\n    'request': function (config) {\r\n      config.headers = config.headers || {};\r\n      if (window.localStorage.token) {\r\n        config.headers.Authorization = 'Bearer ' + window.localStorage.token;\r\n      }\r\n      return config;\r\n    },\r\n    'responseError': function(response) {\r\n      if(response.status === 401 || response.status === 403) {\r\n        $location.path('/login');\r\n      }\r\n      return $q.reject(response);\r\n    }\r\n  };\r\n}]);\r\n```\r\n\r\n## Login y Autenticación JWT\r\n\r\nCreamos dos archivos, 'services/login-services.js' y 'controllers/login.js'. El servicio **LoginServices** tendrá un único método llamado **login(data)**, el cual recibe como parámetro el usuario y contraseña que ha introducido el usuario en el controlador. Este parámetro será enviando a la Api Wordpress mediante el método Post a la url '/jwt-Auth/v1/token'. La respuesta la recibe en controlador. Directamente he enviado el Token, pero podría enviar la respuesta JSON completa y tratarse  entonces en el controlador.\r\n\r\n```\r\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('wpapiApp')\r\n    .factory('LoginServices', LoginServices);\r\n\r\n    LoginServices.$inject = [ '$http', 'URL_API' ];\r\n    function LoginServices( $http, URL_API ) {\r\n\r\n      return {\r\n        login:  login,\r\n      };\r\n\r\n      function login(data) {\r\n        window.localStorage.removeItem('token');\r\n        return $http({\r\n            method: 'POST',\r\n            url: URL/API.BASE/URL + '/jwt-Auth/v1/token',\r\n            data: data,\r\n          })\r\n          .then(function(result) {\r\n              return result.data.token;\r\n            }, function(error) {\r\n              console.log(error);\r\n            });\r\n      }\r\n    }\r\n})();\r\n```\r\n\r\nEl controlador **LoginCtrl** sólo tiene un método llamado **login(data)**. Se obtiene en el formulario de la vista los datos introducidos por el usuario que son enviados posteriormente a el servicio, la respuesta se guarda en Local Storage con el nombre 'token'.\r\n\r\n```\r\n(function() {\r\n  'use strict';\r\n\r\n  angular.module('wpapiApp')\r\n    .controller('LoginCtrl', LoginCtrl);\r\n\r\n    LoginCtrl.$injector = [ 'LoginServices' ];\r\n    function LoginCtrl ( LoginServices ) {\r\n\r\n      var vm = this;\r\n\r\n      vm.login = login;\r\n\r\n      function login(data) {\r\n        var serializedData = $.param({\r\n          username: data.username,\r\n          password: data.password\r\n        });\r\n        LoginServices.login(serializedData).then(function(dataResponse) {\r\n          window.localStorage['token'] = dataResponse;\r\n          console.log(dataResponse);\r\n        });\r\n      }\r\n    }\r\n})();\r\n```\r\n\r\nEn siguientes entradas publicaré más ejemplos de interacción entre **Wordpress Rest Api y AngularJS**, más concretamente sobre como trabajar con las entradas de Wordpress: Listar una o más entradas, crearlas, editarlas y eliminarlas. [https://github.com/ivanalbizu/angular/wordpress/rest_api](http://Git Hub)"},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Angular consumiendo de WordPress Rest Api – Crud\'\r\ndate: Fri, 06 May 2016 15:39:14 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Wordpress\r\n---\r\n\r\nSiguiendo con la entrada anterior en la que configuraba la [Rest Api con Wordpress y Autenticación JWT con AngularJS](http://ivanalbizu.eu/angular-consumiendo-wordpress-rest-api-autenticacion/), voy a continuar ampliando el proyecto. (Al final de la entrada he publicado un vídeo y el repositorio en Git Hub). Visitando la [documentación del Plugin Wp Rest Api](http://v2.wp-api.org/)  podemos ver todo lo que se puede hacer, en concreto vamos a realizar:\r\n\r\n*   Listaremos varias entradas: GET /wp/v2/posts\r\n*   Obtendremos una entrada concreta: GET /wp/v2/posts/id\r\n*   Actualizaremos una entrada: POST /wp/v2/posts/id\r\n*   Crearemos una entrada: POST /wp/v2/posts\r\n*   Eliminaremos una entrada: DELETE /wp/v2/posts/id\r\n\r\nLos dos servicios, PostsServices y PostServices necesitan inyectarle varias dependencias, $http, $rootScope y URL_API:\r\n\r\n```\r\n.factory(\'PostsServices\', PostsServices)\r\n.factory(\'PostServices\', PostServices);\r\n\r\nPostsServices.$inject = \\[\'$http\', \'$rootScope\', \'URL_API\'\\];\r\nfunction PostsServices($http, $rootScope, URL_API) {..}\r\n\r\nPostServices.$inject = \\[\'$http\', \'$rootScope\', \'URL_API\'\\];\r\nfunction PostServices($http, $rootScope, URL_API) {...}\r\n```\r\n\r\nEn la vista (posts.html) que contiene todas las entradas podremos:\r\n\r\n*   Ver todas las entradas.\r\n*   Eliminar una entrada.\r\n*   Crear nueva entrada.\r\n\r\nEn la vista (post.html) que contiene una entrada concreta podremos:\r\n\r\n*   Obtener la entrada seleccionada.\r\n*   Editar la entrada.\r\n\r\n## Obtener todas las entradas\r\n\r\nCuando la ruta sea \'/posts\' cargaremos la vista \'views/posts.html\' y el controlador \'PostsCtrl\'. Las llamadas desde la vista hacia el controlador las haremos mediante \'vm\' sin necesidad de usar el \'$scope\'.\r\n\r\n```\r\n.when(\'/posts\', {\r\n  templateUrl: \'views/posts.html\',\r\n  controller: \'PostsCtrl\',\r\n  controllerAs: \'vm\'\r\n})\r\n```\r\n\r\nEl controlador \'PostsCtrl\' tiene varios métodos, uno de ellos, llamado **getAll()**, que llama al método **getAllData()** del servicio \'PostsServices\'. La respuesta recibida se le pasa a \'vm.posts\' para que en la vista pueda ser usada. (No hay tratamiento de errores, pero se deberían tener en cuenta).\r\n\r\n```\r\nvar vm = this;\r\n\r\nvm.getAll = getAll;\r\n\r\ngetAll();\r\n\r\nfunction getAll() {\r\n  PostsServices.getAllData().then(function(dataResponse) {\r\n    vm.posts = dataResponse;\r\n  });\r\n}\r\n```\r\n\r\nEl servicio \'PostsServices\' tiene varios métodos, uno de ellos el getAllData() realiza una petición GET a la Url de la **API de Wordpress** y devuelve el resultado que luego será capturado desde el controlador.\r\n\r\n```\r\nreturn {\r\n  getAllData: getAllData\r\n};\r\n\r\nfunction getAllData() {\r\n  return $http({\r\n    method : "GET",\r\n    url : URL\\_API.BASE\\_URL + \'/wp/v2/posts\',\r\n  }).then(function(response) {\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n```\r\n\r\nPara pintar las entradas, cuando se llama a la vista \'views/posts.html\' entra en funcionamiento el controlador PostCtrl. Dicho controlador ejecuta directamente el método getAll(). Esto nos permite obtener todas las entradas ya que está asociado a vm: vm.posts = dataResponse, (convención de nomenclatura muy usada que significa View Model, de esta manera no se abusa del $scope). La vista pinta todas las entradas tras recorrerlas con \'ng-repeat\'. Ya que no usamos el $scope, tenemos que especificar sobre que elementos iteramos: ng-repeat="post in vm.posts". El plugin Wordpress Rest Api devuelve el título, el contenido y el extracto de una entrada con etiquetas Html es por eso por lo que se usa la directiva ng-bind-html.\r\n\r\n```\r\n<table>\r\n  ...\r\n  <tr ng-repeat="post in vm.posts">\r\n    <td>{{post.date}}</td>\r\n    <td ng-bind-html="post.title.rendered"></td>\r\n    <td ng-bind-html="post.content.rendered"></td>\r\n    <td ng-bind-html="post.excerpt.rendered"></td>\r\n    ...\r\n  </tr>\r\n  ...\r\n</table>\r\n```\r\n\r\n## Obtener una entrada\r\n\r\nCuando la ruta sea \'/post/:id\' cargaremos la vista \'views/post.html\' y el controlador \'PostCtrl\'. Las llamadas desde la vista hacia el controlador las haremos mediante \'vm\' sin necesidad de usar el \'$scope\'.\r\n\r\n```\r\n.when(\'/post/:id\', {\r\n  templateUrl: \'views/post.html\',\r\n  controller: \'PostCtrl\',\r\n  controllerAs: \'vm\'\r\n})\r\n```\r\n\r\nEl controlador \'PostCtrl\' tiene dos métodos, uno de ellos, llamado **getPost(id)**, que llama al método **getPostData(id)** del servicio \'PostServices\'. La respuesta recibida se le pasa a \'vm.post\' para que en la vista pueda ser usada.\r\n\r\n```\r\nvar vm = this;\r\n//Se obtiene por parámetro la ID de la entrada seleccionada\r\nvar id = $routeParams.id;\r\n\r\nvm.getPost = getPost;\r\n\r\nvm.getPost(id);\r\nvm.getPostRevissions(id);\r\n\r\nfunction getPost(id) {\r\n  PostServices.getPostData(id).then(function(dataResponse) {\r\n    vm.post = dataResponse;\r\n  });\r\n}\r\n```\r\n\r\nPara obtener el post que usuario ha seleccionado se le envía en el vínculo la \'id\' de la entrada.\r\n\r\n```\r\n<a href="#/post/{{post.id}}" class="btn btn-warning">\r\n  <i class="glyphicon glyphicon-eye-open"></i>\r\n</a>\r\n```\r\n\r\nCon el método getPostData(id) del servicio \'PostServices\' se devuelve la entrada seleccionada por su id.\r\n\r\n```\r\nreturn {\r\n  getPostData:  getPostData\r\n};\r\n\r\nfunction getPostData(id) {\r\n  return $http({\r\n    method : "GET",\r\n    url : URL\\_API.BASE\\_URL + \'/wp/v2/posts/\' + id,\r\n  }).then(function(response) {\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n```\r\n\r\nPara pintar una entrada llamamos a cada uno de los atributos que queramos pintar (de entre los que nos manda el plugin Wordpress Rest Api) mediante \'vm.post\'.\r\n\r\n```\r\n<h2>Contenido del POST número {{vm.post.id}}</h2>\r\n<h3>Título: {{vm.post.title.rendered}}</h3>\r\n<h4>Contenido:</h4>\r\n<div ng-bind-html="vm.post.content.rendered"></div>\r\n<h4>Extracto:</h4>\r\n<div ng-bind-html="vm.post.excerpt.rendered"></div>\r\n<a href="{{vm.post.link}}" target="_blank">{{vm.post.link}}</a\r\n```\r\n\r\n## Editar una entrada\r\n\r\nLa edición de una entrada voy a realizarlo a través de un modal de Bootstrap. Para abrir el modal se usa el método openModal() que se encuentra en el controlador PostCtrl(). En dicho método se especifica el controlador y la template que se usará.\r\n\r\n```\r\nvar vm = this;\r\n\r\nvm.openModal = openModal;\r\n\r\nfunction openModal() {\r\n  console.log(\'Se abre modal\');\r\n  var modalInstance = $modal.open({\r\n    controller: \'ModalPostCtrl as vmm\',\r\n    templateUrl: \'modal-post.html\'\r\n  });\r\n}\r\n```\r\n\r\nY que es llamado en la vista post.html mediante un botón.\r\n\r\n```\r\n<button class="btn btn-primary" ng-click="vm.openModal()">Editar post</button>\r\n```\r\n\r\nSe ha creado un nuevo controlador \'ModalPostCtrl\' para realizar acciones con la entrada que se quiere editar.\r\n\r\n*   Obtener la entrada por su ID con getPost(id).\r\n*   Guardar la edición de la entrada con el método editPost(post, id). Para eso le pasamos al método editPostData(data, id) del servicio \'PostServices\' los nuevos datos del post y su ID.\r\n*   Cancelar y cerrar la ventana modal.\r\n\r\nEl código completo del controlador de la ventana modal será:\r\n\r\n```\r\nModalPostCtrl.$inject = [ \'$routeParams\', \'$modalInstance\', \'PostServices\', \'$route\' ];\r\nfunction ModalPostCtrl ( $routeParams, $modalInstance, PostServices, $route ) {\r\n\r\n  var vmm = this;\r\n  var id = $routeParams.id;\r\n  vmm.messageText = \'Editando Post\';\r\n\r\n  vmm.cancel = cancel;\r\n  vmm.getPost = getPost;\r\n  vmm.editPost = editPost;\r\n\r\n  vmm.getPost(id);\r\n\r\n  function cancel() {\r\n    console.log(\'Se cancela guardar usando modal\');\r\n    $modalInstance.dismiss();\r\n  }\r\n\r\n  function getPost(id) {\r\n    PostServices.getPostData(id).then(function(dataResponse) {\r\n      vmm.post = dataResponse;\r\n    });\r\n  }\r\n\r\n  function editPost(post, id) {\r\n    var data = $.param({\r\n      title: post.title.rendered,\r\n      content: post.content.rendered,\r\n      excerpt: post.excerpt.rendered,\r\n      slug: encodeURIComponent(post.title.rendered.replace(/\\\\s+/g, \'-\').toLowerCase()),\r\n    });\r\n    PostServices.editPostData(data, id).then(function(dataResponse) {\r\n      console.log("Se guarda en el modal");\r\n      $modalInstance.close($route.reload());\r\n    });\r\n  }\r\n}\r\n```\r\n\r\nLa edición de una entrada la representamos mediante una vista modal. En este caso se llamarán a los datos de una entrada mediante \'vmm\' para evitar posibles conflictos. Se identifica mediante la ID el nombre de la template html. Para actualizar la entrada se usa un formulario que tiene la directiva ng-submit con los nuevos datos y la ID de la entrada a actualizar \'ng-submit="vmm.editPost(vmm.post, vmm.post.id)"\'.\r\n\r\n```\r\n<script type="text/ng-template" id="modal-post.html">\r\n  <form ng-submit="vmm.editPost(vmm.post, vmm.post.id)" method="post" role="form">\r\n    <div class="modal-header">\r\n      <h3 class="modal-title">{{ vmm.messageText }}</h3>\r\n    </div>\r\n    <div class="modal-body">\r\n      <h4>Título: {{vmm.post.title.rendered}}</h4>\r\n        <div class="form-group">\r\n          <label for="title">Título:</label>\r\n          <input type="text" ng-model="vmm.post.title.rendered" id="title" class="form-control" />\r\n          <label for="content">Contenido:</label>\r\n          <textarea rows="4" ng-model="vmm.post.content.rendered" ng-bind-html="vmm.post.content.rendered" id="content" class="form-control"></textarea>\r\n          <label for="excerpt">Resumen:</label>\r\n          <input type="text" ng-model="vmm.post.excerpt.rendered" id="excerpt" class="form-control" />\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n      <button type="submit" class="btn btn-primary">Guardar cambios</button>\r\n      <a href="" class="btn btn-danger" ng-click="vmm.cancel()">Cancel</a>\r\n    </div>\r\n  </form>\r\n<\/script>\r\n```\r\n\r\n## Crear una nueva entrada\r\n\r\nCómo he comentado anteriormente, la creación de una nueva entrada la realizaremos desde la vista \'/posts\' con el controlador \'PostsCtrl\'. En este controlador tenemos el método createPost(post), que recibe los datos dela nueva entrada que el usuario a rellenado en la vista, y se le añade el atributo \'status\' como \'publish\' para que no aparezca como borrador, que es su comportamiento por defecto. Los datos son enviado al método createData(data) del servicio \'PostsServices\'. Se incorpora el método getAll() para actualizar todas las entradas y el método resetFields() para limpiar el formulario en la vista.\r\n\r\n```\r\nvar vm = this;\r\n\r\nvm.createPost = createPost;\r\n\r\nfunction createPost(post) {\r\n  var data = $.param({\r\n    title: post.title,\r\n    content: post.content,\r\n    excerpt: post.excerpt,\r\n    status: \'publish\',\r\n  });\r\n  PostsServices.createPostData(data).then(function(dataResponse) {\r\n    resetFields();\r\n    getAll();\r\n  });\r\n}\r\n\r\nfunction resetFields() {\r\n  vm.title = \'\';\r\n  vm.content = \'\';\r\n  vm.excerpt = \'\';\r\n}\r\n```\r\n\r\nEl servicio createPostData(data) recibe la entrada y la envía a la Rest Api de Wordpress mediante POST. Devolviendo la respuesta del servidor.\r\n\r\n```\r\nreturn {\r\n  createPostData: createPostData\r\n};\r\n\r\nfunction createPostData(data) {\r\n  return $http({\r\n    method : "POST",\r\n    url : URL\\_API.BASE\\_URL + \'/wp/v2/posts\',\r\n    data: data,\r\n  }).then(function(response) {\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n```\r\n\r\nLos campos para la creación de la nueva entrada está dentro de la tabla donde se pintan todas las entradas. Será enviado al controlador al activar el evento createPost(vm): ng-click="vm.createPost(vm)"\r\n\r\n```\r\n<table>\r\n...\r\n  <tr>\r\n    <td></td>\r\n    <td><input type="text" ng-model="vm.title" id="title" placeholder="Título" class="form-control" /></td>\r\n    <td><input type="text" ng-model="vm.content" id="content" placeholder="Contenido" class="form-control" /></td>\r\n    <td><input type="text" ng-model="vm.excerpt" id="excerpt" placeholder="Extracto" class="form-control" /></td>\r\n    <td colspan="2"><a href="" ng-click="vm.createPost(vm)" type="submit" class="btn btn-primary">Crear post</a></td>\r\n  </tr>\r\n  ...\r\n</table>\r\n```\r\n\r\n## Eliminar una entrada\r\n\r\nPara eliminar una entrada la realizaremos desde la vista \'/posts\' con el controlador \'PostsCtrl\'. El método deletePost(id) necesita la ID de la entrada a eliminar. Igual que hasta ahora, usamos para ello un servicio deletePostData(id) que se encarga de enviar la petición al servidor. Una vez procesado, se vuelve a solicitar todas las entradas con getAll() para actualizar la lista.\r\n\r\n```\r\nvar vm = this;\r\n\r\nvm.deletePost = deletePost;\r\n\r\nfunction deletePost(id) {\r\n  PostsServices.deletePostData(id).then(function(dataResponse) {\r\n    console.log(dataResponse);\r\n    getAll();\r\n  });\r\n}\r\n```\r\n\r\nEl servicio deletePostData(id) se encarga de enviar la petición DELETE a la Rest Api de Wordpress con la ID de la entrada a eliminar.\r\n\r\n```\r\nreturn {\r\n  deletePostData: deletePostData\r\n};\r\n\r\nfunction deletePostData(id) {\r\n  return $http({\r\n    method : "DELETE",\r\n    url : URL\\_API.BASE\\_URL + \'/wp/v2/posts/\' + id,\r\n  }).then(function(response) {\r\n    console.log("Se ha eliminado: ", response.data);\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n```\r\n\r\nEn la vista de todas las entradas aparece justo al lado de cada entrada un botón para eliminar la entrada.\r\n\r\n```\r\n<a ng-click="vm.deletePost(post.id)" class="btn btn-danger">\r\n  <i class="glyphicon glyphicon-trash"></i>\r\n</a>\r\n```\r\n\r\nHasta aquí está el **crud completo con AngularJS usando Wordpress como Api Rest.** [https://github.com/ivanalbizu/angular\\_wordpress\\_rest_api](http://Git Hub) En siguientes entradas publicaré como obtener las revisiones de una entrada.'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Angular consumiendo de WordPress Rest Api – Custom post types'\r\ndate: Mon, 09 May 2016 20:07:31 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Php,Wordpress\r\n---\r\n\r\nEn esta cuarta entrada sobre AngularJS y Wordpress Rest Api voy a crear una entrada personalizada de Wordpress y añadir nuevo tipo de campo. Esta nueva entrada y sus nuevos campos serán consultados desde AngularJS. (Al final de la entrada he publicado un vídeo y el repositorio en Git Hub). Buena parte del código del cliente AngularJS será muy similar a una entrada anterior, en la que consumía las entradas de la [Rest Api de Wordpress con AngularJS](http://ivanalbizu.eu/angular-consumiendo-wordpress-rest-api-crud/), por tanto, no voy a repetir el código y sólo añadiré aquellas cosas que lo hagan diferente.\r\n\r\n## Configurando wordpress\r\n\r\nLo primero es crear los tipos de entradas. En mi tema de Wordpress, en mi caso tema hijo de twentyfifteen, he editado el archivo functions.php para añadir el tipo de entrada. La documentación de [Wordpress Rest Api](http://v2.wp-api.org/extending/custom-content-types/) está bastante bien, incluso explica como crear un tipo de entrada personalizada. Lo más importante es habilitar a las opciones del tipo que se muestra en nuestra Rest Api, para ello hay que pasarle como argumento: 'show_in_rest'=> true. Hay más opciones, como la de cambiar los 'endpoint', en mi caso no lo he cambiado, ya que por defecto será en nombre de la entrada.\r\n\r\n```\r\nglobal $theme_name;\r\n\r\nadd_action( 'wp_enqueue_scripts', 'theme_enqueue_styles' );\r\nadd_action( 'init', 'create_custom_post_types' );\r\n\r\nfunction theme_enqueue_styles() {\r\n  wp_enqueue_style( 'parent-style', get_template_directory_uri() . '/style.css' );\r\n}\r\n\r\nfunction create_custom_post_types() {\r\n\t$taxonomy_args = array(\r\n\t\t'hierarchical'\t=> true\r\n\t);\r\n\r\n\tcreate_post_type( 'formacion', array( 'formacion_category' ), 'formacion', 'Estudio', 'Estudios' );\r\n\tregister_taxonomy( 'formacion_category', 'formacion', $taxonomy_args );\r\n\tregister_taxonomy_for_object_type( 'formacion_category', 'formacion' );\r\n}\r\n\r\nfunction create_post_type( $post_type_name, $taxonomies = '', $slug = '', $singular_name = '', $plural_name = '' ) {\r\n\r\n\tglobal $theme_name;\r\n\r\n\tif ( $singular_name == '' ) {\r\n\t\t$singular_name = $post_type_name;\r\n\t}\r\n\r\n\tif ( $plural_name == '' ) {\r\n\t\t$plural_name = $post_type_name . 's';\r\n\t}\r\n\r\n\tif ( $slug == '' ) {\r\n\t\t$slug = $singular_name;\r\n\t}\r\n\r\n\t$post_type_labels = array(\r\n\t\t'name'              => __( $plural_name, $theme_name ),\r\n\t\t'singular_name'\t    => __( $singular_name, $theme_name ),\r\n\t\t'add_new'           => __( 'Add New', $theme_name ),\r\n\t\t'add_new_item'\t    => __( 'Add New ' . $singular_name, $theme_name ),\r\n\t\t'edit'              => __( 'Edit', $theme_name ),\r\n\t\t'edit_item'         => __( 'Edit ' . $singular_name, $theme_name ),\r\n\t\t'new_item'          => __( 'New ' . $singular_name, $theme_name ),\r\n\t\t'view'              => __( 'View ' . $singular_name, $theme_name ),\r\n\t\t'view_item'         => __( 'View ' . $singular_name, $theme_name ),\r\n\t\t'search_items'\t    => __( 'Search ' . $singular_name, $theme_name ),\r\n\t\t'not_found'         => __( 'No ' . $plural_name . ' found', $theme_name ),\r\n\t\t'not_found_in_trash'=> __( 'No ' . $plural_name . ' found in Trash', $theme_name )\r\n\t);\r\n\r\n\t$post_type_options = array(\r\n\t\t'labels'      => $post_type_labels,\r\n\t\t'public'      => true,\r\n\t\t'hierarchical'=> true,\r\n\t\t'has_archive' => true,\r\n\t\t'can_export'  => true,\r\n\t\t'supports'    => array(\r\n      \t\t\t\t\t'title',\r\n      \t\t\t\t\t'editor',\r\n      \t\t\t\t\t'excerpt',\r\n      \t\t\t\t\t'thumbnail',\r\n                      \t\t\t'revisions'\r\n\t\t                ),\r\n\t\t'rewrite'     => array(\r\n\t\t\t\t\t'slug' => $slug\r\n\t\t                ),\r\n    \t\t'show_in_rest'=> true\r\n\t);\r\n\r\n\tif ( $taxonomies != '' && !empty( $taxonomies ) ) {\r\n\t\t$post_type_options\\['taxonomies'\\] = $taxonomies;\r\n\t}\r\n\r\n\tregister_post_type( $post_type_name, $post_type_options );\r\n}\r\n```\r\n\r\nDe momento podemos consultar, entre otros campos, el título, el contenido, el extracto y las revisiones de la nueva entrada creada. Vamos a añadir dos nuevos campos, pero no desde cero, si no con el [plugin Advanced Custom Field](https://wordpress.org/plugins/advanced-custom-fields/). Una vez que hemos creado los campos con el plugin anterior, tendremos que editar el archivo functions.php de nuestro tema de Wordpress. La documentación de Wp Rest Api nos ayuda para registrar los nuevos campos a nuestra Rest. Si visitamos la sección [Extending -> Modifying Response](http://v2.wp-api.org/extending/modifying/) vemos las instrucciones. He usado las tres últimas funciones, tiene muchas líneas pero tan sólo hay que añadir nuestro nombre de campos creados con ACF.\r\n\r\n```\r\n/**\r\n * Add the field \"spaceship\" to REST API responses for posts read and write\r\n */\r\nadd_action( 'rest_api_init', 'slug_register_spaceship' );\r\nfunction slug_register_spaceship() {\r\n  register_rest_field( 'formacion',\r\n    'year',\r\n    array(\r\n      'get_callback'    => 'slug_get_spaceship',\r\n      'update_callback' => 'slug_update_spaceship',\r\n      'schema'          => null,\r\n    )\r\n  );\r\n  register_rest_field( 'formacion',\r\n    'school',\r\n    array(\r\n      'get_callback'    => 'slug_get_spaceship',\r\n      'update_callback' => 'slug_update_spaceship',\r\n      'schema'          => null,\r\n    )\r\n  );\r\n}\r\n/**\r\n * Handler for getting custom field data.\r\n *\r\n * @since 0.1.0\r\n *\r\n * @param array $object The object from the response\r\n * @param string $field_name Name of field\r\n * @param WP_REST_Request $request Current request\r\n *\r\n * @return mixed\r\n */\r\nfunction slug_get_spaceship( $object, $field_name, $request ) {\r\n  return get_post_meta( $object\\[ 'id' \\], $field_name );\r\n}\r\n\r\n/**\r\n * Handler for updating custom field data.\r\n *\r\n * @since 0.1.0\r\n *\r\n * @param mixed $value The value of the field\r\n * @param object $object The object from the response\r\n * @param string $field_name Name of field\r\n *\r\n * @return bool|int\r\n */\r\nfunction slug_update_spaceship( $value, $object, $field_name ) {\r\n  if ( ! $value || ! is_string( $value ) ) {\r\n    return;\r\n  }\r\n\r\n  return update_post_meta( $object->ID, $field_name, strip_tags( $value ) );\r\n}\r\n```\r\n\r\n**Trabajos con AngularJS** Nuestro archivo 'studies-services.js' es prácticamente igual a 'posts-services.js'. Sólo cambiarán las diferentes rutas. Por ejemplo, para obtener todos los registros será: URL_API.BASE_URL + '/wp/v2/formacion'.\r\n\r\n## Crear nuevo registro\r\n\r\nDentro de nuestro controlador 'StudiesCtrl' creamos el método createStudy(study). Tenemos los dos nuevos campos, _year_ y _school_, que como vemos, es igual que el resto de campos\r\n\r\n```\r\nfunction createStudy(study) {\r\n  vm.enable = false;\r\n  var data = $.param({\r\n    title: study.title || 'Sin titulo',\r\n    year: study.year || '', //ACF\r\n    school: study.school || '', //ACF\r\n    content: study.content || 'Lorem',\r\n    status: 'publish',\r\n  });\r\n  StudiesServices.createStudyData(data).then(function(dataResponse) {\r\n    resetFields();\r\n    getAll();\r\n    vm.enable = true;\r\n  });\r\n}\r\n```\r\n\r\nLa única diferencia será en la vista, más en concreto será la forma de pintarla: {{study.year\\[0\\]}}.\r\n\r\n```\r\n<div class=\"row\">\r\n\r\n  <table class=\"table table-striped\">\r\n    <tr>\r\n      <th width=\"25%\">Estudio</th>\r\n      <th width=\"10%\">Año</th>\r\n      <th width=\"15%\">Colegio</th>\r\n      <th width=\"40%\">Detalle formación</th>\r\n      <th width=\"10%\" colspan=\"2\">Acciones</th>\r\n    </tr>\r\n    <tr>\r\n      <td><input type=\"text\" ng-model=\"vm.title\" id=\"title\" placeholder=\"Título\" class=\"form-control\" /></td>\r\n      <td><input type=\"text\" ng-model=\"vm.year\" id=\"year\" name=\"year\" placeholder=\"Año\" class=\"form-control\" /></td>\r\n      <td><input type=\"text\" ng-model=\"vm.school\" id=\"school\" name=\"school\" placeholder=\"Colegio\" class=\"form-control\" /></td>\r\n      <td><input type=\"text\" ng-model=\"vm.content\" id=\"content\" placeholder=\"Contenido\" class=\"form-control\" /></td>\r\n      <td colspan=\"2\">\r\n        <a href=\"\" ng-click=\"vm.createStudy(vm)\" type=\"submit\" ng-disabled=\"!vm.enable\" class=\"btn btn-primary\">Crear estudio</a>\r\n      </td>\r\n    </tr>\r\n    <tr ng-repeat=\"study in vm.studies\">\r\n      <td ng-bind-html=\"study.title.rendered\"></td>\r\n      <td>{{study.year\\[0\\]}}</td>\r\n      <td>{{study.school\\[0\\]}}</td>\r\n      <td ng-bind-html=\"study.content.rendered\"></td>\r\n      <td>\r\n        <a href=\"#/study/{{study.id}}\" class=\"btn btn-warning\"><i class=\"glyphicon glyphicon-eye-open\"></i></a>\r\n      </td>\r\n      <td>\r\n        <a ng-click=\"vm.deleteStudy(study.id)\" ng-disabled=\"!vm.enable\" class=\"btn btn-danger\"><i class=\"glyphicon glyphicon-trash\"></i></a>\r\n      </td>\r\n    </tr>\r\n  </table>\r\n\r\n</div>\r\n```\r\n\r\n## Editar un registro\r\n\r\nEs similar a lo anterior, por lo que no explico otra vez lo mismo, el código es:\r\n\r\n```\r\nfunction editStudy(study, id) {\r\n  var data = $.param({\r\n    title: study.title.rendered,\r\n    year: study.year.toString() || '',\r\n    school: study.school.toString() || '',\r\n    content: study.content.rendered || 'Lorem',\r\n    slug: encodeURIComponent(study.title.rendered.replace(/\\\\s+/g, '-').toLowerCase()),\r\n  });\r\n  StudyServices.editStudyData(data, id).then(function(dataResponse) {\r\n    console.log(\"Se guarda en el modal \", dataResponse);\r\n    $modalInstance.close($route.reload());\r\n  });\r\n}\r\n```\r\n\r\n```\r\n<h2>Contenido del ESTUDIO número {{vm.study.id}}</h2>\r\n<h3>Título: {{vm.study.title.rendered}}</h3>\r\n<h4>Año: {{vm.study.year\\[0\\]}}</h4>\r\n<h4>Colegio: {{vm.study.school\\[0\\]}}</h4>\r\n<h4>Contenido:</h4>\r\n<div ng-bind-html=\"vm.study.content.rendered\"></div>\r\n<a href=\"{{vm.study.link}}\" target=\"_blank\">{{vm.study.link}}</a><br>\r\n<button class=\"btn btn-primary\" ng-click=\"vm.openModal()\">Editar estudio</button>\r\n\r\n<div>\r\n  <script type=\"text/ng-template\" id=\"modal.html\">\r\n    <form ng-submit=\"vmm.editStudy(vmm.study, vmm.study.id)\" method=\"post\" role=\"form\">\r\n      <div class=\"modal-header\">\r\n        <h3 class=\"modal-title\">{{vmm.messageText}}</h3>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <h4>Título: {{vmm.study.title.rendered}}</h4>\r\n          <div class=\"form-group\">\r\n            <label for=\"title\">Título:</label>\r\n            <input type=\"text\" ng-model=\"vmm.study.title.rendered\" id=\"title\" class=\"form-control\" />\r\n            <label for=\"year\">Año:</label>\r\n            <input type=\"text\" ng-model=\"vmm.study.year\" id=\"year\" name=\"year\" class=\"form-control\" />\r\n            <label for=\"school\">Colegio:</label>\r\n            <input type=\"text\" ng-model=\"vmm.study.school\" id=\"school\" class=\"form-control\" />\r\n            <label for=\"content\">Contenido:</label>\r\n            <textarea rows=\"4\" ng-model=\"vmm.study.content.rendered\" ng-bind-html=\"vmm.study.content.rendered\" id=\"content\" class=\"form-control\"></textarea>\r\n          </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Guardar cambios</button>\r\n        <a href=\"\" class=\"btn btn-danger\" ng-click=\"vmm.cancel()\">Cancel</a>\r\n      </div>\r\n    </form>\r\n  <\/script>\r\n</div>\r\n```\r\n\r\n[https://github.com/ivanalbizu/angular_wordpress_rest_api](http://Git Hub)"},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Angular consumiendo de WordPress Rest Api – Endpoints\'\r\ndate: Tue, 10 May 2016 18:02:38 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Wordpress\r\n---\r\n\r\nSigo hablando en esta entrada sobre Rest Api Wordpress consumida desde AngularJS. Va a ser más breve que los anteriores. Algunas peticiones a la Rest Api puden añadir información extra, tales como paginaciones y filtros. En otras ocasiones necesitamos pasar más parámetros a la URL de la petición para poder hacer GET, POST... (Al final de la entrada he publicado un vídeo y el repositorio en Git Hub). Aprovechando que en otra entrada hablé sobre [obtener y editar usuarios de Wordpress con la Rest Api](http://ivanalbizu.eu/angular-consumiendo-wordpress-rest-api-trabajando-usuarios/), aprovecho para ampliar un poco el post anterior. Visitando la sección de Users de la documentación de Rest Api podemos ver que algunos campos no son editables y otros necesitan para verse o editarse añadir información extra. Se añade al final de la URL el contexto: _embed_, _view_ o _edit_. [![Schema Wordpress Rest Api](storage/wp-content/uploads/2016/05/schema-rest-api.jpg)](http://ivanalbizu.eu/wp-content/uploads/2016/05/schema-rest-api.jpg) Por ejemplo, para obtener y editar el campo \'first_name\' de un usuario tenemos que usar la siguiente URL: url: URL_API.BASE_URL + \'/wp/v2/users/\' + user_id +\'?context=edit\' El código de la factoría que nos devuelve el usuario será:\r\n\r\n```\r\nfunction getCurrentUserData() {\r\n  var user_id = getUserId().user.id;\r\n  return $http({\r\n    method: \'GET\',\r\n    // Se concatena a la URL \'?context=edit\'\r\n    // para poder tener acceso a más campos\r\n    url: URL_API.BASE_URL + \'/wp/v2/users/\' + user_id +\'?context=edit>\',\r\n  }).then(function(response) {\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n```\r\n\r\nAñadimos dos campos al controlador, \'last_name\' y \'first_name\', para editarlos:\r\n\r\n```\r\nfunction editUser(user, id) {\r\n  var data = $.param({\r\n    name: user.name,\r\n    // Dos campos nuevos\r\n    // No editables sin añadir el \'context\'\r\n    first_name: user.first_name,\r\n    last_name: user.last_name,\r\n    description: user.description,\r\n    url: user.url\r\n  });\r\n  UserServices.editUserData(data, id).then(function(dataResponse) {\r\n    vm.enable = false;\r\n    getCurrentUser();\r\n    console.log(dataResponse);\r\n  });\r\n}\r\n```\r\n\r\nY la vista quedaría así:\r\n\r\n```\r\n<div class="form-group">\r\n  <label for="email">Email</label>\r\n  <input type="text" value="{{vm.user.email}}" name="email" class="form-control" disabled>\r\n</div>\r\n<div class="form-group">\r\n  <label for="last_name">Last name</label>\r\n  <input type="text" ng-model="vm.user.last_name" ng-disabled="!vm.enable" value="{{vm.user.last_name}}" name="last_name" class="form-control">\r\n</div>\r\n<div class="form-group">\r\n  <label for="first_name">First name</label>\r\n  <input type="text" ng-model="vm.user.first_name" ng-disabled="!vm.enable" value="{{vm.user.first_name}}" name="first_name" class="form-control">\r\n</div>\r\n```\r\n\r\nHe añadido un tercer campo, email, que en este caso sólo lo he mostrado, pero no editado. [https://github.com/ivanalbizu/angular_wordpress_rest_api](http://Git Hub)'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Angular consumiendo de WordPress Rest Api – Trabajando con usuarios'\r\ndate: Sun, 08 May 2016 12:32:51 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Wordpress\r\n---\r\n\r\nEn esta entrada es continuación de dos entradas anteriores sobre Wordpress y Angular, [Autenticación con JWT](http://ivanalbizu.eu/angular-consumiendo-wordpress-rest-api-autenticacion/) y [CRUD con entradas de Wordpress](http://ivanalbizu.eu/angular-consumiendo-wordpress-rest-api-crud/). En esta ocasión sólo voy a obtener el usuario actualmente autenticado y permitir edición de algunos campos de su perfil. Podría mejorarse el tratamiento de las páginas que puede ver un usuario, como por ejemplo no mostrar toda la navegación ni mostrar la página de login si ya está Autenticado. No me extenderé mucho ya que muchas cosas son comunes y repetitivas en mis anteriores publicaciones. (Al final de la entrada he publicado un vídeo y el repositorio en Git Hub). Vamos a realizar:\r\n\r\n*   Obtener el usuario autenticado.\r\n*   Habilitar al usuario la edición de algunos de sus datos.\r\n*   Vistas.\r\n\r\nCuando la ruta sea '/user' usaremos la vista 'views/user.html' y el controlador 'UserCtrl'\r\n\r\n```\r\n.when('/user', {\r\n  templateUrl: 'views/user.html',\r\n  controller: 'UserCtrl',\r\n  controllerAs: 'vm'\r\n})\r\n```\r\n\r\n## Obtener el usuario autenticado\r\nEl método getCurrentUser() del controlador 'UserCtrl' obtendrá (caso de existir) el token almacenado en el LocalStorage del navegador y lanzará la petición a la factoría getCurrentUserData del archivo 'users.services.js' para obtener los datos del usuario y guardarlo en user: 'vm.user = dataResponse;' añadiendo una nueva variable 'vm.login = 3' para mostrar o no usando la directiva 'ng-show' en la vista.\r\n\r\n```\r\nvar vm = this;\r\nvm.login = '1';\r\n\r\nvm.getCurrentUser = getCurrentUser;\r\n\r\nvm.getCurrentUser();\r\n\r\nfunction getCurrentUser() {\r\n  if (typeof window.localStorage !== 'undefined') {\r\n    try {\r\n      if (window.localStorage.getItem('token') == null) {\r\n        vm.login = '2';\r\n        $location.path('/login');\r\n      } else {\r\n        vm.login = '3';\r\n        UserServices.getCurrentUserData().then(function(dataResponse) {\r\n          vm.user = dataResponse;\r\n        });\r\n      }\r\n    } catch(e) {\r\n      vm.login = '4';\r\n      $location.path('/login');\r\n    }\r\n  } else {\r\n    vm.login = '5';\r\n    $location.path('/login');\r\n  }\r\n}\r\n```\r\n\r\nEn el archivo 'users-services.js' tenemos dos métodos para obtener el usuario getUserId() y getCurrentUserData(). El método getUserId() decodificará el Json Web Token (JWT) para devolver la id del usuario.\r\n\r\n```\r\nfunction getUserId() {\r\n  try{\r\n    var token = localStorage\\['token'\\];\r\n    if (token === '') return;\r\n\r\n    var base64Url = token.split('.')\\[1\\];\r\n    var base64 = base64Url.replace('-', '+').replace('_', '/');\r\n\r\n    console.log(JSON.parse(window.atob(base64)).data);\r\n\r\n    return JSON.parse(window.atob(base64)).data;\r\n  } catch(err) {\r\n    //$location.path('/');\r\n  }\r\n}\r\n```\r\n\r\nPara más información podemos visitar la [web https://jwt.io](https://jwt.io/) y trastear un poco. Por ejemplo, he obtenido el token generado imprimiendo en el método anterior 'console.log(base64);' y lo he copiado en la web anterior, y me ha dado la ID de usuario 1: [![JWT Json Web Token](storage/wp-content/uploads/2016/05/jwt-header.png)](http://ivanalbizu.eu/wp-content/uploads/2016/05/jwt-header.png) El otro método, getCurrentUserData(), devolverá los datos del usuario al controlador haciendo petición GET a la URL de la Api de Wordpress 'URL\\_API.BASE\\_URL + '/wp/v2/users/' + user_id'.\r\n\r\n```\r\nfunction getCurrentUserData() {\r\n  var user_id = getUserId().user.id;\r\n  return $http({\r\n    method: 'GET',\r\n    url: URL\\_API.BASE\\_URL + '/wp/v2/users/' + user_id,\r\n  }).then(function(response) {\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\nreturn {\r\n  getCurrentUserData: getCurrentUserData,\r\n};\r\n```\r\n\r\n## Edición de un usuario\r\nLos datos que el usuario puede editar son su nombre, descripción (biografía) y link (link personalizado, no el link propio a su perfil de Wordpress). La petición a la Rest de Api de Wordress se realizará con el método editUserData(data, id) del servicio ''UserServices' mediante POST pasando como parámetro los campos editados y la ID del usuario.\r\n\r\n```\r\nfunction editUserData(data, id) {\r\n  return $http({\r\n    method : \"POST\",\r\n    url : URL\\_API.BASE\\_URL + '/wp/v2/users/' + id,\r\n    data: data,\r\n  }).then(function(response) {\r\n    return response.data;\r\n  }, function(error) {\r\n    console.log(error);\r\n  });\r\n}\r\n\r\nreturn {\r\n  editUserData: editUserData,\r\n};\r\n```\r\n\r\nEn el controlador UserCtrl contiene el método editUser(data, id) que lanza la petición al servicio tras obtener en la vista los campos editados y la Id del usuario, refrescando la vista con la llamada getCurrentUser() si la petición fue correcta.\r\n\r\n## Configurando la vista\r\n\r\nLa vista es mostrada al usuario en 'views/user.html'. Las etiquetas html usadas son de un formulario. Por defecto los campos el formulario aparecen deshabilitados mediante la directiva 'ng-disabled = !vm.enable'. Se usa una variable 'enable' para controlar estados. Al cargar el controlador por defecto enable toma el valor 'false'. Existe tres botones. Uno de ellos habilita la edición del formulario. Los otros dos (Cancelar y Guardar) se muestran cuando se ha seleccionado el primero (en este caso, el primer botón se oculta). Según los diferentes casos se opera con la variable cambiando su valor.\r\n\r\n```\r\n<div ng-show=\"vm.login === '3'\">\r\n  <form ng-submit=\"vm.editUser(vm.user, vm.user.id)\" method=\"post\" role=\"form\">\r\n    <h2>Datos del usuario: </h2>\r\n    <div class=\"form-group\">\r\n      <label for=\"id\">ID</label>\r\n      <input type=\"text\" value=\"{{vm.user.id}}\" name=\"nombre\" class=\"form-control\" disabled>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"nombre\">Nombre</label>\r\n      <input type=\"text\" ng-model=\"vm.user.name\" ng-disabled=\"!vm.enable\" value=\"{{vm.user.name}}\" name=\"nombre\" class=\"form-control\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"description\">Biografía</label>\r\n      <input type=\"text\" ng-model=\"vm.user.description\" ng-disabled=\"!vm.enable\" value=\"{{vm.user.description}}\" name=\"description\" class=\"form-control\">\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label for=\"url\">Url del autor</label>\r\n      <input type=\"url\" ng-model=\"vm.user.url\" ng-disabled=\"!vm.enable\" value=\"{{vm.user.url}}\" name=\"url\" class=\"form-control\">\r\n    </div>\r\n    <button ng-show=\"vm.enable == true\" type=\"submit\" class=\"btn btn-primary\">Guardar cambios</button>\r\n    <a ng-show=\"vm.enable == false\" ng-click=\"vm.enable = !vm.enable\" class=\"btn btn-default\">Habilitar edición</a>\r\n    <a ng-show=\"vm.enable == true\" ng-click=\"vm.cancelEditUser()\" class=\"btn btn-danger\">Cancelar</a>\r\n  </form>\r\n</div>\r\n```\r\n\r\n[Git Hub](https://github.com/ivanalbizu/angular_wordpress_rest_api) En siguientes entradas me gustaría poder practicar con Custom Post Types. Añadiendo mi propio tipo de entrada y habilitarla para la Rest Api."},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'AngularJS consumiendo de servicio Django'\r\ndate: Mon, 09 Nov 2015 11:29:53 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript\r\n---\r\n\r\nEn esta ocasión publico entrada sobre Angular como cliente y Django como servicio REST. Contendrá dos modelos, libro y autores. Los campos de libro son título, editorial, género y su autor. Los campos de autor serán nombre y apellidos. Las peticiones son enviadas desde angular usando **$resource** hacía **Django rest framework**.\r\n\r\n## Cliente - Services\r\n\r\nEn la \"Factory\" BookServices (similar para autores) se definen los métodos GET, POST, PUT y DELETE para manipular un registro de tipo libro.\r\n\r\n```\r\n.factory('BookServices', \\['$resource',\r\n  function($resource) {\r\n    return $resource(\r\n      'http://127.0.0.1:8000/books/:id', {}, {\r\n        get: {method: 'GET', cache: false, isArray: false},\r\n        save: {method: 'POST', cache: false, isArray: false},\r\n        update: {method: 'PUT', cache: false, isArray: false},\r\n        delete: {method: 'DELETE', cache: false, isArray: false}\r\n      });\r\n  }\\])\r\n```\r\n\r\nEn la \"Factory\" BooksServices (similar para autores) se define el método GET que devolverá todos los registros de tipo libro.\r\n\r\n```\r\n.factory('BooksServices', \\['$resource',\r\n  function($resource) {\r\n    return $resource(\r\n      'http://127.0.0.1:8000/books', {}, {\r\n        get: {method: 'GET', cache: false, isArray: true}\r\n      });\r\n  }\\])\r\n```\r\n\r\n## Cliente - Controllers\r\n\r\nExisten tres \"controllers\": BookCtrl, CurrentBookCtrl y NewBookCtrl.\r\n\r\n*   Con BookCtrl se obtienen todos los registros, haciendo la llamada al método get de BooksServices.\r\n\r\n```\r\n.controller('BookCtrl', \\['$scope', 'BooksServices',\r\n  function ($scope, BooksServices) {\r\n    BooksServices.get({},\r\n      function success(response) {\r\n        $scope.books = response;\r\n      },\r\n      function error(errorResponse) {\r\n        console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n      }\r\n    )\r\n}\\])\r\n```\r\n\r\n*   Con CurrentBookCtrl se permite obtener un registro, borrarlo y editarlo llamando a los métodos get, delete y update respectivamente de BookServices.\r\n\r\n```\r\n.controller('CurrentBookCtrl', \\['$scope', '$routeParams', '$location', 'BookServices',\r\n  function ($scope, $routeParams, $location, BookServices) {\r\n\r\n    var bookId = $routeParams.id;\r\n\r\n    BookServices.get({id: bookId},\r\n      function success(response) {\r\n        JSON.stringify(response);\r\n        $scope.book = response;\r\n      },\r\n      function error(errorResponse) {\r\n        console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n      }\r\n    );\r\n\r\n    $scope.delete = function(bookId) {\r\n      BookServices.delete({id: bookId},\r\n        function success(response) {\r\n          $location.path('/');\r\n        },\r\n        function error(errorResponse) {\r\n          console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n        }\r\n      )\r\n    };\r\n\r\n    $scope.update = function(data) {\r\n      BookServices.update({id: bookId}, data,\r\n        function success(response) {\r\n          $location.path('/');\r\n        },\r\n        function error(errorResponse) {\r\n          console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n        }\r\n      )\r\n    };\r\n\r\n}\\])\r\n```\r\n\r\n*   Con NewBookCtrl se permite crear un nuevo registro llamando al método  save de BookServices.\r\n\r\n```\r\n.controller('NewBookCtrl', \\['$scope', '$location', 'BookServices', '$controller',\r\n  function ($scope, $location, BookServices, $controller) {\r\n    $scope.save = function(data) {\r\n      BookServices.save(data,\r\n        function success(response) {\r\n          $location.path('/');\r\n          console.log(response);\r\n        },\r\n        function error(errorResponse) {\r\n          alert(\"Campos incompletos\");\r\n        }\r\n      )\r\n    };\r\n\r\n}\\])\r\n```\r\n\r\n## Servidor - Django Rest Framework\r\n\r\nCómo he comentado, el servidor será Django Rest Framework. En este caso no entro en detalle, sólo comentar que los archivos creados y/o editados son: settings.py, urls.py, models.py, viewsets.py, serializers.py\r\n\r\n*   En settings.py se añaden las dependencias y configuraciones de \"rest_framework\" y \"corsheaders\" (este último para simplificar y evitar problemas con CORS).\r\n\r\n```\r\nINSTALLED_APPS = (\r\n    # Otras configuraciones\r\n    'rest_framework',\r\n    'corsheaders',\r\n)\r\n\r\nMIDDLEWARE_CLASSES = (\r\n    # Otras configuraciones\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n)\r\n\r\nREST_FRAMEWORK = {\r\n    'DEFAULT\\_AUTHENTICATION\\_CLASSES': (\r\n        # Simplicar operaciones\r\n        'rest_framework.permissions.AllowAny',\r\n    )\r\n}\r\n\r\nAPPEND_SLASH = False\r\nCORS\\_ORIGIN\\_ALLOW_ALL = True\r\n```\r\n\r\n*   En urls.py como su nombre indica se definen el tema de rutas.\r\n\r\n```\r\nfrom django.conf.urls import patterns, include, url\r\nfrom django.contrib import admin\r\nadmin.autodiscover()\r\n\r\nfrom apprest.viewsets import LibroViewSet, AutorViewSet\r\nfrom rest_framework.routers import DefaultRouter\r\nrouter = DefaultRouter(trailing_slash=False)\r\nrouter.register(r'books', LibroViewSet)\r\nrouter.register(r'authors', AutorViewSet)\r\n\r\nurlpatterns = patterns('',\r\n    url(r'^', include(router.urls)),\r\n    url(r'^api-auth/', include('rest\\_framework.urls', namespace='rest\\_framework')),\r\n\r\n    url(r'^admin/', include(admin.site.urls)),\r\n)\r\n```\r\n\r\n*   En models.py se crean los modelos y sus campos.\r\n\r\n```\r\nfrom django.db import models\r\n\r\nclass Autor(models.Model):\r\n    nombre = models.TextField(max_length=100)\r\n    apellido = models.TextField(max_length=100)\r\n\r\nclass Libro(models.Model):\r\n    nombre = models.TextField(max_length=100)\r\n    editorial = models.TextField(max_length=100)\r\n    genero = models.TextField(max_length=100)\r\n    autor = models.ForeignKey(Autor)\r\n```\r\n\r\n*   En serializers.py se serializan los modelos.\r\n\r\n```\r\nfrom rest_framework.serializers import ModelSerializer\r\nfrom .models import Libro, Autor\r\n\r\nclass LibroSerializer(ModelSerializer):\r\n    class Meta:\r\n        model = Libro\r\n        fields = ('id', 'nombre', 'editorial', 'genero', 'autor')\r\n\r\nclass AutorSerializer(ModelSerializer):\r\n    class Meta:\r\n        model = Autor\r\n        fields = ('id', 'nombre', 'apellido')\r\n```\r\n\r\n*   Los viewsets.py son necesarios para hacer la conexión de los modelos serializados con el ruteo de urls en urls.py\r\n\r\n```\r\nfrom .models import Libro, Autor\r\nfrom .serializers import LibroSerializer, AutorSerializer\r\nfrom rest_framework import viewsets\r\n\r\nclass LibroViewSet(viewsets.ModelViewSet):\r\n    serializer_class = LibroSerializer\r\n    queryset = Libro.objects.all()\r\n\r\nclass AutorViewSet(viewsets.ModelViewSet):\r\n    serializer_class = AutorSerializer\r\n    queryset = Autor.objects.all()\r\n```\r\n\r\nHasta aquí la configuración de Django Rest Framework. Sobre el cliente he obviado cosas para no hacerlo muy extenso. En mi repositorio de [GitHub](https://github.com/ivanalbizu/django_angular) se puede encontrar todo el código de AngularJS."},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'AngularJS Wordpress Theme\'\r\ndate: Wed, 26 Oct 2016 21:09:21 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Php,Sass,Wordpress\r\n---\r\n\r\nAngular Wordpress Theme. Plantilla **Wordpress** construida con **AngularJS**, Wp Rest Api, ACF El código se encuentra en mi [GitHub](https://github.com/ivanalbizu/Angular-Wordpress-Theme/blob/master/README.md) Los pasos son los siguientes.\r\n\r\n## Después de habilitar el tema\r\n\r\n*   Instalar y habilitar los plugins\r\n*   Especificar la ruta base de la instalación. En header.php la etiqueta <base href="/wordpress/">\r\n*   Importar los custom fields con el archivo "advanced-custom-field-export.xml"\r\n*   Editar el formulario de contacto que generar Contact Form 7 por defecto.\r\n    *   Al campo correo electrónico añadir la siquiente ID: id:checkvalid\r\n    *   Al campo submit añadir las siguientes clases: class:waves-effect class:waves-light class:btn class:cyan class:darken-3\r\n\r\n## Crear contenido\r\n\r\n*   Crear una página y añadir los campos necesarios\r\n*   Hay dos tipo de entradas: ventas y alquileres. Crear contenido para ambos (para el tipo venta hay un campo llamado "Destacada venta", la entrada que la tenga marcada se mostrará en la Home)\r\n\r\nPara ver la demo en funcionamiento: [http://inmo.mentiraspoliticas.es](http://inmo.mentiraspoliticas.es)'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'AngularJS y Google Keep'\r\ndate: Sun, 15 Nov 2015 17:01:12 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript\r\n---\r\n\r\nNo pretendo implementar todas las funcionalidades con AngularJS que tiene Google Keep, sólo alguna de ellas. Al final de la entrada hay enlace al código en GitHub y vídeo. Se podrán crear nuevas tareas, eliminarlas, editar su título y su contenido, cambiar los colores de fondo y filtrarlas. Una tarea estará compuesta por:\r\n\r\n*   Título\r\n*   Descripción\r\n*   Color de fondo\r\n*   Fecha de creación\r\n*   Fecha de última actualización\r\n\r\nLa API la he construido con Django Rest Framework. Al final de la entrada colocaré el código necesario. El cliente está construido con AngularJS, con el generador [yeoman.io](http://yeoman.io/).\r\n\r\n## Cliente AngularJS - Servicios y Controladores\r\n\r\nLas peticiones GET, POST, PUT y DELETE se hacen a Django Rest Framework, cuyda definición está en el archivo service.js. No hay mucho que explicar, sólo comentar que se usa $resource, dada la sencillez de la aplicación.\r\n\r\n```\r\n'use strict';\r\n\r\nangular.module('gkeepApp')\r\n  .factory('TaskServices', ['$resource',\r\n    function ($resource) {\r\n      var url_one = 'http://127.0.0.1:8000/tasks/:id';\r\n      var url_all = 'http://127.0.0.1:8000/tasks';\r\n      return $resource(\r\n        url_one, {}, {\r\n          get: {method: 'GET', cache: false, isArray: false},\r\n          save: {method: 'POST', cache: false, isArray: false},\r\n          update: {method: 'PUT', cache: false, isArray: false},\r\n          delete: {method: 'DELETE', cache: false, isArray: false},\r\n          get_all: {method: 'GET', url: url_all, cache: false, isArray: true},\r\n        }\r\n      );\r\n  }]);\r\n```\r\n\r\nEn el controlador me detendré un poco más. El primer método, _getAll()_, obtiene todos los registros.\r\n\r\n```\r\n$scope.getAll = function() {\r\n  TaskServices.get_all({},\r\n    function success(response) {\r\n      $scope.tasks = response;\r\n    },\r\n    function error(errorResponse){\r\n      console.log(\"Error: \"+ JSON.stringify(errorResponse));\r\n    }\r\n  )\r\n}\r\n```\r\n\r\nEl método _save(data)_ será para crear un nuevo registro. Si algún campo falta (Título o Descripción -el resto de campos son autorellenados-) saldrá un alert. Si todo fue bien, dentro de la función \"success\", se actualizan los cambios llamando a getAll() y reseteando el contenido de las etiquetas y vaciando el modelo.\r\n\r\n```\r\n$scope.save = function(data) {\r\n  TaskServices.save(data,\r\n    function success(response) {\r\n      document.getElementById('newtask').style.display = \"none\";\r\n      $scope.newtask='';\r\n      $scope.getAll();\r\n    },\r\n    function error(errorResponse) {\r\n      alert(\"Empty fields\");\r\n    }\r\n  )\r\n};\r\n```\r\n\r\nEl método _delete(id)_ toma la id de la tarea que se va a eliminar.\r\n\r\n```\r\n$scope.delete = function(id) {\r\n  TaskServices.delete({id: id},\r\n    function success(response) {\r\n      $scope.getAll();\r\n    },\r\n    function error(errorResponse) {\r\n      console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n    }\r\n  )\r\n};\r\n```\r\n\r\nEl método _saveColor(id, data, color)_ toma tres parámetros con los que se construirá un nuevo modelo, que será usado para actualizar la tarea seleccionada.\r\n\r\n```\r\n$scope.saveColor = function(id, data, color) {\r\n  var task = {\r\n    'id': id,\r\n    'title': data.title,\r\n    'description': data.description,\r\n    'color': 'rgba('+color+',0.90);'\r\n  };\r\n  TaskServices.update({id: id}, task,\r\n    function success(response) {\r\n      $scope.getAll();\r\n    },\r\n    function error(errorResponse) {\r\n      console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n    }\r\n  )\r\n};\r\n```\r\n\r\nEl método _update(id, data)_ actualiza el registro. La actualización se realiza cada vez que se edite o bien el título o bien la descripción de la tarea. Si algunos de los dos campos anteriores se dejan en blanco, no se actualizará su contenido.\r\n\r\n```\r\n$scope.update = function(id, data) {\r\n  if (data.description !== '' && data.title !== ''){\r\n    TaskServices.update({id: id}, data,\r\n      function success(response) {\r\n        $scope.getAll();\r\n      },\r\n      function error(errorResponse) {\r\n        console.log(\"Error:\"\t+\tJSON.stringify(errorResponse));\r\n      }\r\n    )\r\n  } else {\r\n    $scope.getAll();\r\n    alert(\"Empty fields\");\r\n  }\r\n};\r\n```\r\n\r\nEl método _cancel()_ será llamado cuando no se quiera crear una una nueva tarea.\r\n\r\n```\r\n$scope.cancel = function() {\r\n  document.getElementById('newtask').style.display = \"none\";\r\n  $scope.newtask='';\r\n};\r\n```\r\n\r\n## Cliente AngularJS - Vistas\r\n\r\nEn **index.html** se añade dentro de la navegación el input para buscar y el vínculo para hacer visible el formulario para crear nueva tarea. Para activar el filtro de búsqueda se llama a la directiva _ng-model=\"search\"_ y en la directiva ng-repeat se aplica el filtro _ng-repeat=\"task in tasks | filter:search\"_ Para abrir el formulario de creación de nueva tarea se usa el evento _onclick_ de javascript que cambia el display del contenedor del formulario. En **main.html** se pintan todas las tareas. Para ello, iniciamos todas las tareas con _ng-init=\"getAll()\"_. Cada tarea estará dentro de una etiqueta _article_. Cada _article_ se divide en tres zonas: _header_, _div_ y _footer_. El _header_ contiene el título de la tarea dentro de un _input_ al que se resetean los estilos y se añade la directiva _ng-change_, que en caso de cambiar su contenido cuando el _input_ pierda el foco _ng-model-options_ se llama al método update(task.id, task). Otro elemento que contiene el _header_ es un submenú para el cambio de colores y la eliminación de la tarea. Con Bootstrap se habilita el menú desplegable. Cada uno de los elementos _li_ contiene un color diferente que en caso de llamarse el evento click _ng-click=\"saveColor(task.id, task, '132,198,100');...\"_ se guardará en color que se hubiera seleccionado. También, aunque no necesario, cuando se activa el evento se guarda en una variable _selected_color _el color seleccionado, que puede ser aplicado mediante la directiva _ng-style_ al _article._ La etiqueta _div_ con clase _content_ contiene un _textarea,_ que al igual que el input para el título ha sido reseteado, y usa la directiva _ng-change_ que llama al método _update(task.id, task)_ cuando el _textarea_ pierde el foco y el contenido a cambiado, todo ello gracias a _ng-model-options=\"{updateOn: 'blur'}\"_. En el footer se pintan las fechas de creación _{{task.created | date:\"dd/MM/yyyy\"}}_ y la última edición de la tarea _{{task.updated | date:\"dd/MM/yyyy h:mma\"}}_. Para la creación de una nueva tarea se dispone de un formulario con _input_ (para el título) y _textarea_ (para la descripción). Por defecto el formulario no está visible. No hay mucho que explicar, hay botón para guardar, que en caso de que estén los datos rellenos se guardan, se resetean y se oculta el formulario, y si se cancela se resetea el formulario y se cierra. El código completo está publicado en mi [GitHub](https://github.com/ivanalbizu/angular_gkeep). Y aquí un vídeo en el que explico todo lo anterior. \r\n\r\nCódigo Rest con Django Rest Framework:\r\n\r\n```\r\n##############\r\n## settings.py\r\n##############\r\n\r\nINSTALLED_APPS = (\r\n    ## ...\r\n    'rest_framework',\r\n    'app',\r\n    'corsheaders',\r\n)\r\n\r\nMIDDLEWARE_CLASSES = (\r\n    ## ...\r\n    'django.middleware.csrf.CsrfViewMiddleware',\r\n    'corsheaders.middleware.CorsMiddleware',\r\n)\r\n\r\nREST_FRAMEWORK = {\r\n    'DEFAULT_AUTHENTICATION_CLASSES': (\r\n        'rest_framework.permissions.AllowAny',\r\n    )\r\n}\r\n\r\nAPPEND_SLASH = False\r\nCORS_ORIGIN_ALLOW_ALL = True\r\n\r\n\r\n############\r\n## models.py\r\n############\r\n\r\nfrom django.db import models\r\n\r\nclass Task(models.Model):\r\n    title = models.TextField(max_length=100)\r\n    description = models.TextField(max_length=1000)\r\n    color = models.TextField(max_length=30, blank=True, default='rgba(62,75,78,0.90);')\r\n    created = models.DateTimeField(auto_now_add=True, auto_now=False)\r\n    updated = models.DateTimeField(auto_now_add=False, auto_now=True)\r\n\r\n\r\n#################\r\n## serializers.py\r\n#################\r\n\r\nfrom rest_framework.serializers import ModelSerializer\r\nfrom .models import Task\r\n\r\nclass TaskSerializer(ModelSerializer):\r\n    class Meta:\r\n        model = Task\r\n        fields = ('id', 'title', 'description', 'color', 'updated', 'created')\r\n\r\n\r\n##############\r\n## viewsets.py\r\n##############\r\n\r\nfrom .models import Task\r\nfrom .serializers import TaskSerializer\r\nfrom rest_framework import viewsets\r\n\r\nclass TaskViewSet(viewsets.ModelViewSet):\r\n    serializer_class = TaskSerializer\r\n    queryset = Task.objects.all()\r\n\r\n\r\n##########\r\n## urls.py\r\n##########\r\n\r\nfrom django.conf.urls import patterns, include, url\r\nfrom django.contrib import admin\r\nadmin.autodiscover()\r\n\r\nfrom app.viewsets import TaskViewSet\r\nfrom rest_framework.routers import DefaultRouter\r\nrouter = DefaultRouter(trailing_slash=False)\r\nrouter.register(r'tasks', TaskViewSet)\r\n\r\nurlpatterns = [\r\n    url(r'^', include(router.urls)),\r\n    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),\r\n    url(r'^admin/', include(admin.site.urls)),\r\n]\r\n```"},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Animación con css3 - Avión en movimiento\'\r\ndate: Fri, 21 Feb 2014 09:47:56 +0000\r\npublished: true\r\ntags: Css3,JavaScript\r\n---\r\n\r\n**Animación con css3** para crear movimiento de un avión y de su fondo. Se crean controles, mediante unas simple **funciones javascript**, que permitan aumentar o disminuir la velocidad, parar y reanudar la animación css3. Para esta animación he necesitado:\r\n\r\n*   Una **imagen de fondo** simétrica .\r\n*   **Imagen de un avión**.\r\n\r\n<!DOCTYPE html>\r\n<html lang="es">\r\n<head>\r\n\t<meta charset="utf-8">\r\n\t<title>Animación css3</title>\r\n\t<script type="text/javascript" src="js/script.js"><\/script>\r\n\t<link rel="stylesheet" href="css/style.css" type="text/css" />\r\n</head>\r\n<body>\r\n\r\n<div id="visor">\r\n\t\x3c!-- Se usan dos imágenes como paisaje para que el comienzo de una --\x3e\r\n\t\x3c!-- seel fin de la otra y viceversa --\x3e\r\n\t<img src="img/paisaje.jpg" alt="paisaje" id="paisaje">\r\n\t<img src="img/paisaje.jpg" alt="paisaje" id="paisaje2">\r\n\t<img src="img/plane.png" alt="avión volando" id="avion">\r\n</div>\r\n<button id="parar" type="button" onclick="parar()">parar</button>\r\n<button id="reanudar" type="button" onclick="reanudar()">reanudar</button>\r\n<form name="formulario">\r\n\t\x3c!-- El valor contenido en value es el usado para cambiar la duración de la animación --\x3e\r\n\t<select name="velocidad" onchange="cambiar_velocidad()">\r\n\t\t<option value="10s" selected="selected">Normal</option>\r\n\t\t<option value="5s">Rápido</option>\r\n\t\t<option value="2s">Extra Rápido</option>\r\n\t\t<option value="15s">Lento</option>\r\n\t\t<option value="25s">Extra Lento</option>\r\n\t</select>\r\n</form>\r\n\r\n</body>\r\n</html>\r\n\r\nLa imagen de fondo es simétrica y de ancho es el doble a la zona visible de la animación. En mi caso la imagen es de 1200px y el visor (#visor) de 600px. La imagen de fondo la he usado en dos cajas: #paisaje y #paisaje2. El movimiento lo he realizado con **keyframes**, y aplicado sobre las dos capas anteriores modificando el valor de "left", y cada capa moviéndose una justo al lado de la otra. El avión también recibe movimiento variando su posicionamiento con top y left. Ambas animaciones css3 se repiten infinítamente. Para el paisaje un ciclo de la animación dura 10 segundos y para el avión 13 segundos.\r\n\r\n```\r\n#visor {\r\n\tposition:absolute;\r\n\toverflow:hidden;\r\n\twidth:600px;\r\n\theight:400px;\r\n}\r\n#paisaje, #paisaje2 {\r\n\tposition:absolute;\r\n\twidth:1200px;\r\n\theight:400px;\r\n}\r\n#avion {\r\n\tposition:absolute;\r\n\twidth:50px;\r\n\ttop:30px;\r\n\tleft:140px;\r\n}\r\n@keyframes paisaje {\r\n\tfrom\t{left:1200px;}\r\n\tto\t\t{left:0px;}\t}\r\n@-webkit-keyframes paisaje {\r\n\tfrom\t{left:1200px;}\r\n\tto\t\t{left:0px;}\t}\r\n@-moz-keyframes paisaje {\r\n\tfrom\t{left:1200px;}\r\n\tto\t\t{left:0px;}\t}\r\n@keyframes paisaje2 {\r\n\tfrom\t{left:0px;}\r\n\tto\t\t{left:-1200px;}\t}\r\n@-webkit-keyframes paisaje2 {\r\n\tfrom\t{left:0px;}\r\n\tto\t\t{left:-1200px;}\t}\r\n@-moz-keyframes paisaje2 {\r\n\tfrom\t{left:0px;}\r\n\tto\t\t{left:-1200px;}\t}\r\n@keyframes avion {\r\n\t0% {left:30px; top: 20px;}\r\n\t20% {left:60px; top: 30px;}\r\n\t70% {left:35px; top: 60px;}\r\n\t100% {left:30px; top: 20px;} }\r\n@-webkit-keyframes avion {\r\n\t0% {left:30px; top: 20px;}\r\n\t20% {left:60px; top: 30px;}\r\n\t70% {left:35px; top: 60px;}\r\n\t100% {left:30px; top: 20px;} }\r\n#avion {\r\n\tanimation:avion 13s infinite linear;\r\n\t-webkit-animation:avion 13s infinite linear;\r\n}\r\n#paisaje {\r\n\tanimation:paisaje 10s infinite linear;\r\n\t-webkit-animation:paisaje 10s infinite linear; }\r\n#paisaje2 {\r\n\tanimation:paisaje2 10s infinite linear;\r\n\t-webkit-animation:paisaje2 10s infinite linear; }\r\n\r\nbutton#parar, button#reanudar {\r\n\tposition: absolute;\r\n\ttop:420px;\r\n}\r\nbutton#reanudar {left:60px;}\r\nform {\r\n\tposition: absolute;\r\n\ttop:450px;\r\n}\r\n```\r\n\r\nPara crear las funcionalidades de parar, reanudar, incrementar o disminuir la velocidad se han creado tres funciones.\r\n\r\n*   parar();\r\n*   reanudar();\r\n*   cambiar_velocidad();\r\n\r\nPara las tres funciones lo que se hace es rescatar con javascript los elementos por su identificador (#ID - #paisaje, #paisaje2, #avion) y cambiando su estilo según se trate. El caso de cambiar la velocidad he usado una lista desplegable (select) en el que tienen unos valores (values) concretos. Estos valores serán los capturados en el script y luego se pasan al css.\r\n\r\n```\r\n// Función para parar la animación\r\nfunction parar() {\r\n\t//Se obtiene por el ID el elemento, y se modifica el estilo de la animación\r\n\t//El segundo elementno hace referencia a la duración, se establece en 0 segundos\r\n\t//animation:nombre tiempo repetición función_de_la_animación;\r\n\tdocument.getElementById("paisaje").style.animation="paisaje 0s infinite linear";\r\n\tdocument.getElementById("paisaje").style.webkitAnimation="paisaje 0s infinite linear";\r\n\tdocument.getElementById("paisaje2").style.animation="paisaje2 0s infinite linear";\r\n\tdocument.getElementById("paisaje2").style.webkitAnimation="paisaje2 0s infinite linear";\r\n\tdocument.getElementById("avion").style.animation="avion 0s infinite linear";\r\n\tdocument.getElementById("avion").style.webkitAnimation="avion 0s infinite linear";\r\n}\r\n// Función para reanudar la animación\r\nfunction reanudar() {\r\n\t//idem parar\r\n\tdocument.getElementById("paisaje").style.animation="paisaje 10s infinite linear";\r\n\tdocument.getElementById("paisaje").style.webkitAnimation="paisaje 10s infinite linear";\r\n\tdocument.getElementById("paisaje2").style.animation="paisaje2 10s infinite linear";\r\n\tdocument.getElementById("paisaje2").style.webkitAnimation="paisaje2 10s infinite linear";\r\n\tdocument.getElementById("avion").style.animation="avion 10s infinite linear";\r\n\tdocument.getElementById("avion").style.webkitAnimation="avion 10s infinite linear";\r\n}\r\n// Función para cambiar la velocidad de la animación\r\nfunction cambiar_velocidad() {\r\n\t//Se selecciona la lista\r\n\tseleccion = document.formulario.velocidad.selectedIndex;\r\n\t//Se obtiene el value del item seleccionado\r\n\tj = document.formulario.velocidad.options[seleccion].value;\r\n\t//Se establece la duración de la animación, a menos tiempo, más rápido, y viceversa\r\n\tdocument.getElementById("paisaje").style.animation="paisaje "+j+" infinite linear";\r\n\tdocument.getElementById("paisaje").style.webkitAnimation="paisaje "+j+" infinite linear";\r\n\tdocument.getElementById("paisaje2").style.animation="paisaje2 "+j+" infinite linear";\r\n\tdocument.getElementById("paisaje2").style.webkitAnimation="paisaje2 "+j+" infinite linear";\r\n}\r\n```\r\n\r\nSi quieres puedes descargar la animación pulsando en el enlace [Animación css3 y controles javascript](https://drive.google.com/open?id=0BzQS5pOyF_HjbzZoY3U1eDJNMTQ "Animación css3 y javascript")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Animaciones CSS3 - transform: translate (x, y)   vs   left(x) top(y)\'\r\ndate: Sun, 17 Nov 2013 22:16:22 +0000\r\npublished: true\r\ntags: Css3,Pildoritas\r\n---\r\n\r\nEs cierto que hacer una animación variando por ejemplo atributos en vertical (top) y en horizontal (left) es una práctica común, pero puede mejorar la animación usando otro método. Si usamos _"transform: translate (x, y)_". Usando translate hay que dar las unidades entre paréntesis del desplazamiento en horizontal primero y vertical segundo. Aunque mejor será verlo en un ejemplo:\r\n\r\ntexto moviéndose modificando translate (X, Y)\r\n\r\ntexto moviéndose modificando atributos top y left\r\n\r\nQuizá no sea muy notable la diferencia, pero todo lo que se pueda mejorar una animación sin costar mucho tiempo, merece la pena. Hay otras propiedades, según he ido leyendo y no probado por mi mismo, que también se mejoran usando "transform". Dejo el código de las dos animaciones (sin añadir los "vendor" para todos los navegadores).\r\n\r\n```\r\n@keyframes animationOne {\r\n  0% {\r\n    opacity:1;\r\n    transform: translate(0,30px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ;\r\n    box-shadow: 1px 1px 5px rgba(50,65,66,0.9); }\r\n  50% {\r\n    transform: translate(120px,110px) scaleX(1.2) scaleY(1.2) ;\r\n    box-shadow: 0px 0px 60px rgba(50,65,66,0.5); }\r\n  100% {\r\n    opacity:1;\r\n    transform: translate(300px,150px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ;\r\n    box-shadow: 1px 1px 5px rgba(50,65,66,0.9); }\r\n}\r\n\r\n@keyframes animationTwo {\r\n  0% {\r\n    top:220px;\r\n    left:30px;\r\n    opacity:1;\r\n    transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ;\r\n    box-shadow: 1px 1px 5px rgba(50,65,66,0.9); }\r\n  50% {\r\n    top:300px;\r\n    left:150px;\r\n    transform: scaleX(1.2) scaleY(1.2) ;\r\n    box-shadow: 0px 0px 60px rgba(50,65,66,0.5); }\r\n  100% {\r\n    top:340px;\r\n    left:330px;\r\n    opacity:1;\r\n    transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ;\r\n    box-shadow: 1px 1px 5px rgba(50,65,66,0.9); }\r\n}\r\n```\r\n\r\nConforme descubra mejoras en las animaciones con CSS3 y merezcan la pena, las iré publicando. <!\\-\\- .relativo{ position: relative; height:420px; background-color:#bbb; } .elemento1, .elemento2{ position:absolute; left:30px; padding:10px; background-color:rgba(231,175,54,1); color:rgba(253,251,208,1); box-shadow:rgba(50,65,66,1); font-size: 20px; font-family: arial; text-shadow:1px 1px 5px rgba(50,65,66,1); } .elemento1{ top:30px; animation-iteration-count: infinite; animation-direction:alternate; animation-fill-mode:forwards; /\\*when the spec is finished\\*/ -webkit-animation: animationOne linear 15s; -webkit-animation-iteration-count: infinite; -webkit-animation-direction:alternate; -webkit-animation-fill-mode:forwards; /\\*Chrome 16+, Safari 4+\\*/ -moz-animation: animationOne linear 15s; -moz-animation-iteration-count: infinite; -moz-animation-direction:alternate; -moz-animation-fill-mode:forwards; /\\*FF 5+\\*/ -o-animation: animationOne linear 15s; -o-animation-iteration-count: infinite; -o-animation-direction:alternate; -o-animation-fill-mode:forwards; /\\*Not implemented yet\\*/ -ms-animation: animationOne linear 15s; -ms-animation-iteration-count: infinite; -ms-animation-direction:alternate; -ms-animation-fill-mode:forwards; /\\*IE 10+\\*/ } .elemento2{ top:220px; animation-iteration-count: infinite; animation-fill-mode:forwards; /\\*when the spec is finished\\*/ animation-direction:alternate; -webkit-animation: animationTwo linear 15s; -webkit-animation-iteration-count: infinite; -webkit-animation-direction:alternate; -webkit-animation-fill-mode:forwards; /\\*Chrome 16+, Safari 4+\\*/ -moz-animation: animationTwo linear 15s; -moz-animation-iteration-count: infinite; -moz-animation-fill-mode:forwards; /\\*FF 5+\\*/ -moz-animation-direction:alternate; -o-animation: animationTwo linear 15s; -o-animation-iteration-count: infinite; -o-animation-fill-mode:forwards; /\\*Not implemented yet\\*/ -o-animation-direction:alternate; -ms-animation: animationTwo linear 15s; -ms-animation-iteration-count: infinite; -ms-animation-fill-mode:forwards; /\\*IE 10+\\*/ -ms-animation-direction:alternate; } @keyframes animationOne { 0% { opacity:1; transform: translate(0,30px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { transform: translate(120px,110px) scaleX(1.2) scaleY(1.2) ; box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { opacity:1; transform: translate(300px,150px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-webkit-keyframes animationOne { 0% { opacity:1; -webkit-transform: translate(0,30px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -webkit-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { -webkit-transform: translate(120px,110px) scaleX(1.2) scaleY(1.2) ; -webkit-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { opacity:1; -webkit-transform: translate(300px,150px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -webkit-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-moz-keyframes animationOne { 0% { opacity:1; -moz-transform: translate(0,30px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -moz-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { -moz-transform: translate(120px,110px) scaleX(1.2) scaleY(1.2) ; -moz-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { opacity:1; -moz-transform: translate(300px,150px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -moz-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-o-keyframes animationOne { 0% { opacity:1; -o-transform: translate(0,30px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -o-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { -o-transform: translate(120px,110px) scaleX(1.2) scaleY(1.2) ; -o-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { opacity:1; -o-transform: translate(300px,150px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -o-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-ms-keyframes animationOne { 0% { opacity:1; -ms-transform: translate(0,30px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -ms-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { -ms-transform: translate(120px,110px) scaleX(1.2) scaleY(1.2) ; -ms-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { opacity:1; -ms-transform: translate(300px,150px) rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -ms-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @keyframes animationTwo { 0% { top:220px; left:30px; opacity:1; transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { top:300px; left:150px; transform: scaleX(1.2) scaleY(1.2) ; box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { top:340px; left:330px; opacity:1; transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-webkit-keyframes animationTwo { 0% { top:220px; left:30px; opacity:1; -webkit-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -webkit-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { top:300px; left:150px; -webkit-transform: scaleX(1.2) scaleY(1.2) ; -webkit-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { top:340px; left:330px; opacity:1; -webkit-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -webkit-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-moz-keyframes animationTwo { 0% { top:220px; left:30px; opacity:1; -moz-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -moz-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { top:300px; left:150px; -moz-transform: scaleX(1.2) scaleY(1.2) ; -moz-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { top:340px; left:330px; opacity:1; -moz-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -moz-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-o-keyframes animationTwo { 0% { top:220px; left:30px; opacity:1; -o-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -o-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { top:300px; left:150px; -o-transform: scaleX(1.2) scaleY(1.2) ; -o-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { top:340px; left:330px; opacity:1; -o-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -o-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } @-ms-keyframes animationTwo { 0% { top:220px; left:30px; opacity:1; -ms-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -ms-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } 50% { top:300px; left:150px; -ms-transform: scaleX(1.2) scaleY(1.2) ; -ms-box-shadow: 0px 0px 60px rgba(50,65,66,0.5); } 100% { top:340px; left:330px; opacity:1; -ms-transform: rotate(0deg) scaleX(1) scaleY(1) skewX(0deg) skewY(0deg) ; -ms-box-shadow: 1px 1px 5px rgba(50,65,66,0.9); } } --\x3e'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Badges con SASS y SVG\'\r\ndate: Tue, 11 Oct 2016 15:11:19 +0000\r\npublished: true\r\ntags: Pildoritas,Sass\r\n---\r\n\r\nHe construido badges con **sass y svg**. Mediante mixins de sass he creado el fondo del badge, en el que se puede personalizar el ancho, el color y el margen superior pasando los parámetros. El primer parámetro es el ancho en px (sin indicar la unidad), el siguiente el color y el último el margen al elemento superior (sin indicar la unidad).\r\n\r\n```\r\nbody {\r\n  @include badge-generator(90, #ff1744, 200);\r\n}\r\n```\r\n\r\nLo he incluido (@include) en el body para que se genere el css a partir de sass. Dichos elementos se van a generar a partir de la función @mixin. El código no tiene misterio, son operaciones para formar un hexágono.\r\n\r\n```\r\n@mixin badge-generator($width: 94, $color: #ff1744, $margin_top: 0) {\r\n\t$middle_width: $width/2;\r\n\t$height: ($width/2) * 1.154700538;\r\n\t$border_top: $height/2;\r\n\r\n\ttext-align: center; //center image\r\n\tmargin-top: unquote( $margin_top + \'px\');\r\n\r\n\t.hexagon-draw {\r\n\t\tdisplay: inline-block;\r\n\t\tmargin-right: 10px;\r\n\r\n\t\t.hexagon-construct-top {\r\n\t\t\twidth: 0;\r\n\t\t\tborder-bottom: unquote( $border_top + \'px\') solid $color;\r\n\t\t\tborder-left: unquote( $middle_width + \'px\') solid transparent;\r\n\t\t\tborder-right: unquote( $middle_width + \'px\') solid transparent;\r\n\t\t}\r\n\t\t.hexagon-construct-middle {\r\n\t\t\twidth: unquote( ($width) + \'px\');\r\n\t\t\theight: 54px;//width/2*1,154700538\r\n\t\t\theight: unquote( ( ($width/2) * 1.154700538 ) + \'px\');\r\n\t\t\tbackground-color: $color;\r\n\t\t}\r\n\t\t.hexagon-construct-bottom {\r\n\t\t\twidth: 0;\r\n\t\t\tborder-top: unquote( $border_top + \'px\') solid $color;\r\n\t\t\tborder-left: unquote( $middle_width + \'px\') solid transparent;\r\n\t\t\tborder-right: unquote( $middle_width + \'px\') solid transparent;\r\n\t\t}\r\n\t\t.hexagon-picture {\r\n\t\t\tposition: relative;\r\n\t\t\ttop: unquote( (-0.83 * $width) + \'px\');\r\n\t\t\theight: 0;\r\n\t\t\timg {\r\n\t\t\t\tmax-height: unquote( $middle_width + \'px\');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nPara usarlo en el html hay que seguir la siguiente estructura:\r\n\r\n```\r\n<div class="box-badge">\r\n\t<div class="hexagon-draw">\r\n\t\t<div class="hexagon-construct-top"></div>\r\n\t\t<div class="hexagon-construct-middle"></div>\r\n\t\t<div class="hexagon-construct-bottom"></div>\r\n\t\t<div class="hexagon-picture">\r\n\t\t\t<img src="img/badge.svg" alt="Title Badge">\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="hexagon-draw">\r\n\t\t<div class="hexagon-construct-top"></div>\r\n\t\t<div class="hexagon-construct-middle"></div>\r\n\t\t<div class="hexagon-construct-bottom"></div>\r\n\t\t<div class="hexagon-picture">\r\n\t\t\t<img src="img/dollar-symbol.svg" alt="Title Dollar Symbol">\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n```\r\n\r\nEn la etiqueta de imagen se le añade la imagen, puede ser en cualquier formato, pero usando "svg" se adaptará mejor. El código completo para probarlo se encuentra en [mi GitHub.](https://github.com/ivanalbizu/Badges-with-Sass-and-Svg)'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Bonito menú horizontal con Css3\'\r\ndate: Thu, 13 Feb 2014 18:58:52 +0000\r\npublished: true\r\ntags: Css3\r\n---\r\n\r\nMenú horizontal construido con CSS3. Con pocas líneas de código se consigue este menú. Lo he adaptado para que se vea bien en la entrada de mi blog. Si se quiere se puede adaptar perfectamente para una web de ancho corriente (980px). Cambiando el ancho de contenedor de 700px a 980px y añadiendo dos ítem más de menú, la apariencia del **menú con Css3** queda muy bonita. Tiene una pequeña animación a situar el ratón sobre uno de los elementos del menú. Se trata de  cambiar el color y la dimensión e del ítem en cuestión. Para este último punto, la opción que me ha parecido más fácil de implementar ha sido aumentar (del selector "a") el **line-height 4px** y un **margin-top  -2px** para conseguir la apariencia de centrado en vertical. Aquí se puede ver el código fuente del archivo _css_.\r\n\r\n```\r\nbody {\r\n\tfont-family:\'Verdana\', sans-serif;\r\n\tbackground:#D8D8D8 url(\'../img/noise.png\') repeat;\r\n}\r\n#contenedor {\r\n\twidth:700px;\r\n\tmargin:0 auto;\r\n}\r\nnav {\r\n\tfont-size:1.2em;\r\n\twidth:100%;\r\n\theight:80px;\r\n\tdisplay: block;\r\n\tbackground-color: rgba(51, 51, 51, 1);\r\n\t-webkit-box-shadow: 2px 2px 3px #aaa, -2px 2px 3px #aaa;\r\n\t-moz-box-shadow:    2px 2px 3px #aaa, -2px 2px 3px #aaa;\r\n\t-ms-box-shadow:     2px 2px 3px #aaa, -2px 2px 3px #aaa;\r\n\t-o-box-shadow:      2px 2px 3px #aaa, -2px 2px 3px #aaa;\r\n\tbox-shadow:         2px 2px 3px #aaa, -2px 2px 3px #aaa;\r\n}\r\nul {\r\n\tmargin:0;\r\n\tpadding:0;\r\n\theight: 100%;\r\n}\r\nul li {\r\n\tlist-style:none;\r\n\tfloat:left;\r\n\ttext-align:center;\r\n\tmargin:0 10px;\r\n}\r\nul li a {\r\n\twidth:120px;\r\n\ttext-decoration:none;\r\n\tdisplay:block;\r\n\tcolor:white;\r\n\tline-height:80px;\r\n\r\n\t-webkit-transition: all 0.1s ease;\r\n\t-moz-transition:    all 0.1s ease;\r\n\t-ms-transition:     all 0.1s ease;\r\n\t-o-transition:      all 0.1s ease;\r\n\ttransition:         all 0.1s ease;\r\n}\r\nul li a:hover, ul li a.activo {\r\n\tbackground-color:rgba(155, 28, 38, 1);\r\n\tmargin-top:-2px;\r\n\tline-height:84px;\r\n\t-webkit-box-shadow: 0px 3px 10px 1px rgba(50, 50, 50, 0.90);\r\n\t-moz-box-shadow:    0px 3px 10px 1px rgba(50, 50, 50, 0.90);\r\n\t-ms-box-shadow:     0px 3px 10px 1px rgba(50, 50, 50, 0.90);\r\n\t-o-box-shadow:      0px 3px 10px 1px rgba(50, 50, 50, 0.90);\r\n\tbox-shadow:         0px 3px 10px 1px rgba(50, 50, 50, 0.90);\r\n\r\n\ttext-shadow:1px 1px 2px rgba(0, 0, 0, .9);\r\n\t-webkit-transition: all 0.2s ease;\r\n\t-moz-transition:    all 0.2s ease;\r\n\t-ms-transition:     all 0.2s ease;\r\n\t-o-transition:      all 0.2s ease;\r\n\ttransition:         all 0.2s ease;\r\n}\r\n\r\narticle {\r\n\tclear:both;\r\n\theight:100%;\r\n\tmargin:30px 0;\r\n\tpadding:30px;\r\n\tline-height:1.3em;\r\n\r\n\tbackground-color:white;\r\n\t-webkit-box-shadow: 0px 3px 10px 1px rgba(50, 50, 50, 0.30);\r\n\t-moz-box-shadow:    0px 3px 10px 1px rgba(50, 50, 50, 0.30);\r\n\t-ms-box-shadow:     0px 3px 10px 1px rgba(50, 50, 50, 0.30);\r\n\t-o-box-shadow:      0px 3px 10px 1px rgba(50, 50, 50, 0.30);\r\n\tbox-shadow:         0px 3px 10px 1px rgba(50, 50, 50, 0.30);\r\n}\r\n```\r\n\r\nY el código del archivo html, es sencillo, con un poco de texto de relleno, cortesía: [http://www.quijotipsum.com/](Quijotipsum "Texto de relleno")\r\n\r\n<!doctype html>\r\n<html lang="es">\r\n<head>\r\n\t<meta charset="UTF-8" />\r\n\t<title>Bonito menú horizontal con Css3</title>\r\n\t<link rel="stylesheet" href="css/style.css" type="text/css" media="screen" title="no title" charset="utf-8"/>\r\n</head>\r\n<body>\r\n\t<div id="contenedor">\r\n\t\t<nav>\r\n\t\t\t<ul>\r\n\t\t\t\t<li><a href="#">Inicio</a></li>\r\n\t\t\t\t<li><a href="#">Sobre</a></li>\r\n\t\t\t\t<li><a href="#" class="activo">Servicios</a></li>\r\n\t\t\t\t<li><a href="#">Productos</a></li>\r\n\t\t\t\t<li><a href="#">Contacto</a></li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t\t<article>\r\n\t\t\t<h4>Bonito menú horizontal con Css3</h4>\r\n\t\t\t<p>En un lugar de la Mancha, de cuyo nombre no quiero acordarme, no ha mucho tiempo que vivía un hidalgo de los de lanza en astillero, adarga antigua, rocín flaco y galgo corredor. Una olla de algo más vaca que carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún renombre de Quijada, o Quesada, que en esto hay alguna diferencia en los autores que deste caso escriben; aunque, por conjeturas verosímiles, se deja entender que se llamaba Quejana. Pero esto importa poco a nuestro cuento; basta que en la narración dél no se salga un punto de la verdad.</p>\r\n\t\t\t<p>Una olla de algo más vaca que carnero, salpicón las más noches, duelos y quebrantos los sábados, lantejas los viernes, algún palomino de añadidura los domingos, consumían las tres partes de su hacienda. El resto della concluían sayo de velarte, calzas de velludo para las fiestas, con sus pantuflos de lo mesmo, y los días de entresemana se honraba con su vellorí de lo más fino. Tenía en su casa una ama que pasaba de los cuarenta, y una sobrina que no llegaba a los veinte, y un mozo de campo y plaza, a, o Quesada, que en esto hay alguna diferencia en los autores que deste caso escriben; aunque, por conjeturas verosímiles, se deja entender que se llamaba Quejana. Pero esto importa poco a nuestro cuento; basta que en la narración dél no se salga un punto de la verdad. </p>\r\n\t\t\t<p>En un lugar  Quieren decir que tenía el sobrenombre de Quijada, o Quesada, que en esto hay alguna diferencia en los autores que deste caso escriben; aunque, por conjeturas verosímiles, se deja entender que se llamaba Quejana. Pero esto importa poco a nuestro cuento; basta que en la narración dél no se salga un punto de la verdad.</p>\r\n\t\t\t<p>EQuieren decir que tenía el sobrenombre de Quijada, o Quesada, que en esto hay alguna diferencia en los autores que deste caso escriben; aunque, por conjeturas verosímiles, se deja entender que se llamaba Quejana. Pero esto importa poco a nuestro cuento; basta que en la narración dél no se salga un punto de la verdad. </p>\r\n\r\n\t\t</article>\r\n\r\n\t</div>\r\n</body>\r\n</html>\r\n\r\nSi te ha gustado el menú, puedes descargarlo desde este enlace: [menu horizontal css3](https://dl.dropboxusercontent.com/u/12043780/ivanalbizu.eu/bonito-menu-horizontal-css3.zip)'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: Building a static blog with NuxtJs and Markdown as a beginner\r\npublished: true\r\ndescription: A summary of my ongoing journey to get a statically generated blog up and running with the help of NuxtJS and Markdown\r\ntags: javascript,vue,showdev,beginners\r\nctime: 2019-05-12\r\n---\r\n\r\n> This post originally appeared on [Dev.to](https://dev.to/nirebu/building-a-static-blog-with-nuxtjs-and-markdown-as-a-beginner-pkf) when this site had yet to support functional blogging\r\n\r\nHi there, this is my first post here... or anywhere since I've never blogged before! I'm [Nicolò Rebughini](https://nirebu.com/), a sysadmin trying to get a hold of modern web development pratices. I've specialised in CS at high school, but had been a video post production tech for many years, and came back to the IT world a little more than a year ago wearing the sysadmin hat. Right now I'm updating myself and learning to use tools like [Ansible](https://ansible.com/) and [Docker](https://docker.com/) to standardise and streamline the stack of my workplace.\r\n\r\n## Beginning of the journey\r\n\r\nI left the development and operations worlds when Bootstrap's first version wasn't even released (Wikipedia says it happened in 2011), after exploring the now infinite options and experimenting for too much time I've finally made it: my [JAM Stack](https://jamstack.org/) blog is shaping up. You can also explore its source code on [my Github repo](https://github.com/nirebu/nirebu-2019/).\r\n\r\nAs a totally green web developer, I started this website with the tools I already knew, so I cobbled together a single `index.html` webpage and tried some new toys that have come a long way since I last went in and written something from scratch. [Explore the source](https://github.com/nirebu/nirebu-personal-website/) for the 2018 version on Github.\r\n\r\nAfter being marveled by huge timesavers like hot reloading, the latest innovations in CSS frameworks (welcome [Bulma](https://bulma.io/)) and deploying it all for free on Firebase, I went on looking for means I could augment it through.\r\n\r\n## Enter NuxtJS\r\n\r\nBeing brand new to all these new fancy Javascript frameworks I spent an absurd amount of time just by trying them out and experimenting with them, not counting the time spent just to get the hang of some obscure JS concepts.\r\n\r\nThen... it finally clicked when I found about [NuxtJS](https://nuxtjs.org/).\r\n\r\nThis will be a summary of the things I had to do in order to make this website and blog work the way I wanted: static website, markdown blog posts and freely hosted (this time on [Netlify](https://netlify.com/))\r\n\r\n## Creating a NuxtJS website\r\n\r\nInitializing a new NuxtJS website is as easy as running a single command\r\n\r\n```bash\r\n# Run the create-nuxt-app without having to install it beforehand\r\nnpx create-nuxt-app my-markdown-blog\r\n```\r\n\r\nI set the `Nuxt mode` to `Universal` to reap the rewards of server side rendered Vue out of the box.\r\n\r\nI wanted to replace my old website with this new (only under the hood) version, so I had to bring over the old source code, slapping the content of `index.html` in the `<template>` tag in `pages/index.vue`\r\n\r\n## Loading Bulma\r\n\r\nHow the heck do I load Bulma here? Probably my solution isn't the cleanest or most elegant, but here it is:\r\n\r\n```bash\r\nnpm install --save-dev bulma @nuxtjs/style-resources node-sass sass-loader\r\n```\r\n\r\nI had also some customisations over the stock Bulma framework so, in order to make it work, I copied over my `main.scss` in the `assets/` directory and changed a couple of things in `nuxt.config.js`:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  [...]\r\n  css: [\"assets/main.scss\"] // This line instructs Nuxt to load this file in every page\r\n  [...]\r\n  modules: [\r\n    \"@nuxtjs/axios\", // This was already present because I chose it during the init\r\n    \"@nuxtjs/style-resources\" // Necessary to make Nuxt load the SCSS and SASS files\r\n  ]\r\n  [...]\r\n}\r\n```\r\n\r\nAfter setting the correct path of the `bulma.sass` file in my `main.scss` all the styles fixed themselves. Yay! Success! (After hours of trial and error)\r\n\r\n## Refactoring website header and footer in components\r\n\r\nTo take advantage of the intrinsic modularisation of Nuxt, I split the navbar and the footer in separate components, so I could use them in the default layout for the pages.\r\n\r\nAfter this, my `layouts/default.vue` file looks like this:\r\n\r\n```html\r\n<template>\r\n  <div class=\"main\">\r\n    <NavBar />\r\n    <nuxt />\r\n    <SiteFooter />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport NavBar from '~/components/NavBar';\r\nimport SiteFooter from '~/components/SiteFooter';\r\n\r\nexport default {\r\n  components:{\r\n    NavBar,\r\n    SiteFooter\r\n  }\r\n}\r\n<\/script>\r\n```\r\n\r\n## Adding Markdown support\r\n\r\nThis has been a major pain point since I tried it the first time. The following is the way that I managed to set it up. If someone wants to show me the 'real' way, please make a PR to correct this article or my source, I'd be happy to learn about it.\r\n\r\nSome preparations...\r\n\r\n```bash\r\nnpm install --save-dev frontmatter-markdown-loader @nuxtjs/markdownit\r\n```\r\n\r\nLet's impart Webpack to read the Markdown files using the `raw-loader` in order to avoid any manipulation of the output.\r\n\r\n```javascript\r\nmodule.exports = {\r\n  [...]\r\n  build: {\r\n    extend(config, ctx) {\r\n      config.module.rules.push({\r\n        test: /\\.md$/,\r\n        use: ['raw-loader']\r\n      });\r\n    }\r\n  }\r\n  [...]\r\n}\r\n```\r\n\r\n## Separating Markdown content and metadata\r\n\r\nIn the `pages/blog/_post/index.vue` file is where the magic happens (at least for me). Given the fact that `markdownit` doesn't support reading the markdown metadata, where the article info is stored, we need to decouple the process of getting the content and the attributes (as are called by front-matter):\r\n\r\n```html\r\n<script>\r\n// Let's require the needed modules\r\nconst fm = require(\"front-matter\");\r\nvar md = require(\"markdown-it\")({\r\n  html: true,\r\n  typographer: true\r\n});\r\n\r\nexport default {\r\n  async asyncData({ params }) {\r\n    // We read the markdown file by looking at the `post` parameter\r\n    // in the URL and searching for a markdown file with that name in\r\n    // the articles directory\r\n    const fileContent = await import(`~/articles/${params.post}.md`);\r\n    // We process the raw output through front-matter\r\n    // (markdownit was giving me garbled results)\r\n    let res = fm(fileContent.default);\r\n    return {\r\n      // attributes will be an object containing the markdown metadata\r\n      attributes: res.attributes,\r\n      // content will contain the body of the markdown file,\r\n      // rendered in HTML via the `markdownit` class\r\n      content: md.render(res.body)\r\n    };\r\n  }\r\n};\r\n<\/script>\r\n```\r\n\r\nWith this data filled up, we can populate some elements:\r\n\r\n```html\r\n<template>\r\n  <div :key=\"$route.params.post\">\r\n    <div class=\"container\">\r\n      <div class=\"columns is-centered\">\r\n        <div class=\"blog column is-10-tablet\">\r\n          <div class=\"title\">{{ attributes.title }}</div>\r\n          <div class=\"subtitle\">\r\n            Published on {{attributes.ctime}}\r\n            by {{ attributes.author }}\r\n          </div>\r\n          <div v-html=\"content\" class=\"blog-content content\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n```\r\n\r\nRight now, if you navigate to the path `blog/some-markdown-file` you should see the content and attributes displayed.\r\n\r\n## Generating the routes for the blog posts\r\n\r\nWe are one step closer to having a statically generated blog powered by markdown but, before deploying, we have to make one extra step.\r\n\r\nNuxt, by default, generates only the routes found in the `pages/` directory, but it doesn't generate every dynamic page, only the index. So we have to find  a way to make it generate also the routes like:\r\n\r\n- `blog/first-post` based on the file `articles/first-post.md`\r\n- `blog/second-post` based on the file `articles/second-post.md`\r\n- And so on\r\n\r\nLet's dive in the `nuxt.config.js` once again. At the top I've configured it this way\r\n\r\n```javascript\r\n// glob is a small module to read 'globs', useful to get\r\n// a filtered file list\r\nconst glob = require('glob');\r\n// we acquire an array containing the filenames\r\n// in the articles directory\r\nlet files = glob.sync( '**/*.md' , { cwd: 'articles' });\r\n\r\n// We define a function to trim the '.md' from the filename\r\n// and return the correct path.\r\n// This function will be used later\r\nfunction getSlugs(post, _) {\r\n  let slug = post.substr(0, post.lastIndexOf('.'));\r\n  return `/blog/${slug}`;\r\n}\r\n```\r\n\r\nThen, edit the `generate` object in `nuxt.config.js` to add the routes obtained via the previous piece of code:\r\n\r\n```javascript\r\nmodule.exports = {\r\n  [...]\r\n  generate: {\r\n    routes: function() {\r\n      return files.map(getSlugs)\r\n    }\r\n  }\r\n  [...]\r\n};\r\n```\r\n\r\n## Wrapping up\r\n\r\nIf I didn't forget anything, you should have at least a resemblance of a Markdown blog post viewer and you should be able to succesfully build all the pages and deploying your blog to your favourite static site hosting service.\r\n\r\nThe command `npm run generate` will get us the `build` directory containing our fresh statically generated website.\r\n\r\nFrom this guide, and from my website, are missing **crucial** parts that I'm going to implement, like using Vuex to store all the blog posts metadata and using that info to render a list of articles. Right now I can only write single blog posts and link them somewhere. Expect an update or a new post about those also!\r\n\r\nThanks for reading!"},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Codeigniter + Cloud9. Primeros pasos'\r\ndate: Tue, 17 Feb 2015 22:13:10 +0000\r\npublished: true\r\ntags: Codeigniter,Php,Pildoritas\r\n---\r\n\r\nEn esta primera publicación comenzaré con la descarga de Codeigniter y la preparación del IDE web Cloud9 para poder empezar a trabajar. Para ello necesito descargar la última versión estable de Codeigniter. Creación de un Workspace en Cloud9 e instalación de phpmyadmin en Clou9. Los pasos seguidos son los siguientes:\r\n\r\n1.  Crear Workspace PHP\r\n2.  Vaciar el contenido del Workspace\r\n3.  Descargar última versión estable CodeIgniter\r\n4.  Subir a Cloud 9\r\n5.  Descomprimir:\r\n    1.  sudo unzip CodeIgniter-2.2.1.zip\r\n6.  Copiar CodeIgniter al Workspace:\r\n    1.  sudo cp -r CodeIgniter-2.2.1/* /home/ubuntu/workspace/\r\n7.  Eliminar directorio y comprimido de CodeIgniter:\r\n    1.  sudo rm -r CodeIgniter-2.2.1\r\n    2.  sudo rm -r CodeIgniter-2.2.1.zip\r\n8.  Instalar PHPMyAdmin:\r\n    1.  phpmyadmin-ctl install\r\n    2.  En consola aparece enlace y usuario(mismo de Cloud9) y contraseña(vacío)\r\n\r\nY el vídeo del paso a paso: Nota: para dar un poco de seguridad a nuestro PhpMyAdmin: Ejecutamos la siguiente línea: Editamos un archivo PHP:\r\n\r\n    sudo nano /etc/phpmyadmin/config.inc.php \r\n\r\nAl final del documento localizamos la línea:\r\n\r\n    $cfg['Servers'][$i]['AllowNoPassword'] = TRUE;\r\n\r\nY lo ponemos a FALSE, para que sea necesaria la contraseña Accedemos a mysql para establecer la contraseña:\r\n\r\n    mysql-ctl cli\r\n    UPDATE mysql.user SET Password=PASSWORD('nuestraContraseña') WHERE User='poner_usuario_cloud9';\r\n\r\nSalimos guardando (Ctrl+x.  Yes.  Enter)"},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Codio y Wordpress'\r\ndate: Thu, 21 Aug 2014 14:22:36 +0000\r\npublished: true\r\ntags: Pildoritas,Wordpress\r\n---\r\n\r\n**Codio** es un editor (IDE) pero en remoto. Permite crear proyectos variados. Desde **Wordpress**, AngularJS hasta mucho otros. En su versión gratis permite tener muchos proyecto públicos y uno privado. Mejor dejo [enlace a la web](https://codio.com/ \"Abre en ventana nueva la web de Codio\") para que cada uno investigue si le merecería la pena. En esta tendrá quiero comentar como se puede crear un proyecto Wordpress con Codio, que puede venir muy bien para probar una web antes de sacarla. Los pasos que voy a seguir están [sacados de su propia web](https://codio.com/s/docs/specifics/wordpress/ \"Abre en ventana nueva los pasos para instalar Wordpress con Codio\"). La documentación que aporta el editor online Codio en su propia web está bastante bien, con Blog y recursos incluidos. Vídeo paso a paso de la instalación: Registrarse es sencillo, incluso permite hacerlo con cuenta de GitHub o Bitbucket. Una vez logeados accedemos a \"_Projects_\" y pulsamos sobre \"_Create Project_\". Y damos nombre al proyecto. De entre todas las posibilidades que nos da Codio para crear un proyecto (Git, Templates, Zip...) elegimos \"_Templates/Empty Project_\" y pulsamos sobre \"_Create_\". Se abrirá el editor Codio con el proyecto creado. Su aspecto inicial será un menú superior, sidebar del proyecto (vacío) a la izquierda con los archivos que contenga y el editor propiamente dicho a la derecha. Este aspecto es personalizable, tema en el que no voy a entrar. En el menú superior abrimos la consola: Tools -> Terminal Añadimos Wordpress\r\n\r\nwget http://wordpress.org/latest.tar.gz\r\n\r\nDescomprimimos\r\n\r\ntar -xzvf latest.tar.gz\r\n\r\nInstalamos Php,Mysql y Apache\r\n\r\nparts install php5 php5-apache2 php5-pdo-mysql php5-zlib mysql\r\n\r\nArrancamos el servidor\r\n\r\nparts start apache2 mysql\r\n\r\nEn la raíz del proyecto creamos un archivo llamado (para que arranque el servidor cada vez que abrimos el proyecto. Por defecto estará apagado) \"_startup.sh_\" Y añadimos estas dos línea de código:\r\n\r\nparts stop apache2 mysql\r\nparts start apache2 mysql\r\n\r\nPara abrir Mysql y crear la base de datos introducimos:\r\n\r\nmysql -u root -p\r\n\r\nCreamos la base de datos\r\n\r\nCREATE DATABASE nombre-base-datos;\r\n\r\nCreamos un usuario\r\n\r\nCREATE USER usuario-base-datos@localhost;\r\n\r\nDamos contraseña al usuario\r\n\r\nSET PASSWORD FOR usuario-base-datos@localhost= PASSWORD(\"pass-elegida\");\r\n\r\nDecimos que usuario va a manejar la base de datos con todos los privilegios\r\n\r\nGRANT ALL PRIVILEGES ON nombre-base-datos.* TO usuario-base-datos@localhost IDENTIFIED BY 'pass-elegida';\r\n\r\nAplicamos cambios\r\n\r\nFLUSH PRIVILEGES;\r\n\r\nSalimos de Mysql\r\n\r\nexit\r\n\r\nYa hemos terminado de usar la consola. Ahora realizamos modificaciones sobre Wordpress. Renombramos el archivo _wp-config-sample.php_ a _wp-config.php_ y lo abrimos y modificamos: Línea 19:\r\n\r\ndefine('DB\\_NAME', 'database\\_name\\_here'); --\x3e define('DB\\_NAME', 'nombre-base-datos');\r\n\r\nLínea 22:\r\n\r\ndefine('DB\\_USER', 'username\\_here'); --\x3e define('DB_USER', 'usuario-base-datos');\r\n\r\nLínea 25:\r\n\r\ndefine('DB\\_PASSWORD', 'password\\_here'); --\x3e define('DB_PASSWORD', 'pass-elegida');\r\n\r\nCada vez que creamos un proyecto, Codio nos genera una URL que en este caso debemos saber. Y para saberlo... En el menú superior: _Project / Box Info_. En el pop up localizamos el apartado \"WEB: Dynamic Content\" y copiamos la URL de tipo HTTP (la HTTPS no la necesitamos). http://unaPalabra-otraPalabra.codio.io Antes de la línea 19:\r\n\r\ndefine('WP_HOME','http://word1-word2.codio.io:3000/wordpress');\r\ndefine('WP_SITEURL','http://word1-word2.codio.io:3000/wordpress');\r\n\r\nY sustituimos \"word1-word2\" por las palabras nos generó Codio. En el menú superior, seleccionamos el ítem más a la derecha llamado \"_Project Index_\" y pinchamos al desplegar  \"_Box URL_\". Ahora se llamará \"Box URL\" en vez de \"Project Index\". Falta terminar hacer la instalación guiada de Wordpress, en el que se pide título de la web, nombre de usuario y contraseña. Una vez instalada, Codio dice que se necesita instalar un plugin llamado \"permalink-fix-disable-canonical-redirects-pack\" y activarlo para que corra en el puerto 3000 sin ningún contratiempo. Cada vez que pinchemos sobre \"BoxURL\" se ejecutará en nueva pestaña el proyecto. Espero que sirva este post a mucha gente."},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Codota - Find great code examples'\r\ndate: Sat, 29 Nov 2014 17:03:31 +0000\r\npublished: true\r\ntags: Pildoritas\r\n---\r\n\r\nMe acaba de pasar un amigo algo increíble, que una vez lo ves... piensas: ¿¿Cómo he podido vivir tanto tiempo sin esto?? Se llama Codota, su eslogan lo dice todo: **Find Great Android Code Examples.**\r\n\r\n*   Tiene resaltado de sintáxis.\r\n*   Snnipet de código.\r\n*   Posibilidad de guardar el código en tu área personal.\r\n*   (...)\r\n\r\nLa web oficial de Codota [https://www.codota.com/](https://www.codota.com/ \"Codota - Find Great Code Examples\") Dejo el vídeo. Ya le debo una cerveza a Miguel Ramos por tal descubrimiento!"},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Construir custom dial en Android\'\r\ndate: Sun, 19 Oct 2014 15:36:18 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nConstruir custom dial en Android con pocas líneas de código. Crearé un proyecto Android en el que sólo añada esta funcionalidad. El proyecto contendrá sólo un archivo java llamado MainActivity.java y un archivo xml asociado llamado activity_main.xml encargado de contener el aspecto gráfico. Empezando por el aspecto visual, el archivo activity_main.xml contendrá:\r\n\r\n1.  Un "LinearLayout" con un "TextView" para el número de teléfono y un "ImageView" para una imagen que permitirá borrar el último dígito introducido.\r\n2.  Un "TableLayout" para incluir los botones del teclado numérico.\r\n3.  Y finalmente un "ImageView" que será el que lance la llamada de teléfono.\r\n\r\nSu código es el siguiente:\r\n\r\n```\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n    xmlns:tools="http://schemas.android.com/tools"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:background="#6F8C82"\r\n    tools:context="${relativePackage}.${activityClass}" >\r\n    \r\n    <LinearLayout\r\n        android:id="@+id/tab1"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="match_parent"\r\n        android:orientation="vertical" >\r\n\r\n        <LinearLayout\r\n            android:layout_width="match_parent"\r\n            android:layout_height="wrap_content"\r\n            android:padding="20sp" >\r\n\r\n            <TextView\r\n                android:id="@+id/numeroLlamada"\r\n                android:layout_width="wrap_content"\r\n                android:layout_height="match_parent"\r\n                android:layout_weight="0.8"\r\n                android:background="#d1d1d1"\r\n                android:textColor="#D91E1E"\r\n                android:textSize="30sp"\r\n                android:typeface="monospace"\r\n                android:text="@string/txt_num_marcado" />\r\n\r\n            <ImageButton\r\n                android:id="@+id/imageButton1"\r\n                android:layout_width="wrap_content"\r\n                android:layout_height="match_parent"\r\n                android:background="#00000000"\r\n                android:layout_weight="0.2"\r\n                android:src="@drawable/ic_delete" />\r\n\r\n        </LinearLayout>\r\n\r\n        <TableLayout\r\n            android:layout_width="match_parent"\r\n            android:layout_height="wrap_content"\r\n            android:padding="20sp"\r\n            android:stretchColumns="*" >\r\n\r\n            <TableRow\r\n                android:id="@+id/tableRow1"\r\n                android:layout_width="wrap_content"\r\n                android:layout_height="wrap_content" >\r\n\r\n                <Button\r\n                    android:id="@+id/button1"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_1" />\r\n\r\n                <Button\r\n                    android:id="@+id/button2"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_2" />\r\n\r\n                <Button\r\n                    android:id="@+id/button3"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_3" />\r\n\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:id="@+id/tableRow2"\r\n                android:layout_width="wrap_content"\r\n                android:layout_height="wrap_content" >\r\n\r\n                <Button\r\n                    android:id="@+id/button4"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_4" />\r\n\r\n                <Button\r\n                    android:id="@+id/button5"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_5" />\r\n\r\n                <Button\r\n                    android:id="@+id/button6"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_6" />\r\n\r\n            </TableRow>\r\n\r\n            <TableRow\r\n                android:id="@+id/tableRow3"\r\n                android:layout_width="wrap_content"\r\n                android:layout_height="wrap_content" >\r\n\r\n                <Button\r\n                    android:id="@+id/button7"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_7" />\r\n\r\n                <Button\r\n                    android:id="@+id/button8"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_8" />\r\n\r\n                <Button\r\n                    android:id="@+id/button9"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_9" />\r\n\r\n            </TableRow>\r\n            \r\n            <TableRow\r\n             android:id="@+id/tableRow4"\r\n             android:layout_width="match_parent"\r\n             android:layout_height="wrap_content" >\r\n\r\n                <Button\r\n                    android:id="@+id/button10"\r\n                    style="?android:attr/buttonStyleSmall"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_almohadilla" />\r\n\r\n                <Button\r\n                    android:id="@+id/button0"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_0" />\r\n\r\n                <Button\r\n                    android:id="@+id/button12"\r\n                    style="?android:attr/buttonStyleSmall"\r\n                    android:layout_width="wrap_content"\r\n                    android:layout_height="wrap_content"\r\n                    android:text="@string/btn_asterisco" />\r\n\r\n         </TableRow>\r\n         \r\n        </TableLayout>\r\n\r\n        <ImageButton\r\n            android:id="@+id/call"\r\n            android:layout_width="match_parent"\r\n            android:layout_height="50sp"\r\n            android:layout_margin="20sp"\r\n            android:background="#F25F1F"\r\n            android:src="@drawable/ic_call" />\r\n\r\n    </LinearLayout>\r\n</RelativeLayout>\r\n```\r\n\r\nEl archivo **MainActivity.java** será el que lleve la funcionalidad.\r\n\r\n1.  Al inicio de la clase se declaran tres variables para poder trabajar con sus referencias dentro del main.\r\n2.  Dentro del método **onCreate(...)** se inician las variables anteriores con sus referencias por ID del archivo XML.\r\n3.  Se construye un "listener" para ser asignado a los botones de la vista. Para ello se obtiene el botón que produjo el evento, se concatena el teléfono que aparece en en TextView con el texto del número de dígito marcado (máximo 10 dígitos, se mostraría con Toast que no se permiten más dígitos).\r\n4.  Se asigna a cada uno de los botones el listener anterior creado.\r\n5.  Se habilita funcionalidad de editar el número de teléfono marcado. Se activa para ello un listener sobre el elemento de borrado.\r\n6.  Se habilita listener para lanzar la llamada. Se activa para ello un listener sobre el botón de realizar llamada. Capturando el teléfono marcado, caso de ser vacio, se asigna el número de emergencias, se parsea y se lanza el Intent.\r\n\r\nEl código es el siguiente:\r\n\r\n```\r\npackage eu.ivanalbizu.customdial;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends Activity {\r\n\t//Se declaran variables\r\n\tTextView numero;\r\n\tImageButton editNumero;\r\n\tImageButton doCall;\r\n\t\t\t\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        \r\n        //Se inician las variables hacen uso de la referencia del archivo XML\r\n        numero = (TextView) findViewById(R.id.numeroLlamada);\r\n        editNumero = (ImageButton) findViewById(R.id.imageButton1);\r\n        doCall = (ImageButton) findViewById(R.id.call);\r\n        \r\n        \r\n        //Se construye un "listener" para ser asignado a los botones de la vista\r\n        OnClickListener listenerAddNumber = new OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\t//Se obtiene el botón que produjo el evento\r\n\t\t\t\tTextView txt = (TextView) v;\r\n\t\t\t\t//Se permite un máximo de 10 dígitos paraun número de teléfono\r\n\t\t\t\tif (numero.getText().toString().length() < 10) {\r\n\t\t\t\t\t//Se concatena el teléfono que aparece en en TextView con el\r\n\t\t\t\t\t//texto del número de dígito marcado\r\n\t\t\t\t\tnumero.setText(numero.getText().toString()+txt.getText().toString());\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Se muestra mensaje cuando se quiere introducir teléfono de más\r\n\t\t\t\t\t//de 10 dígitos\r\n\t                Toast.makeText(\r\n\t                \t\tMainActivity.this,\r\n\t                \t\t"No puede introducir más dígitos",\r\n\t                \t\tToast.LENGTH_SHORT\r\n\t                \t\t).show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t//Se asigna a cada uno de los botones el listener anterior creado\r\n\t\t((Button) findViewById(R.id.button1)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button2)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button3)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button4)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button5)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button6)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button7)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button8)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button9)).setOnClickListener(listenerAddNumber);\r\n\t\t((Button) findViewById(R.id.button0)).setOnClickListener(listenerAddNumber);\r\n\r\n\t\t//Se habilita funcionalidad de editar el número de teléfono marcado\r\n\t\t//Se activa para ello un listener sobre el elemento de borrado\r\n\t\teditNumero.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\t//Se permite editar cuando el usuario al menos ha introducido un dígito\r\n\t\t\t\tif (numero.getText().length() > 0 ){\r\n\t\t\t\t\t//Se desprecia el último dígito del teléfono marcado\r\n\t\t\t\t\tnumero.setText(numero.getText().subSequence(0, numero.getText().length() - 1)\r\n\t\t\t\t\t\\+ "");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\t\r\n\t\t//Se habilita listener para lanzar la llamada\r\n\t\t//Se activa para ello un listener sobre el botón de realizar llamada\r\n\t\tdoCall.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\t//Se captura el teléfono introducido\r\n\t\t\t\tString llamarNumero = numero.getText().toString();\r\n\t\t\t\t//Si el usuario no introducido teléfono, se introduce número de emergencias\r\n\t\t\t\tif (llamarNumero.equals("")) {\r\n\t\t\t\t\tllamarNumero = "112";\r\n\t\t\t\t}\r\n\t\t\t\t//Se parsea el teléfono a URI\r\n\t\t\t\tUri number = Uri.parse("tel:"+llamarNumero);\r\n\t\t\t\t\r\n\t\t\t\t//Se lanza intent de llamada\r\n\t\t\t\tIntent callIntent = new Intent(Intent.ACTION_VIEW, number);\r\n\t\t\t\tstartActivity(callIntent);\t\t\t\t\r\n\t\t\t}\r\n\t\t});\t\t\r\n\t\t\r\n    }\r\n}\r\n```\r\n\r\nAquí dejo el [código](https://db.tt/0NKYZ5tE "Código de Crear Custom Dial en Android") de la entrada. Y aquí enlace a dos vídeos de youtube en el que explico paso a paso como [crear custom dial](http://www.youtube.com/playlist?list=PLQPVd8xnMbz6pqg50U0zZ5eMF6ItK6fMl "Crear paso a paso custom dial")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Crear calculadora en Android\'\r\ndate: Sun, 26 Oct 2014 15:33:41 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nCrear calculadora en Android con funciones básicas de suma, resta, multiplicación y división. En el MainActivity.java se define en su comienzo las variables necesarias. Para poder trabajar mejor con las operaciones lo he dividido en "operando1", "operando2", "operacion", "resultado" y botón "borrar". El botón de "limpiar" no lo he declarado en el MainActivity.java, sólo he creado un método que será usado en el XML. Sus referencias de la vista XML son rescatadas con el método findViewById(R.id.nombreCorrespondiente).\r\n\r\n```\r\nprivate TextView operando1, operando2, operacion, resultado;\r\nprivate Button borrar;\r\nprivate final static int TESTIGO = 1234;\r\n\r\n@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n\tsuper.onCreate(savedInstanceState);\r\n\tsetContentView(R.layout.activity_main);\r\n\r\n\toperando1 = (TextView) findViewById(R.id.operando1);\r\n\toperando2 = (TextView) findViewById(R.id.operando2);\r\n\toperacion = (TextView) findViewById(R.id.operacion);\r\n\tresultado = (TextView) findViewById(R.id.resultado);\r\n\tborrar = (Button) findViewById(R.id.buttonBorrar);\r\n\r\n\t/*Código de onCreate(Bundle savedInstanceState) continua*/\r\n```\r\n\r\nSe crean "listener" dentro de onCreate(Bundle savedInstanceState) para botones numéricos y para seleccionar el tipo de operación:\r\n\r\n```\r\n//Listener para botones numéricos\r\nOnClickListener marcar = new View.OnClickListener() {\r\n\t@Override\r\n\tpublic void onClick(View v) {\r\n\t\tTextView txt = (TextView) v;\r\n\t\t//Si no se ha introducido operación a realizar (+ - x %)\r\n\t\t//Se introduce los valores a operando 1\r\n\t\tif (operacion.getText().toString().equals("")) {\r\n\t\t\tString existente1 = operando1.getText().toString();\r\n\t\t\toperando1.setText(existente1+txt.getText().toString());\r\n\t\t//Sólo se introduce dígitos a operando 2 cuando\r\n\t\t//Ya existe tipo de operación, \r\n\t\t//y no se tenga ningún resultado anteriormente\r\n\t\t} else if (resultado.getText().toString().equals("")) {\r\n\t\t\tString existente2 = operando2.getText().toString();\r\n\t\t\toperando2.setText(existente2+txt.getText().toString());\r\n\t\t}\r\n\t}\r\n};\r\n\r\n//Listener para seleccionar tipo de operación a realizar (+ - x %)\r\nOnClickListener accion = new View.OnClickListener() {\r\n\t@Override\r\n\tpublic void onClick(View v) {\r\n\t\tTextView txt = (TextView) v;\r\n\t\t//Dos condiciones para validar la operación\r\n\t\t//1. Que se tenga un resultado de operación anterior.\r\n\t\t//   En este caso, se asigna a operando1 y se valida la operación\r\n\t\tif (!resultado.getText().toString().equals("")){\r\n\t\t\t//Variable resultado contenía "dígitos extraños": (_=_)\r\n\t\t\toperando1.setText(resultado.getText().toString().substring(3));\r\n\t\t\toperacion.setText(txt.getText().toString());\r\n\t\t\toperando2.setText("");\r\n\t\t\tresultado.setText("");\r\n\t\t//2. Exista operando 1\r\n\t\t} else if (!operando1.getText().toString().equals("") \r\n\t\t\t\t&& operacion.getText().toString().equals("")) {\r\n\t\t\toperacion.setText(txt.getText().toString());\r\n\t\t}\r\n\t}\r\n};\r\n```\r\n\r\nPara poder **borrar** el último dígito el "listener" se lo he asignado directamente al botón y he seguido los siguientes pasos:\r\n\r\n1.  Si existe operando2, borro su último dígito (hasta dejar vacío)\r\n2.  Si existe operación, la borro\r\n3.  Si existe operando1, borro su último dígito (hasta dejar vacío)\r\n\r\nSu código es:\r\n\r\n```\r\n//Borrado el último dígito marcado\r\nborrar.setOnClickListener(new View.OnClickListener() {\r\n\t@Override\r\n\tpublic void onClick(View v) {\r\n\t\t//Se permite editar cuando el usuario al menos ha introducido un dígito\r\n\t\t//El orden es de atrás hacía adelante: resultado, operando1, operación, operando1\r\n\t\tif (!resultado.getText().toString().equals("")){\r\n\t\t\t//Si ya se realizó operación se resetean todos los valores\r\n\t\t\t//Numéricos y de operaciones\r\n\t\t\tlimpiar(v);\r\n\t\t//Se borra de atrás para adelante\r\n\t\t} else if (!operando2.getText().toString().equals("")) {\r\n\t\t\toperando2.setText(operando2.getText().subSequence(0, operando2.getText().length() - 1)+"");\r\n\t\t} else if (!operacion.getText().toString().equals("")){\r\n\t\t\toperacion.setText(operacion.getText().subSequence(0, operacion.getText().length() - 1)+"");\r\n\t\t} else if (!operando1.getText().toString().equals("")){\r\n\t\t\toperando1.setText(operando1.getText().subSequence(0, operando1.getText().length() - 1)+"");\r\n\t\t}\r\n\t}\r\n});\r\n```\r\n\r\nLa acción de obtener resultado (pulsar sobre "=") se llama **public void lanzarOperacion(View v)** y crea directamente al pulsar sobre de igual. El evento se adjudica directamente en el XML. Dicho evento lanzará Intent y recibirá el resultado procesado (hacer uso de Intent no es necesario, lo realizo así para abarcar más métodos). El evento no será lanzado si el operando2 esta vacío. Se usa sentencias if, else if para saber a que Intent se debe lanzar.\r\n\r\n```\r\npublic void lanzarOperacion(View v) {\r\n\t//Si operando 2 no contiene valor numérico, no se lanza el evento\r\n\tif (operando2.getText().toString().equals("")) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tIntent intent = null;\r\n\t\r\n\t//Según el tipo de operación seleccionado (+ - x %)\r\n\t//se lanza la actividad correspondiente\r\n\tif (operacion.getText().toString().equals("+"))\r\n\t\tintent = new Intent(MainActivity.this, SumaActivity.class);\r\n\telse if (operacion.getText().toString().equals("-"))\r\n\t\tintent = new Intent(MainActivity.this, RestaActivity.class);\r\n\telse if (operacion.getText().toString().equals("x"))\r\n\t\tintent = new Intent(MainActivity.this, MultiplicacionActivity.class);\r\n\telse if (operacion.getText().toString().equals("%"))\r\n\t\tintent = new Intent(MainActivity.this, DivisionActivity.class);\r\n\t\r\n\t//Se lanza la información extra de los operandos\r\n\tintent.putExtra("operando1", operando1.getText().toString());\r\n\tintent.putExtra("operando2", operando2.getText().toString());\r\n\tstartActivityForResult(intent, TESTIGO);\r\n}\r\n```\r\n\r\nY el resultado recibido por la "actividad" se procesa en **protected void onActivityResult(int requestCode, int resultCode, Intent data)** y su código es el siguiente:\r\n\r\n```\r\n@Override\r\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\t//Si lo recibido corresponde con lo esperado (TESTIGO)\r\n\tif (requestCode == TESTIGO) {\r\n\t\tswitch (resultCode) {\r\n\t\tcase RESULT_OK:\r\n\t\t\tString res = data.getStringExtra("resultado");\r\n\t\t\tresultado.setText(" = "+res);\r\n\t\t\tbreak;\r\n\t\tcase RESULT_CANCELED:\r\n\t\t\tToast.makeText(this, "Formato de número no válido", Toast.LENGTH_SHORT).show();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nPara poder introducir decimales he creado el método **public void introducirDecimales(View v)**. Si el usuario acaba de obtener un resultado no procede insertar decimales, por lo que se sale del evento. La primera situación prevista es que se introdujera operación a realizar, lo que equivale a decir que se desea insertar decimal al segundo operando. Caso contrario, se trataría del primer operando. En ambos casos se comprueba que el número no tenga ya decimales **(operando1.getText().toString().split(".").length == 1)**, si ya tuviese decimales no hay nada más que hacer, pero si no tiene se concatena el punto al operando de que se trate. El código es el siguiente:\r\n\r\n```\r\npublic void introducirDecimales(View v){\r\n\tTextView txt = (TextView) v;\r\n\t//Si ya existe un "resultado" no procede insertar decimal\r\n\tif (!resultado.getText().toString().equals("")) {\r\n\t\treturn;\r\n\t}\r\n\t//Si no existe operación,\r\n\t//el punto decimal se trataría de introducir sobre primer operando\r\n\tif (operacion.getText().toString().equals("")){\r\n\t\tString[] partido = operando1.getText().toString().split(".");\r\n\t\t//No se ha generado dos elementos, quiere decir que no tiene decimal\r\n\t\tif (partido.length == 1) {\r\n\t\t\tString existente = operando1.getText().toString();\r\n\t\t\toperando1.setText(existente+txt.getText().toString());\r\n\t\t}\r\n\t} else {\r\n\t\t//Si existe operación,\r\n\t\t//el punto decimal se trataría de introducir sobre segundo operando\r\n\t\tString[] partido = operando2.getText().toString().split(".");\r\n\t\t//No se ha generado dos elementos, quiere decir que no tiene decimal\r\n\t\tif (partido.length == 1) {\r\n\t\t\tString existente = operando2.getText().toString();\r\n\t\t\toperando2.setText(existente+txt.getText().toString());\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\nTermino el post comentado una de las clases que sirven para recibir el startActivityForResult(). En este caso, sólo comentar el caso de la suma, ya que su código sólo difiere de la multiplicación, resta o división en una operación. En **public class SumaActivity extends Activity** {...  Se capturan los dos operando del **MainActivity.java** mediante **getIntent().getStringExtra("operando1")**. Y se parsea a Double. Puede dar excepción si se introduce de manera incorrecta el punto decimal, por lo que se trata la excepción y mediante el bloque **cacth** y se envía el Intent, si no se da excepción se pasa el parámetro extra del resultado de la operación que está esperando la clase MainActivity.java. Su código es el siguiente:\r\n\r\n```\r\npublic class SumaActivity extends Activity{\r\n\t\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\t\r\n\t\t//Se obtienen los valores del Intent "Origen"\r\n\t\tString operando1 = getIntent().getStringExtra("operando1");\r\n\t\tString operando2 = getIntent().getStringExtra("operando2");\r\n\t\t\r\n\t\t//Se declara el Intent de regreso\r\n\t\tIntent returnIntent = new Intent();\r\n\t\t\r\n\t\ttry {\t\r\n\t\t\tFloat op1 = Float.parseFloat(operando1);\r\n\t\t\tFloat op2 = Float.parseFloat(operando2);\r\n\t\t\tFloat res = op1+op2;\r\n\t\t\t\r\n\t\t\t//Si se ha llegado hasta aquí el formato de número es correcto\r\n\t\t\tString resultado = res.toString();\r\n\r\n\t\t\treturnIntent.putExtra("resultado", resultado);\r\n\t\t\tsetResult(RESULT_OK,returnIntent);\r\n\t\t\tfinish();\r\n\t\t\t\r\n\t\t} catch(NumberFormatException e) {\r\n\t\t\t//Si se entra aquí es que formato de número es incorrecto\r\n\t\t\t//Se envía resultado cancelado\r\n\t\t\tsetResult(RESULT_CANCELED, returnIntent);\r\n\t\t\tfinish();\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n**Nota Importante**: cuando se crean nuevas actividades sin usar el asistente de Eclipse, es decir, crear una clase que extienda "Activity" sin su vista layout (por que no se necesite, como este caso) hay que acordarse de registrar la actividad en el AndroidManifiest.xml. Si se genera la actividad y al mismo tiempo su vista Layout con el asistente de Eclipse no es necesario registrar la actividad ya que Eclipse se encarga de registrarla. Proyecto en [GitHub](https://github.com/ivanalbizu/android/tree/master/Calculadora) En el enlace se puede descargar el [código de calculadora para Android completo](https://drive.google.com/open?id=0BzQS5pOyF_HjYmZ1dm1CNmw4a2s "Descargar código calculadora para Android").'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Crud en Android con ORM Green Dao\'\r\ndate: Wed, 19 Nov 2014 21:59:59 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nEn este proyecto realizaré un sistema Crud en Android con el ORM de Green Dao. Para crear el proyecto he adaptado a mis necesidades el DaoExampleGenerator que se puede encontrar en [GitHub de Green Dao](https://github.com/greenrobot/greenDAO "GitHub de Green Dao").\r\n\r\n```\r\npublic static void main(String[] args) throws Exception {\r\n\t//Primer parámetro: versión de la base de datos\r\n\t//Segundo parámetro: paquete de mi proyecto Android quiero que se exporten \r\n\t//los POJO que identifican a mis tablas en la Base de datos\r\n\tSchema schema = new Schema(1, "eu.ivanalbizu.gestorescontenidos.entity");\r\n\t\r\n\t//Ficheros DAO de cada tabla de la base de datos los exporte al paquete \r\n\t//"eu.ivanalbizu.gestorescontenidos.dao" de mi proyecto Android\r\n\tschema.setDefaultJavaPackageDao("eu.ivanalbizu.gestorescontenidos.dao");\r\n\r\n\t//Se añade la base de datos\r\n\taddGestor(schema);\r\n\r\n\t//Especificar la ruta del proyecto\r\n\tnew DaoGenerator().generateAll(schema, "/home/ivan/workspace/PMDM/GestoresContenidos/src");\r\n}\r\n\r\nprivate static void addGestor(Schema schema) {\r\n\t//Definición de la tabla\r\n\tEntity gestor = schema.addEntity("Gestor");\r\n\tgestor.addIdProperty().autoincrement();\r\n\tgestor.addStringProperty("nombre").notNull();\r\n\tgestor.addStringProperty("icono").notNull();\r\n}\r\n```\r\n\r\nPrepara contenidos para luego cargarlos a la base de datos en el archivo Data.java\r\n\r\n```\r\npublic class Data {\r\n\t\r\n\tpublic static SQLiteDatabase db;\r\n\t\r\n\tpublic static void generarDatos(SQLiteDatabase db){\r\n\t\tData.db = db;\r\n\t\t\r\n\t\tContentValues gestor = new ContentValues();\r\n\t\t\r\n\t\t//Repetir tantas veces como registros queramos\r\n\t\tgestor.put(GestorDao.Properties.Nombre.columnName, "Wordpress");\r\n\t\tgestor.put(GestorDao.Properties.Icono.columnName, "wordpress");\r\n\t\tdb.insert(GestorDao.TABLENAME, "", gestor);\r\n\t\t\r\n\t\tgestor.put(GestorDao.Properties.Nombre.columnName, "Drupal");\r\n\t\tgestor.put(GestorDao.Properties.Icono.columnName, "drupal");\r\n\t\tdb.insert(GestorDao.TABLENAME, "", gestor);\t\t\r\n\t\t\r\n\t\tgestor.put(GestorDao.Properties.Nombre.columnName, "Joomla!");\r\n\t\tgestor.put(GestorDao.Properties.Icono.columnName, "joomla");\r\n\t\tdb.insert(GestorDao.TABLENAME, "", gestor);\r\n\t}\r\n}\r\n```\r\n\r\nY para cargar los datos en la aplicación vamos al archivo DaoMaster.java y en el método onCreate(SQLiteDatabase db) que está dentro del método Abstracto OpenHelper extends SQLiteOpenHelper añadimos Data.generarDatos(db);\r\n\r\n```\r\npublic static abstract class OpenHelper extends SQLiteOpenHelper {\r\n\r\n    public OpenHelper(Context context, String name, CursorFactory factory) {\r\n        super(context, name, factory, SCHEMA_VERSION);\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(SQLiteDatabase db) {\r\n        Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);\r\n        createAllTables(db, false);\r\n        Data.generarDatos(db);\r\n    }\r\n}\r\n```\r\n\r\nAhora voy a crear las Activitys y las Vistas (cuando proceda). Son las siguientes:\r\n\r\n*   ListadoActivity.java + activity_listado.xml\r\n*   list_item_gestor.xml\r\n*   AddActivity.java + activity_add.xml\r\n*   EditDeleteActivity.java + activity_edit_delete.xml\r\n\r\nVista "list_item_gestor.xml" el contenedor será RelativeLayout. No usaremos clase, sóĺo vista XML. Para representar cada ítem dentro de un LinearLayout colocamos ImageView y TextView. Vista "activity_main.xml". Sólo tendremos dos botones, a los cuales añadiremos los eventos más adelante. Uno será para ver listado de gestores de contenido y el otro para ir a la interfaz de añadir. Vista "activity_add.xml". Contiene TextView y EditText. Y un Button para incluir el evento de añadir gestor de contenido. Vista "activity_edit_delete.xml". Recibe en el nombre en un TextView del gestor de contenido sobre el que se pulsó, y un EditText para que se pueda cambiar el nombre. Y dos botones, uno para "Modificar" y otro para "Eliminar". **A partir de ahora sólo tocamos archivos "java", excepto para insertar los eventos dentro de los layouts.** **GestorAdapter.java** Primero configuro el adaptador de la vista, cuyo código es:\r\n\r\n```\r\npublic class GestorAdapter extends ArrayAdapter<Gestor> {\r\n\r\n\tprivate List<Gestor> gestores;\r\n\tprivate Activity context;\r\n\tprivate int layoutMolde;\r\n\t\r\n\tpublic GestorAdapter(Activity context, int layoutMolde, List<Gestor> gestores) {\r\n\t\tsuper(context, layoutMolde, gestores);\r\n\t\tthis.gestores = gestores;\r\n\t\tthis.context = context;\r\n\t\tthis.layoutMolde = layoutMolde;\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic View getView(int position, View convertView, ViewGroup parent) {\r\n\t\tLayoutInflater inflater = context.getLayoutInflater();\r\n\t\tconvertView = inflater.inflate(layoutMolde, null);\r\n\t\t\r\n\t\tGestor gestorActual = gestores.get(position);\r\n\t\t\r\n\t\tImageView iconoGestor = (ImageView) convertView.findViewById(R.id.imageDefecto);\r\n\t\tTextView textoGestor = (TextView) convertView.findViewById(R.id.textDefecto);\r\n\t\t\r\n\t\tint resourceId = context.getResources().getIdentifier(gestorActual.getIcono(), "ic_wordpress", context.getPackageName());\r\n\t\ticonoGestor.setImageResource(resourceId);\r\n\t\ttextoGestor.setText(gestorActual.getNombre());\r\n\t\t\r\n\t\treturn convertView;\r\n\t}\r\n}\r\n```\r\n\r\n**ListadoActivity.java** Se declaran las variables propias de la base de datos de Green Dao, que son:\r\n\r\n```\r\npublic DaoSession daoSession;\r\npublic DaoMaster daoMaster;\r\nprivate SQLiteDatabase db;\r\n```\r\n\r\nY las variables que modelan las clases de la aplicación y sus relaciones, que son:\r\n\r\n```\r\nprivate GestorDao gestorDao;\r\nprivate List<Gestor> gestores;\r\nprivate Gestor gestor;\r\nprivate ListView list;\r\nprivate GestorAdapter adaptadorGestor;\r\nprivate static final int EDITAR_ELIMINAR_GESTOR = 1;\r\n```\r\n\r\nTendremos tres métodos. En el método onCreate(Bundle savedInstanceState) se trabaja con las variables creadas para la base de datos. Se trata de obtener los ítems de la tabla y pasarlo al adaptador. El segundo método es onListItemClick(ListView l, View v, int position, long id), para enviar el "Intent" con la ID del gestor seleccionado. El tercer método es  onActivityResult(int requestCode, int resultCode, Intent data), para recibir el resultado que nos envía la clase EditDeleteActivity.java. El código completo de esta clase:\r\n\r\n```\r\npublic class ListadoActivity extends ListActivity {\r\n\r\n\t//Variables propias\r\n\tprivate GestorDao gestorDao;\r\n\tprivate List<Gestor> gestores;\r\n\tprivate Gestor gestor;\r\n\tprivate ListView list;\r\n\tprivate GestorAdapter adaptadorGestor;\r\n\tprivate static final int EDITAR_ELIMINAR_GESTOR = 1;\r\n\t\r\n\t//Variables relativas a Green Dao Database\r\n\tpublic DaoSession daoSession;\r\n\tpublic DaoMaster daoMaster;\r\n\tprivate SQLiteDatabase db;\r\n\t\r\n\t\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_listado);\r\n\t\t\r\n\t\t//Otenemos la referencia de la lista\r\n\t\tlist = getListView();\r\n\t\t//Conexión a la base de datos\r\n\t\tDevOpenHelper helper = new DaoMaster.DevOpenHelper(this, "gestor-db", null);\r\n\t\tdb = helper.getWritableDatabase();\r\n\t\tdaoMaster = new DaoMaster(db);\r\n\t\tdaoSession = daoMaster.newSession();\r\n\t\t\r\n\t\t//Obtenemos un objeto de tipo "GestorDao" que manipula por nosotros\r\n\t\t//la tabla Gestor de la Base de Datos\r\n\t\tgestorDao = daoSession.getGestorDao();\r\n\t\t\r\n\t\t//Obtiene listado de Gestores, equivale a: SELECT * FROM GESTOR\r\n\t\tgestores = gestorDao.loadAll();\r\n\t\t\r\n\t\t//Pasamos el adaptador\r\n\t\tadaptadorGestor = new GestorAdapter(this, R.layout.list_item_gestor, gestores);\r\n\t\tsetListAdapter(adaptadorGestor);\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tprotected void onListItemClick(ListView l, View v, int position, long id) {\r\n\t\tsuper.onListItemClick(l, v, position, id);\r\n\t\t\r\n\t\t//Se obtiene la posición del elemento seleccionado\r\n\t\tGestor gestorSeleccionado = (Gestor) gestores.get(position);\r\n\t\t\r\n\t\t//Se envía ID del elemento seleccionado\r\n\t\tIntent intent = new Intent(this, EditDeleteActivity.class);\r\n\t\tintent.putExtra("idGestor", gestorSeleccionado.getId());\r\n\t\tstartActivityForResult(intent, EDITAR_ELIMINAR_GESTOR);\r\n\t\t\r\n\t}\r\n\t\r\n\t@Override\r\n\tprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\t\t//Se evalua lo recibido, si es OK, se procede a actualizar la interfaz\r\n\t\tif (resultCode == Activity.RESULT_OK && requestCode == EDITAR_ELIMINAR_GESTOR) {\r\n\t\t\t\r\n\t\t\tToast.makeText(this, "Operación realizada con éxito", Toast.LENGTH_SHORT).show();\r\n\t\t\t\r\n\t\t\tadaptadorGestor.clear();\r\n\t\t\tadaptadorGestor.addAll(gestorDao.loadAll());\r\n\t\t\tadaptadorGestor.notifyDataSetChanged();\r\n\r\n\t\t\tadaptadorGestor = new GestorAdapter(this, R.layout.list_item_gestor, gestores);\r\n\t\t\t\r\n\t\t\tlist.setAdapter(adaptadorGestor);\r\n\t\t\t\r\n\t\t\t//Realizada la operación, se envía a la página principal\r\n\t\t\tIntent intent = new Intent(this, MainActivity.class);\r\n\t\t\tstartActivity(intent);\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n**EditDeleteActivity.java** Recibe el gestor que ha sido seleccionado en en la clase ListadoActivity.java y se habilita la opción de editar o eliminar. Se declaran las variables propias de la base de datos de Green Dao, que son:\r\n\r\n```\r\npublic DaoSession daoSession;\r\npublic DaoMaster daoMaster;\r\nprivate SQLiteDatabase db;\r\n```\r\n\r\nY las variables que modelan las clases de la aplicación y sus relaciones, que son:\r\n\r\n```\r\nprivate GestorDao gestorDao;\r\nprivate EditText editTexto;\r\nprivate Gestor gestorAEditarEliminar;\r\n```\r\n\r\nTendremos tres métodos. En el método onCreate(Bundle savedInstanceState) se trabaja con las variables creadas para la base de datos. Se trata de obtener los ítems de la tabla y pasarlo al adaptador. El método editarGestor(View v), captura la información del TextView y se actualiza en la base de datos. Y el otro, eliminarGestor(View v), elimina el gestor seleccionado. El código completo de esta clase:\r\n\r\n```\r\npublic class EditDeleteActivity extends Activity {\r\n\t\r\n\t//Variables propias\r\n\tprivate GestorDao gestorDao;\r\n\tprivate EditText editTexto;\r\n\tprivate Gestor gestorAEditarEliminar;\r\n\t\r\n\t//Variables relativas a Green Dao Database\r\n\tpublic DaoSession daoSession;\r\n\tpublic DaoMaster daoMaster;\r\n\tprivate SQLiteDatabase db;\r\n\t\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_edit_delete);\r\n\t\t\r\n\t\t//Se obtiene referencia al elemento XML\r\n\t\teditTexto = (EditText) findViewById(R.id.editTextNombreGestor);\r\n\t\t\r\n\t\t//Se obtiene el elemento seleccionado en ListadoActivity.java\r\n\t\t//mediante su ID recibida mediante startActivityForResut()\r\n\t\tBundle extras = getIntent().getExtras();\r\n\t\tlong idGestor = extras.getLong("idGestor");\r\n\t\t\r\n\t\t//Conexión a la base de datos\r\n\t\tDevOpenHelper helper = new DaoMaster.DevOpenHelper(this, "gestor-db", null);\r\n\t\tdb = helper.getWritableDatabase();\r\n\t\tdaoMaster = new DaoMaster(db);\r\n\t\tdaoSession = daoMaster.newSession();\r\n\t\t\r\n\t\t//Obtenemos un objeto de tipo "GestorDao" para manipular\r\n\t\t//la tabla Gestor de la Base de Datos\r\n\t\tgestorDao = daoSession.getGestorDao();\r\n\t\t\r\n\t\t//Se obtiene un Gestor con id = i mediante el método load(long i)\r\n\t\tgestorAEditarEliminar = gestorDao.load(idGestor);\r\n\t\t\r\n\t\t//Se carga en el EditText el nombre a la fruta a editar\r\n\t\teditTexto.setText(gestorAEditarEliminar.getNombre());\r\n\t}\r\n\t\r\n\tpublic void editarGestor(View v){\r\n\t\t\r\n\t\t//Evento disparado al pulsar sobre el botón Editar\r\n\t\t//Se captura el texto introducido en el TextView\r\n\t\tString nuevoNombre = editTexto.getText().toString();\r\n\t\t\r\n\t\t//Se actualiza la base de datos\r\n\t\tgestorAEditarEliminar.setNombre(nuevoNombre);\r\n\t\tgestorDao.update(gestorAEditarEliminar);\r\n\t\t\r\n\t\t//Si se llega hasta aquí todo va bien, y se devuelve OK \r\n\t\tsetResult(RESULT_OK);\r\n\t\tfinish();\r\n\t}\r\n\t\r\n\tpublic void eliminarGestor(View v){\r\n\t\t\r\n\t\t//Evento disparado al pulsar sobre el botón Eliminar\r\n\t\tgestorDao.delete(gestorAEditarEliminar);\r\n\t\t\r\n\t\t//Si se llega hasta aquí todo va bien, y se devuelve OK \r\n\t\tsetResult(RESULT_OK);\r\n\t\tfinish();\r\n\t}\r\n}\r\n```\r\n\r\n**AddActivity.java** Se declaran las variables propias de la base de datos de Green Dao, que son:\r\n\r\n```\r\npublic DaoSession daoSession;\r\npublic DaoMaster daoMaster;\r\nprivate SQLiteDatabase db;\r\n```\r\n\r\nY las variables que modelan las clases de la aplicación y sus relaciones, que son:\r\n\r\n```\r\nprivate EditText nombreGestor;\r\nprivate GestorDao gestorDao;\r\n```\r\n\r\nTendremos dos métodos. En el método onCreate(Bundle savedInstanceState) se carga la base de datos. El método guardarGestor(View v) guarda el nuevo contenido en la base de datos y nos envía a la página principal. El código completo de esta clase:\r\n\r\n```\r\npublic class AddActivity extends Activity {\r\n\t\r\n\t//Variables propias\r\n\tprivate EditText nombreGestor;\r\n\tprivate GestorDao gestorDao;\r\n\t\r\n\t//Variables relativas a Green Dao Database\r\n\tpublic DaoSession daoSession;\r\n\tpublic DaoMaster daoMaster;\r\n\tprivate SQLiteDatabase db;\r\n\t\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_add);\r\n\t\t\r\n\t\t//Obtiene el texto del EditText\r\n\t\tnombreGestor = (EditText) findViewById(R.id.editTextNombreGestor);\r\n\t\t\r\n\t\tDevOpenHelper helper = new DaoMaster.DevOpenHelper(this, "gestor-db", null);\r\n\t\tdb = helper.getWritableDatabase();\r\n\t\tdaoMaster = new DaoMaster(db);\r\n\t\tdaoSession = daoMaster.newSession();\r\n\t\t\r\n\t\tgestorDao = daoSession.getGestorDao();\r\n\t}\r\n\t\r\n\tpublic void guardarGestor(View v){\r\n\t\t\r\n\t\t//Se obtiene el nombre del EditText\r\n\t\tString nombre = nombreGestor.getText().toString();\r\n\t\t\r\n\t\t//Se crea nuevo gestor\r\n\t\tGestor gestorNuevo = new Gestor();\r\n\t\tgestorNuevo.setNombre(nombre);\r\n\t\tgestorNuevo.setIcono("ic_wordpress");\r\n\t\t\r\n\t\t//Se inserta el nuevo gestor en la base de datos\r\n\t\tgestorDao.insert(gestorNuevo);\r\n\t\tToast.makeText(this, "Se ha añadido "+nombre, Toast.LENGTH_SHORT).show();\r\n\t\t\r\n\t\t//Realizada la operación, se envía a la página principal\r\n\t\tIntent intent = new Intent(this, MainActivity.class);\r\n\t\tstartActivity(intent);\r\n\t}\r\n}\r\n```\r\n\r\n**MainActivity.java** Sólo había que crear dos métodos. El primero listadoGestor(View v) y el segundo anadirGestor(View v), nos lanzan a las Activitys correspondientes. El código completo es:\r\n\r\n```\r\npublic class MainActivity extends Activity {\r\n\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_main);\r\n\t}\r\n\t\r\n\tpublic void listadoGestor(View v){\r\n\t\tIntent intent = new Intent(this, ListadoActivity.class);\r\n\t\tstartActivity(intent);\r\n\t}\r\n\t\r\n\tpublic void anadirGestor(View v){\r\n\t\tIntent intent = new Intent(this, AddActivity.class);\r\n\t\tstartActivity(intent);\r\n\t}\r\n}\r\n```\r\n\r\nEl vídeo: Y el enlace de descarga del [proyecto Android Green Dao ORM](https://db.tt/FiOBFetH "Descargar proyecto Android Green Dao ORM")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: How to make polkit default to the currently logged in user\r\npublished: true\r\ndescription: Change the default behaviour of polkit in order to not list all the admin users when commands need root elevation\r\ntags: polkit,javascript,permissions,centos\r\nctime: 2019-05-24\r\n---\r\n\r\n## The problem\r\n\r\nHave you ever launched a command that needing root level permissions as a puny normal user? When doing so on systems equipped with polkit, and your user have administrative permissions (in the `wheel` group), you get a prompt to enter your password. So far so good.\r\n\r\nIf it happens that on that particular systems there are multiple users in the `wheel` group, you get an ugly list of usernames, separating you from the quick "I\'ll just enter my password and be done with it". Why would I use (or know) the password of another user? I see that as a mild security issue or just an encouragement for bad practice.\r\n\r\n```bash\r\nnrebughini@host $ poweroff\r\n==== AUTHENTICATING FOR org.freedesktop.login1.power-off ===\r\nAuthentication is required for powering off the system.\r\nMultiple identities can be used for authentication:\r\n 1.  admin1\r\n 2.  admin2\r\n 3.  admin3\r\n 4.  nrebughini # Polkit, Y U NO make this the default one at least?\r\n 5.  admin5\r\nChoose identity to authenticate as (1-5):\r\n```\r\n\r\n## The solution\r\n\r\nThe behaviour I wish it had would be:\r\n\r\n- If the current user is in the wheel group, prompt me for my password\r\n- Else, prompt me for the root password\r\n\r\nTranslating this to polkit rules, I created a new rule file in `/etc/polkit-1/rules.d/` named `00-custom.rules`:\r\n\r\n```javascript\r\n// 00-custom.rules\r\n\r\npolkit.addAdminRule(function(action, subject) {\r\n    if( subject.isInGroup("wheel") ) {\r\n        return ["unix-user:"+subject.user];\r\n    }\r\n    else {\r\n        return [polkit.Result.NO];\r\n    }\r\n});\r\n```\r\n\r\nThis effectively reduces the list of selectable users to only the current user, only if they\'re present in the `wheel` group.\r\n\r\n```bash\r\nnrebughini@host $ poweroff\r\n==== AUTHENTICATING FOR org.freedesktop.login1.power-off ===\r\nAuthentication is required for powering off the system.\r\nAuthenticating as: Nicolò Rebughini (nrebughini)\r\nPassword:\r\n```\r\n\r\nMuch cleaner and I\'m not exposing every admin account on the system, nor encouraging bad practices to use other people\'s passwords.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Demo AngularJS shop - 01 Generando proyecto con Yeoman\'\r\ndate: Thu, 07 Aug 2014 14:04:43 +0000\r\npublished: true\r\ntags: AngularJS,Css3,JavaScript\r\n---\r\n\r\nPrimer vídeo del proyecto construido con **AngularJS** en el que voy a simular una aplicación de una tienda que contiene un catálogo de productos. No pretendo abarcar todas las funcionalidades de una tienda en sí. Los productos poseen características como: nombre, descripción, imágenes, precio, stock y novedad. El fin de la aplicación será aprovechar la potencia de AngularJS para construir un catálogo de productos que muestre u oculte productos o añada aspectos gráficos, usando directivas, controladores, vistas y quizá algo más según avance. Para construir el proyecto **AngularJS** usaré **Yeoman**: [Yeoman](http://yeoman.io/ "Abre en ventana nueva la web Yeoman"), utilidad muy interesante para empezar a trabajar proyectos variados (Wordpress, Foundation Zurb, Phone Gap...). Se necesita tener instalado [NodeJS](http://nodejs.org/ "Abre en ventana nueva web NodeJS"). En el repositiorio GitHub de Yeoman para AngularJS se muestran los comandos necesarios para crear el proyecto:  [Proyecto en GitHub de Yeoman - AngularJS.](https://github.com/yeoman/generator-angular "Abre en ventana nueva proyecto GitHub de AngularJS y Yeoman") Vídeo del proceso  \r\n\r\n## Proyecto Angular 1 con Yeoman\r\n\r\n1.- Creación de el directorio contenedor de la aplicación:\r\n\r\n```\r\nmkdir ngdemo\r\n```\r\n\r\n2.- Acceso al directorio:\r\n\r\n```\r\ncd ngdemo\r\n```\r\n\r\n3.- Crear proyecto con Yeoman:\r\n\r\n```\r\nyo angular ngdemo\r\n```\r\n\r\n4.- Para arrancar el servidor y probar que corre bien:\r\n\r\n```\r\ngrunt serve\r\n```\r\n\r\nEn siguientes vídeos comenzaré a trabajar con AngularJS.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Demo AngularJS shop - 02 Configurando menú principal\'\r\ndate: Fri, 08 Aug 2014 20:55:43 +0000\r\npublished: true\r\ntags: AngularJS,Css3,JavaScript\r\n---\r\n\r\nEn esta entrada sobre AngularJS continuaré mi anterior artículo [generando proyecto AngularJS con Yeoman](http://ivanalbizu.eu/demo-angularjs-shop-01-generando-proyecto-con-yeoman/ "Abre en ventana nueva el artículo: Generando proyecto con yeoman"), en el que trabajaré sobre el menú de la aplicación. Limpiamos el código generado como demo al crear proyecto AngularJS usando Yeoman. Para ello, en el archivo index.html eliminamos el vínculo "About" del menú, y la etiqueta script que carga el controlador about.js. Eliminamos el archivo del controlador scripts/controllers/about.js. Y la vista views/about.html. Añadimos controladores y vistas para product y contact, para ello, en consola:\r\n\r\n```\r\nyo angular:controller product --save\r\nyo angular:controller contact --save\r\nyo angular:view product --save\r\nyo angular:view contact --save\r\n```\r\n\r\nAñadimos al menú los nuevos items:\r\n\r\n```\r\n<li><a ng-href="#/contact">Contact</a></li>\r\n<li><a ng-href="#/product">Product</a></li>\r\n```\r\n\r\nVamos a separar el código del menú principal del archivo index.html. Creamos dos nuevas vista:\r\n\r\n```\r\nyo angular:view mainMenu --save\r\nyo angular:view userMenu --save\r\n```\r\n\r\nY copiamos el código en la vista creada views/mainMenu.html,\r\n\r\n```\r\n<ul class="nav nav-pills pull-right">\r\n <li class="active"><a href="#">Home</a></li>\r\n <li><a ng-href="#/contact">Contact</a></li>\r\n <li><a ng-href="#/product">Product</a></li>\r\n</ul>\r\n<h3 class="text-muted">ngdemo</h3>\r\n```\r\n\r\nPara que la llamada a esa vista se haga correctamente desde el index.html, en la etiqueta div con clase header añadimos la directiva ng-include, quedando el código así:\r\n\r\n```\r\n<div ng-include="\'views/mainMenu.html\'" class="header"></div>\r\n```\r\n\r\nModificamos el archivo scripts/app.js para que funcione el menú\r\n\r\n```\r\n...\r\nangular\r\n  .module(\'ngdemoApp\', [\r\n    \'ngAnimate\',\r\n    \'ngCookies\',\r\n    \'ngResource\',\r\n    \'ngRoute\',\r\n    \'ngSanitize\',\r\n    \'ngTouch\'\r\n  ])\r\n  .config(function ($routeProvider) {\r\n    $routeProvider\r\n      .when(\'/\', {\r\n        templateUrl: \'views/main.html\',\r\n        controller: \'MainCtrl\'\r\n      })\r\n      .when(\'/contact\', {\r\n        templateUrl: \'views/contact.html\',\r\n        controller: \'ContactCtrl\'\r\n      })\r\n      .when(\'/product\', {\r\n        templateUrl: \'views/product.html\',\r\n        controller: \'ProductCtrl\'\r\n      })\r\n      .otherwise({\r\n        redirectTo: \'/\'\r\n      });\r\n  });\r\n```\r\n\r\nPara añadir el menú superior fijo de color negro, de usuario y carrito de la compra, vamos al archivo index.html, y antes del div con clase container creamos el siguiente elemento (cambiamos la clase container por container-fluid):\r\n\r\n```\r\n<div ng-include="\'views/userMenu.html\'" class="header"></div>\r\n```\r\n\r\nDe momento dejaremos comentado ya que le daremos estilos en el siguiente paso. En la vista llamada views/userMenu.html crearemos el código siguiente:\r\n\r\n```\r\n<div class="navbar navbar-default navbar-fixed-top">\r\n    <div class="navbar-collapse collapse navbar-inverse">\r\n    <ul class="nav navbar-nav navbar-left">\r\n        <li class="dropdown">\r\n        <a href="" class="dropdowntoggle"></a>\r\n        <ul id="user" class="dropdown-menu">\r\n            <li><a href="">Preferences</a></li>\r\n            <li class="divider"></li>\r\n            <li><a href="">Log out</a></li>\r\n        </ul>\r\n        </li>\r\n        <li class="dropdown">\r\n        <a href="" class="dropdowntoggle"></a>\r\n        <ul id="cart" class="dropdown-menu">\r\n            <li>\r\n                <a href="">\r\n                    <img src="" alt="">\r\n                    <div class="detalles"></div>\r\n                    <button class="btn btn-danger btn-xs"></button>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n        </li>\r\n    </ul>\r\n    </div>\r\n</div>\r\n```\r\n\r\nCómo dije, este elemento no estará visible de momento, ya que en el index.html la llamada (con la directiva ng-include) a esta vista está comentada. Para conseguir que el item del menú principal esté activo y marcado con azul vamos a crear el controlador:\r\n\r\n```\r\nyo angular:controller mainmenu --save\r\n```\r\n\r\ny a realizar varias modificaciones al archivo scripts/controllers/mainmenu.js, quedando de la siguiente manera:\r\n\r\n```\r\n.controller(\'MainmenuCtrl\', function ($scope, $location) {\r\n    $scope.isActive = function(viewLocation) {\r\n        return viewLocation === $location.path();\r\n    };\r\n});\r\n```\r\n\r\nCon las líneas anteriores al controlador llamado MainmenuCtrl le pasamos el servicio (así denominado en AngularJS) $location para poder usar la información de la URL en la vista. Hemos creado el método isActive(viewLocation) en la que se pasa como parámetro viewLocation, lo que nos devolverá la ruta actual. Modificamos ahora el archivo views/mainMenu.html y lo dejamos con el siguiente código:\r\n\r\n```\r\n<ul class="nav nav-pills pull-right">\r\n    <li ng-class="{active : isActive(\'/\')}"><a ng-href="#">Home</a></li>\r\n    <li ng-class="{active : isActive(\'/contact\')}"><a ng-href="#/contact">Contact</a></li>\r\n    <li ng-class="{active : isActive(\'/product\')}"><a ng-href="#/product">Product</a></li>\r\n</ul>\r\n<h3 class="text-muted">ngdemo</h3>\r\n```\r\n\r\nCon el código anterior hemos añadido la directiva ng-class a cada item del menú. Con ésta función: _isActive(\'/product\')_ obtendremos un booleano, que devolerá true si tras examinar la ruta actual coincide con la pasada como parámetro en la vista. El funcionamiento de ng-class consiste en añadir la clase (trozo de código anterior a los dos puntos) si la evaluación de la condición (trozo de código posterior a los dos puntos) resulta true. Aquí el vídeo explicando el proceso: En siguientes artículos continuaré con el proyecto demo de AngularJS con Yeoman.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Demo AngularJS shop – 03 Aplicando estilos\'\r\ndate: Mon, 18 Aug 2014 07:32:15 +0000\r\npublished: true\r\ntags: AngularJS,Css3,JavaScript\r\n---\r\n\r\nEn esta entrada explicaré los principales estilos aplicados (alguno puede que lo aplique a posteriori sobre la marcha). Para no hacer muy extensa esta entrada (y el vídeo correspondiente) no explicaré todo, sobre todo de CSS, ya que viendo el código y sus comentarios sobran.\r\n\r\n## Modificaciones previas sobre archivo index.html.\r\n\r\nDescomentamos la línea que carga el menú superior y quitamos la clase header que pusimos provisionalmente para añadir clases de bootstrap, quedando así:\r\n\r\n```\r\n<div ng-include="\'views/userMenu.html\'" class="navbar navbar-default navbar-fixed-top"></div>\r\n```\r\n\r\n## Modificaciones sobre views/userMenu.html\r\n\r\nEliminamos el primer div, ya que ahora tenemos las clases necesarias dentro del archivo index.html. Y modificamos algunas líneas: El primer vínculo quedará así:\r\n\r\n```\r\n<a href="" class="dropdown-toggle" data-toggle="dropdown">User</a>\r\n```\r\n\r\ny el segundo así:\r\n\r\n```\r\n<a href="" class="dropdown-toggle" data-toggle="dropdown">Cart (1 product)</a>\r\n```\r\n\r\nY a los "ul" le añadimos el atributo role="menu" Para no extenderme mucho, el archivo views/userMenu.html quedará así:\r\n\r\n```\r\n<div class="navbar-collapse collapse navbar-inverse">\r\n  <ul class="nav navbar-nav navbar-left">\r\n    <li class="dropdown">\r\n      <a href="" class="dropdown-toggle" data-toggle="dropdown">User</a>\r\n      <ul id="user" class="dropdown-menu" role="menu">\r\n        <li><a href="">Preferences</a></li>\r\n        <li class="divider"></li>\r\n        <li><a href="">Log out</a></li>\r\n      </ul>\r\n    </li>\r\n    <li class="dropdown">\r\n      <a href="" class="dropdown-toggle" data-toggle="dropdown">Cart (1 product)</a>\r\n      <ul id="cart" class="dropdown-menu" role="menu">\r\n        <li>\r\n          <a href="">\r\n            <img src="" alt="">\r\n            <div class="detalles">Producto</div>\r\n            <button class="btn btn-danger btn-xs"></button>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n</div>\r\n```\r\n\r\nA la hoja de estilos styles/main.css le añadimos al final de el último estilo que ya venía incluido el siguiente código:\r\n\r\n```\r\n/*Estilos generales*/\r\nbody{\r\n  font-family: Helvetica;\r\n}\r\n.container-fluid{\r\n  max-width: 1020px;\r\n  margin-top:40px;\r\n}\r\nh1{font-size:1.5em;line-height:1.5*2em;}\r\nh2{font-size:1.4em;line-height:1.4*2em;}\r\nh3{font-size:1.2em;line-height:1.2*2em;}\r\nh4{font-size:1.1em;line-height:1.1*2em;}\r\nh5{font-size:1.0em;line-height:1.0*2em;}\r\np{font-size:0.95em;}\r\n\r\n.block{display:block;clear:both;}\r\n\r\n.header .columns {\r\n  margin-top: 20px;\r\n}\r\n\r\n/*Creación de estrella para precio en oferta*/\r\n.star-six {\r\n  top:-20px;\r\n  margin-bottom:-70px;\r\n  left:6px;\r\n  width:0;\r\n  height:0;\r\n  border-left:44px solid transparent;\r\n  border-right:44px solid transparent;\r\n  border-bottom:88px solid rgba(227,100,95,1);\r\n  position:relative;\r\n  -webkit-transform: rotate(5deg) scale(1,.6) skew(1deg) translate(0px);\r\n  z-index:-9;\r\n}\r\n.star-six:after {\r\n  width:0;\r\n  height:0;\r\n  border-left:44px solid transparent;\r\n  border-right:44px solid transparent;\r\n  border-top:88px solid rgba(227,100,95,1);\r\n  position:absolute;\r\n  content:"";\r\n  top:20px;\r\n  left:-40px;\r\n}\r\n\r\n/*Items de productos*/\r\n.product {\r\n  width: 31.33%;\r\n  margin:1%;\r\n  /*height: auto;*/\r\n  background: white;\r\n  border:1px solid #ccc;\r\n  position: relative;\r\n  z-index: 90;\r\n  float:left;\r\n  box-sizing:border-box;\r\n  -webkit-transition: all .1s;\r\n}\r\n.product h2{\r\n  text-align: center;\r\n  color: white;\r\n  background-color:rgba(50,50,50,.8);\r\n}\r\n.product .caja{\r\n  margin:1em;\r\n}\r\n.product .caja h3{\r\n  text-indent:1em;\r\n  float:left;\r\n}\r\n.product .caja button{\r\n  float:right;\r\n}\r\n.product p{\r\n  padding: 1.5em;\r\n  letter-spacing: 0.09em;\r\n  text-overflow: ellipsis;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  max-height: 4.5em;\r\n  min-height: 4.5em;\r\n  line-height: 1.5em;\r\n  white-space: wrap;  \r\n}\r\n\r\n/*Efecto hover sobre cada item de producto*/\r\nspan.quick-view {\r\n  display: none;\r\n  top:-20px;\r\n  width:50%;\r\n  margin:30% 25%;\r\n  font-size:1.2em;\r\n  line-height:1.3em;\r\n  padding:1em .2em;\r\n  background-color:rgba(255,255,255,.8);\r\n  box-shadow:0 0 5px gray;\r\n  color:rgba(50,50,50,.9);\r\n  cursor:pointer;\r\n}\r\nspan.quick-view:before {\r\n  content: url(\'/images/search.png\');\r\n  padding-right:.5em;\r\n}\r\nspan.cart:before {\r\n  content: url(\'/images/cart.png\');\r\n  padding-right:.5em; \r\n}\r\n.product:hover{\r\n  box-shadow:0 0 10px gray;\r\n  -webkit-transition: all .3s;\r\n}\r\n.product:hover span.quick-view {\r\n  display:inline-block;\r\n  position: absolute;\r\n  top:30px;\r\n  text-align: center;\r\n  -webkit-transition: all .3s;\r\n}\r\n\r\n/*Efecto ribbon sobre cada producto \'nuevo\'*/\r\n.ribbon-wrapper-green {\r\n  width: 85px;\r\n  height: 88px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  top: -4px;\r\n  right: -4px;\r\n}\r\n.ribbon-green {\r\n  font: bold 15px Sans-Serif;\r\n  color: #333;\r\n  letter-spacing:.3em;\r\n  text-align: center;\r\n  text-shadow: rgba(255,255,255,0.5) 0px 1px 0px;\r\n  -webkit-transform: rotate(45deg);\r\n  -moz-transform:    rotate(45deg);\r\n  -ms-transform:     rotate(45deg);\r\n  -o-transform:      rotate(45deg);\r\n  position: relative;\r\n  padding: 7px 0;\r\n  left: -5px;\r\n  top: 15px;\r\n  width: 120px;\r\n  background-color: #BFDC7A;\r\n  background-image: -webkit-gradient(linear, left top, left bottom, from(#BFDC7A), to(#8EBF45)); \r\n  background-image: -webkit-linear-gradient(top, #BFDC7A, #8EBF45); \r\n  background-image:    -moz-linear-gradient(top, #BFDC7A, #8EBF45); \r\n  background-image:     -ms-linear-gradient(top, #BFDC7A, #8EBF45); \r\n  background-image:      -o-linear-gradient(top, #BFDC7A, #8EBF45); \r\n  color: #6a6340;\r\n  -webkit-box-shadow: 0px 0px 3px rgba(0,0,0,0.3);\r\n  -moz-box-shadow:    0px 0px 3px rgba(0,0,0,0.3);\r\n  box-shadow:         0px 0px 3px rgba(0,0,0,0.3);\r\n}\r\n.ribbon-green:before, .ribbon-green:after {\r\n  content: "";\r\n  border-top:   3px solid #6e8900;   \r\n  border-left:  3px solid transparent;\r\n  border-right: 3px solid transparent;\r\n  position:absolute;\r\n  bottom: -3px;\r\n}\r\n.ribbon-green:before {\r\n  left: 0;\r\n}\r\n.ribbon-green:after {\r\n  right: 0;\r\n}\r\n\r\n/*Menú superior*/\r\nul#cart{width: 300px;}\r\nul#user{width: 100px;}\r\nul#cart li a {\r\n  padding:1px;\r\n  display:inline-block;\r\n  width:100%;\r\n}\r\nul#cart li a > *{\r\n  position:relative;\r\n  float:left;\r\n}\r\nul#cart li a > button{\r\n  float:right;\r\n}\r\n.color-white{\r\n  color:white;\r\n}\r\n```\r\n\r\nY para dejar preparada la siguiente entrada, modificamos el archivo views/product.html con el siguiente código:\r\n\r\n```\r\n<div class="row marketing">\r\n  <div>\r\n    <div class="product left">\r\n      <div class="ribbon-wrapper-green"><div class="ribbon-green">new</div></div>\r\n      <img src="../images/blouse.jpg"/>\r\n      \r\n      <h2>Product name</h2>\r\n      <span class="quick-view">Quick view</span>\r\n      <div class="caja">\r\n        <h3 class="left">20 € </h3>\r\n        <button class="btn btn-success">Add to cart</button>\r\n      </div>\r\n      <div class="star-six"></div>\r\n      \r\n      <p class="block">Product description</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n```\r\n\r\nEn la siguiente entrada empezaremos con lo más chulo. Será trabajar con directivas de AngularJS sobre el archivo views/product.html'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Demo AngularJS shop - 04 Directivas\'\r\ndate: Tue, 19 Aug 2014 21:04:19 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript\r\n---\r\n\r\nEn esta ocasión para el proyecto demo sobre **AngularJS** trabajaré sobre el catálogo de productos. Los productos tendrán características como nombre, precio, descripción, en venta, stock e imágenes. Para empezar, abrimos el archivo _scripts/controllers/product.js_ y antes de la declaración del controlador añadimos el array de productos:\r\n\r\n```\r\n\'use strict\';\r\n  var data = [\r\n    {\r\n      name: \'Blouse\',\r\n      price: 2.95,\r\n      description: \'Short description about this producto. A beautiful yellow blouse. Lorem lorem lorem lorem lorem\',\r\n      onsale: true,\r\n      newproduct: true,\r\n      quantity: 1,\r\n      images: [\r\n        {\r\n          full: \'/images/blouse.jpg\',\r\n          thumb: \'/images/blouse-thumb.jpg\'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \'Chiffon\',\r\n      price: 3.06,\r\n      description: \'Descripción del producto\',\r\n      onsale: false,\r\n      newproduct: true,\r\n      quantity: 1,\r\n      images: [\r\n        {\r\n          full: \'/images/chiffon.jpg\',\r\n          thumb: \'/images/chiffon-thumb.jpg\'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \'Short T-Shirts\',\r\n      price: 6.20,\r\n      description: \'Descripción \',\r\n      onsale: true,\r\n      newproduct:false,\r\n      quantity: 5,\r\n      images: [\r\n        {\r\n          full: \'/images/dress.jpg\',\r\n          thumb: \'/images/dress-thumb.jpg\'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \'Faded Shirts\',\r\n      price: 20.60,\r\n      description: \'Descripción \',\r\n      onsale: true,\r\n      newproduct:false,\r\n      quantity: 1,\r\n      images: [\r\n        {\r\n          full: \'/images/faded.jpg\',\r\n          thumb: \'/images/faded-thumb.jpg\'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \'Marine Shorts\',\r\n      price: 20.6,\r\n      description: \'Descripción \',\r\n      onsale: false,\r\n      newproduct:true,\r\n      quantity: 1,\r\n      images: [\r\n        {\r\n          full: \'/images/marine.jpg\',\r\n          thumb: \'/images/marine-thumb.jpg\'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \'Sport Skirt\',\r\n      price: 20.6,\r\n      description: \'Descripción \',\r\n      onsale: false,\r\n      newproduct:false,\r\n      quantity: 0,\r\n      images: [\r\n        {\r\n          full: \'/images/sport.jpg\',\r\n          thumb: \'/images/sport-thumb.jpg\'\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: \'Summer Yellow\',\r\n      price: 20.6,\r\n      description: \'Descripción \',\r\n      onsale: false,\r\n      newproduct:false,\r\n      quantity: 0,\r\n      images: [\r\n        {\r\n          full: \'/images/summer.jpg\',\r\n          thumb: \'/images/summer-thumb.jpg\'\r\n        },\r\n      ],\r\n    }\r\n  ];\r\n```\r\n\r\nSobre el mismo archivo limpiamos el código generado por **Yeoman** quedándonos sólo con la declaración del controlador y con la carga de los datos de los productos en el **$scope**:\r\n\r\n```\r\nangular.module(\'ngdemoApp\')\r\n  .controller(\'ProductCtrl\', function ($scope) {\r\n\r\n    $scope.products = data;\r\n\r\n  });\r\n```\r\n\r\nCuando llamemos en la vista de producto mediante el controlador llamado "_ProductCtrl_" Para poder usar la información de los productos sólo tendremos que llamar al controlador y seleccionar el atributo de el/los producto/s que nos interesen. Dentro del controlador he creado una función para comprobar si un producto concreto dispone o no de Stock. Se comprueba si el atributo "_quantity_" es igual a "_0_", si es así, la función devuelve "_false_", caso contrario devolverá "_true_". La función dentro del controlador queda así:\r\n\r\n```\r\nangular.module(\'ngdemoApp\')\r\n  .controller(\'ProductCtrl\', function ($scope) {\r\n\r\n    $scope.products = data;\r\n\r\n    $scope.inStock = function(cantidad){\r\n      if (cantidad === 0) {\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n    };\r\n\r\n  });\r\n```\r\n\r\nUna vez todo esto, pasamos al archivo _views/product.html_ y añadimos directivas. Copio el código y luego comento.\r\n\r\n```\r\n<div class="row marketing" ng-controller="ProductCtrl">\r\n  <div ng-repeat="product in products">\r\n    <div ng-show="inStock(product.quantity)" class="product left">\r\n      <div ng-show="product.newproduct" class="ribbon-wrapper-green"><div class="ribbon-green">new</div></div>\r\n      <img ng-src="{{product.images[0].full}}"/>\r\n      \r\n      <h2>{{product.name}} </h2>\r\n      <span class="quick-view">Quick view</span>\r\n      <div class="caja">\r\n        <h3 class="left" ng-class="{\'color-white\': product.onsale}">{{product.price}} € </h3>\r\n        \x3c!-- No sería necesario en el button: ng-show="product.quantity", ya que el producto que no tenga stock no se muestra --\x3e\r\n        <button class="btn btn-success" ng-show="product.quantity">Add to cart</button>\r\n      </div>\r\n      <div ng-show="product.onsale" class="star-six"></div>\r\n      \r\n      <p class="block">{{product.description}}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n```\r\n\r\nEn la primera línea con la directiva _ng-controller="ProductCtrl"_ decimos que dentro de ese "_div_" usaremos dicho controlador. En la segunda creamos el bucle que iterará sobre cada uno de los productos mediante _ng-repeat="product in products"_ (en el vídeo comento otra manera de hacer la declaración de esta directiva, que también afecta un poco el código del controlador). Ha cada producto le hemos dado el alias (por así llamarlo) de "_product_", y así será como tendremos que seleccionar un producto Ahora ya nos encontramos sobre un producto concreto. Para referenciar un atributo de un producto basta con "_product.atributoTal_". En la tercera línea se emplea la directiva _ng-show_. Si el resultado de la expresión (la función definida en el controlador) es "_True_" el contenido dentro de ese "_div_" no será mostrado, es decir, el producto que no tenga stock no se muestra. La línea cuatro usa _ng-show="product.newproduct"_, en este caso no es función, es sólo rescatar un atributo, que en el caso del catálogo es booleano. Si es "True" se mostrará el ribbon verde que indicará que el producto es nuevo, en caso contrario no se muestra. En la línea cinco se inserta la imagen del producto. Cada producto contiene dos imágenes, una grande y otra pequeña, y la usada es la grande, designada por con atributo "_full_". Para realizar su llamada se emplea la directiva _ng-src="{{product.images[0].full}}"_. Esta directiva es diferente a las anterior, se usan doble llaves y devolverá una cadena con la ruta de la imagen. En la línea seis se usa una expresión _{{product.name}}_ para obtener el atributo "_name_" del producto. En la línea diez se usa la directiva ng-class tiene diferentes maneras de usarse, en este caso: _ng-class="{\'color-white\': product.onsale}"_ hay dos trozos, la primera parte con comillas simples es una clase que será usada y la expresión que sigue a los dos puntos se evalúa como "_True_", de lo contrario, la clase no es añadida. En esta misma se obtiene el precio del producto mediante la expresión: _{{product.price}}_. La línea catorce con la directiva _ng-show="product.onsale"_ y la clase "_star-six_" mostrará el precio bajo una estrella si el producto está en "rebajas". Finalmente, la descripción del producto se mostrará con la expresión: _{{product.description}}_. Comentar que el atributo "_description_" contiene el atributo sin limitar su extensión, ya que mediante css se muestran sólo las dos primeras líneas. Para conseguirlo, es emplea este código:\r\n\r\n```\r\n.product p{\r\n  padding: 1.5em;\r\n  letter-spacing: 0.09em;\r\n  text-overflow: ellipsis;\r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  max-height: 4.5em;\r\n  min-height: 4.5em;\r\n  line-height: 1.5em;\r\n  white-space: wrap;  \r\n}\r\n```\r\n\r\nEn el vídeo he comentado otro [recurso interesante](http://codepen.io/martinwolf/pen/qlFdp "Abre en ventana nueva recurso CodePen"). Con nuevas propiedades CSS se puede limitar o visualizar el número de líneas dentro de un elemento. Espero seguir creando nuevas entradas sobre este proyecto AngularJS, aunque de momento tendré que dejarlo un poco parado para dedicar más tiempo a otras cosas. Aquí dejo el vídeo.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Dos campos Select relacionados en AngularJS\'\r\ndate: Mon, 10 Oct 2016 09:58:28 +0000\r\npublished: true\r\ntags: AngularJS,JavaScript,Pildoritas\r\n---\r\n\r\nHe construido sistema de filtros con etiquetas &lt;select&gt;. Uno de ellos será el filtro inferior y el otro el filtro superior. Ambos estarán relacionados entre sí para que no se pisen los valores, y así el valor tomado por el filtro inferior sea uno de los límites del filtro superior, y viceversa. Para darle valores a los &lt;select&gt; he construido un filtro que recibe tres parámetros. Los dos primeros parámetros, "min" y "max", son los límites inferiores y superiores. El tercer parámetro, "step", será la separación entre cada uno de los valores, que caso de no especificarse este valor tomará el valor 30000.\r\n\r\n```\r\n(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'app\')\r\n    .filter(\'filterRange\', function () {\r\n      return function (input, min, max, step) {\r\n        step = parseInt(step) || 30000;\r\n        min = parseInt(min);\r\n        max = parseInt(max);\r\n        for (var i = min; i < max; i += step)\r\n          input.push(i);\r\n        return input;\r\n      };\r\n    });\r\n\r\n})();\r\n```\r\n\r\nLa forma de usarla es sencilla. Se usará la directiva "ng-options" de AngularJS que genera los diferentes valores seleccionables. Le pasamos un array vacío y le aplicamos el filtro. (Ojo, el uso de la directiva ng-options requiere también la definición de ng-model. En este trozo de código no lo puse)\r\n\r\n```\r\n<select ng-options="n for n in [] | filterRange:0:120000:30000"></select>\r\n```\r\n\r\nEn el controlador definimos una variable para usarlo en la vista como modelo. Con valores mínimos y máximos definidos con valor para que se carguen los valores por defecto.\r\n\r\n```\r\n(function() {\r\n  \'use strict\';\r\n\r\n  angular\r\n    .module(\'app\', [])\r\n    .controller(\'ListHouseCtrl\', ListHouseCtrl);\r\n\r\n    ListHouseCtrl.$inject = [];\r\n    function ListHouseCtrl() {\r\n\r\n      var vm = this;\r\n\r\n      vm.selectPrice = {\r\n        min: 30000,\r\n        max: 120000\r\n      }\r\n\r\n      vm.log = function() {\r\n        console.log(vm.selectPrice);\r\n      }\r\n\r\n    }\r\n\r\n})();\r\n```\r\n\r\nA ambos &lt;select&gt; le asignamos su modelo para obtener el valor seleccionado, que en su primera carga será el valor por defecto.\r\n\r\n```\r\n<select ng-model="vm.selectPrice.min" ng-options="n for n in [] | filterRange:0:120000:30000"></select>\r\n<select ng-model="vm.selectPrice.max" ng-options="n for n in [] | filterRange:150000:250000:30000"></select>\r\n```\r\n\r\nAhora mismo se rellenan ambos &lt;select&gt;, el primero termina en 120000 y el segundo empieza en 150000. Pero podemos aprovechar los valores que hemos guardado en _ng-model="vm.selectPrice.min"_ y en _ng-model="vm.selectPrice.max"_ para los límites de los filtros.\r\n\r\n```\r\n<select ng-model="vm.selectPrice.min" ng-options="n for n in [] | filterRange:0:vm.selectPrice.max:30000"></select>\r\n<select ng-model="vm.selectPrice.max" ng-options="n for n in [] | filterRange:vm.selectPrice.min+30000:250000:30000"></select>\r\n```\r\n\r\nEl código se encuentra en mi [repositorio de GitHub.](https://github.com/ivanalbizu/select_angular) El vídeo:'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Ecuación de segundo grado en Java\'\r\ndate: Mon, 07 Apr 2014 07:11:45 +0000\r\npublished: true\r\ntags: Java,Pildoritas\r\n---\r\n\r\nEn la clase **CEcuacion2Grado.java** se realizan las operaciones necesarias para resolver una ecuación de segundo y lanzar las excepciones principales. La clase contiene dos métodos que serán los que devuelvan los resultados: **public double calcularUnSigno(double a, double b, double c) {...}** y **public double calcularOtroSigno(double a, double b, double c) {...}**. El primer método devuelve un resultado tras realizar la operación a este fragmento de la ecuación: -b-... y el segundo método tras realizar: -b+... Ambos métodos reciben tres parámetros dobles introducidos por el usuario y ambas lanzan una excepción que es definida en este programa. También se crean dos métodos más para lanzar la excepción que pudieran surgir en el programa. El método **public double calcularDiscriminante(double a, double b, double c) {...}** sirve para saber si el discriminante (operación realizada dentro de la raíz cuadrada) es negativo, y el método **public double comprobarDivisible(double a) {...}** se usa para saber si en la resolución de la ecuación a introducido un valor igual a 0 como divisor.\r\n\r\n```\r\npackage ejerc05;\r\n\r\npublic class CEcuacion2Grado {\r\n\r\n\tpublic double calcularDiscriminante(double a, double b, double c) throws ExcepcionNegativo {\r\n\t\treturn Math.pow(b, 2)-4*a*c;\r\n\t}\r\n\tpublic double comprobarDivisible(double a) throws ExcepcionNegativo {\r\n\t\treturn a;\r\n\t}\r\n\tpublic double calcularUnSigno(double a, double b, double c) throws ExcepcionNegativo{\r\n\t\treturn (-b+Math.sqrt(calcularDiscriminante(a, b, c)))/(2*a);\r\n\t}\r\n\tpublic double calcularOtroSigno(double a, double b, double c) throws ExcepcionNegativo{\r\n\t\treturn (-b-Math.sqrt(calcularDiscriminante(a, b, c)))/(2*a);\r\n\t}\r\n\r\n}\r\n```\r\n\r\nLa excepción llamada **ExcepcionNegativo.java** extiende de Exception y se construye sin parámetros y llamando a su clase padre (Exception) mediante super();, y con un parámetros para dar la posibilidad de añadir un mensaje al invocar la excepción.\r\n\r\n```\r\npackage ejerc05;\r\n\r\npublic class ExcepcionNegativo extends Exception {\r\n\r\n\tprivate static final long serialVersionUID = 1L;\r\n\r\n\tpublic ExcepcionNegativo(){\r\n\t\tsuper();\r\n\t}\r\n\tpublic ExcepcionNegativo(String msg){\r\n\t\tsuper(msg);\r\n\t}\r\n}\r\n```\r\n\r\nPara este programa se ha creado una clase **Menu.java** para realizar la lectura por teclado. En este caso se crean dos métodos, uno devuelve un "entero" y el otro un "doble" (siendo puntillosos, se podría haber casteado la salida de ambos métodos ya que en el código interior se realizan operaciones como: opcion=Integer.parseInt(sc.nextLine());). El entero se usa como opción elegida por elusuario, y el doble para que el usuario introduzca los datos con que operar. Ambos métodos capturan y tratan las excepciones.\r\n\r\n```\r\npackage ejerc05;\r\n\r\nimport java.util.Scanner;\r\n\r\npublic class Menu {\r\n\r\n\tstatic Scanner sc = new Scanner(System.in);\r\n\r\n\tpublic static int opcion(){\r\n\t\tint opcion=0;\r\n\t\tboolean error=true;\r\n\t\twhile(error){\r\n\t\t\ttry {\r\n\t\t\t\topcion=Integer.parseInt(sc.nextLine());\r\n\t\t\t\terror=false;\t\t\t\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tSystem.err.println("Error. Número no válido: "+ e.getMessage());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn opcion;\r\n\t}\r\n\r\n\tpublic static double pedirNumero(){\r\n\t\tdouble opcion=0.;\r\n\t\tboolean error=true;\r\n\t\twhile(error){\r\n\t\t\ttry {\r\n\t\t\t\topcion=Double.parseDouble(sc.nextLine());\r\n\t\t\t\terror=false;\t\t\t\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\tSystem.err.println("Error. Número no válido: "+ e.getMessage());\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn opcion;\r\n\t}\r\n}\r\n```\r\n\r\nLa clase Test.java ejecuta el programa. En ella se declaran las variables necesarias. Se realizan las llamadas a las clases Menu.java para solocitar al usuario si desea repetir el programa y para solicitar los números necesarios para resolver la ecuación de 2º. Si los datos introducidos por el usuario no tiene solución posible (se capturan y tratan las excepciones) se le solicita que introduzca nuevamente los datos.\r\n\r\n```\r\npackage ejerc05;\r\n\r\npublic class Test {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tSystem.out.println("Bienvenido al programa de cálculo de ecuación de 2º GRADO"\r\n\t\t\t\t+ "El programa realiza el cálculo de una ecuación de segundo grado para el que el usuario deben"\r\n\t\t\t\t+ "introducir los datos necesarios.");\r\n\r\n\t\tint ejecutar = 0;\r\n\t\tboolean repetir=true, error=true;\r\n\t\tdouble a=0., b=0., c=0.;\r\n\t\tdouble resultado1=0., resultado2=0.;\r\n\t\tCEcuacion2Grado ecuacion = new CEcuacion2Grado();\r\n\r\n\t\tdo{\r\n\t\t\tdo{\r\n\t\t\t\tSystem.out.println("Introduzca valor para \'a\'"); a=Menu.pedirNumero();\r\n\t\t\t\tSystem.out.println("Introduzca valor para \'b\'"); b=Menu.pedirNumero();\r\n\t\t\t\tSystem.out.println("Introduzca valor para \'c\'"); c=Menu.pedirNumero();\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (ecuacion.calcularDiscriminante(a, b, c) <=0 || ecuacion.comprobarDivisible(a) == 0) {\r\n\t\t\t\t\t\tthrow new ExcepcionNegativo("Operación no válida. La ecuación no tiene soluciones reales o no es cuadrática");\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresultado1=ecuacion.calcularUnSigno(a, b, c);\r\n\t\t\t\t\t\tresultado2=ecuacion.calcularOtroSigno(a, b, c);\t\t\r\n\t\t\t\t\t\terror=false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (ExcepcionNegativo en) {\r\n\t\t\t\t\ten.printStackTrace();\r\n\t\t\t\t\tSystem.out.println("Introduzca otros números");\r\n\t\t\t\t}\r\n\r\n\t\t\t}while(error);\r\n\r\n\t\tSystem.out.printf("Los resultados de la operación son: %.2f %.2f ", resultado1, resultado2);\r\n\r\n\t\tif (ejecutar!=1) repetir = false;\t\r\n\t\t}while(repetir);\r\n\r\n\t\tSystem.out.println("-----  Gracias por usar la aplicación  -----");\r\n\t}\r\n\r\n}\r\n```\r\n\r\nPuedes descargar el código para probarlo en el siguiente enlace: [Descargar el programa de colecciones de la API de Java](https://dl.dropboxusercontent.com/u/12043780/ivanalbizu.eu/ejerc05.zip "Descargar ejemplo programa Excepciones Ecuación de 2 grado") Nota final. Este ejercicio se ha desarrollado con fines didácticos, para adquirir destreza en el manejo de excepciones de Java, por lo que fuera de este uso -aprendizaje- no tiene mucho sentido.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Ejemplo de colecciones en Java\'\r\ndate: Sun, 23 Mar 2014 19:16:26 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nEn este artículo quiero poner un ejemplo del **uso de colecciones en Java**. El ejemplo es sencillo. Se trata de modelar una empresa en la que se guardan datos de sus trabajadores. Sus datos personales, el departamento en el que trabajan, su puesto de trabajo y su salario. Las opciones habilitadas al programa son:\r\n\r\n*   0.- SALIR\r\n*   1.- Cargar trabajadores\r\n*   2.- Añadir nuevo trabajador\r\n*   3.- Mostrar trabajadores\r\n*   4.- Borrar trabajador\r\n*   5.- Editar trabajador\r\n*   6.- Ordenar trabajadores por nombre\r\n*   7.- Ordenar trabajadores por apellidos\r\n*   8.- Ordenar trabajadores por departamento\r\n\r\nExplicaré las partes del código que son más relevantes, y al final del post pondré  un enlace para descargar y así probarlo. El proyecto contiene varios paquetes. Gestión, persona, test, trabajador y utilidades. En Gestión se definen los principales métodos del programa. En Persona se definen los atributos generales de cualquier persona. En Test se ejecuta el programa.  En Trabajador se especifican los atributos propios de los trabajadores. En Utilidades se crean las clases para poder leer por teclado, se generan algunos mensajes estándar del programa y se crean clases para realizar ordenaciones de los trabajadores por diferentes criterios. La clase **persona.java** está dentro del paquete persona y define los atributos nombre, apellidos y dni. Se define el método "_toString_" y "_compareTo_", para esto último, clase persona debe implmentar la interfaz "_comparable<Persona>_".  La ordenación definida con "_compareTo_" es ordenar primero por apellidos, si estos fueran iguales se ordena por nombre, y si aún así se repiten nombre y apellidos se ordena por dni.\r\n\r\n```\r\npublic int compareTo(Persona pers) {\r\n//Ordered by default: 1º Surname, 2º Name, 3º Profession \r\n\r\n\tif(this.apellidos.compareToIgnoreCase(pers.getApellidos()) == 0){            \r\n\t\tif(this.nombre.compareToIgnoreCase(pers.getNombre()) == 0){\r\n\t\t\tif (this.dni.compareToIgnoreCase(pers.getDni()) == 0){\r\n\t\t\t\treturn this.dni.compareToIgnoreCase(pers.getDni());\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn this.nombre.compareToIgnoreCase(pers.getNombre());\r\n\t\t}\r\n\t}\r\n\treturn this.apellidos.compareToIgnoreCase(pers.getApellidos());\r\n\r\n}\r\n```\r\n\r\nLa clase **Trabajador.java** extiende de la clase Persona.java y está dentro del paquete persona. Se definen sus atributos departamento, puesto de trabajo y el salario. La clase **Gestion.java** está dentro del paquete gestion. La clase Gestion.java realiza las principales operaciones del programa. Para poder trabajar con esta clase se declara el atributo como "trabajadores" de tipo _List<Trabajador>_ y su constructor de tipo _ArrayList<Trabajador>_. Se declara el método **public List<Trabajador> findAll()** para devolver toda la colección. El método **public void mostrarTodo()** como su nombre indica es usado para imprimir toda la colección de trabajadores mediante un _for each_. Un método importante e interesante dentro de Gestion.java es _public Trabajador findByName(String busqueda)_, ya que será un método usado para editar y para borrar un usuario (usando su nombre para devolver un objeto). El método **public Trabajador findByName(String busqueda)** recibe como parámetro un String que será la búsqueda que hará el usuario. Mediante un _while_ se recorre la colección de los trabajadores desde el principio (_int i = 0_ y _i < trabajadores.size()_) hasta que se llegue al final, o hasta que se encuentre la primera ocurrencia elegida por el usuario. Para esto último se usa el condicional _if (trabajadores.get(i).getNombre().equalsIgnoreCase(busqueda))_ en el que caso que se encuentre se devuelve _encontrado = true_ para poder salir del condicional _while (i < trabajadores.size() && **!encontrado**)_ donde se encontraba la ejecución del programa. Luego, mediante condicional _if(encontrado){} else {}_ se devueve el el objeto encontrado o _null_ para no encontrado.\r\n\r\n```\r\npublic Trabajador findByName(String busqueda){\r\n\tint i = 0;\r\n\tboolean encontrado = false;\r\n\r\n\twhile (i < trabajadores.size() && !encontrado){\r\n\t// Se recorre la coleción mientras existen (y no se encuentre coincidencia) elementos: i < trabajadores.size()\r\n\t\tif (trabajadores.get(i).getNombre().equalsIgnoreCase(busqueda))\r\n\t\t//Se ha encontrado elemento, se sale del bucle while\r\n\t\t\tencontrado = true;\r\n\t\telse\r\n\t\t\t//Se recorre el siguiente item\r\n\t\t\ti++;\r\n\t\t}\r\n\tif (encontrado)\r\n\t\t//Se devuelve el elemento encontrado\r\n\t\treturn trabajadores.get(i);\r\n\telse\r\n\t\treturn null;\t\r\n}\r\n```\r\n\r\nOtro método interesante, y que usa el método anterior es **public void borrarTrabajador()**. Para poder borrar a un trabajador necesitamos saber que trabajador desea borrar el usuario, a partir de un nombre elegido por él, para ello ese usa:_ Trabajador trab = null_ y _trab = findByName(Leer.dato())_ y con un condicional simple _if (trab != null)_ sabemos si el objeto ha sido encontrado y se procede a eliminar mediante _trabajadores.remove(trab)_.\r\n\r\n```\r\npublic void borrarTrabajador(){\r\n\tTrabajador trab = null;\r\n\tSystem.out.println("Nombre de la persona que desea borrar");\r\n\t//Se llama a método "findByName"\r\n\ttrab = findByName(Leer.dato());\r\n\tif (trab != null){\r\n\t\t//Se si ha encontrado coincidencia, se elimina de la colección el objeto trabajador\r\n\t\ttrabajadores.remove(trab);\r\n\t\tMensaje.exito();\r\n\t} else {\r\n\t\tMensaje.error();\r\n\t}\r\n}\r\n```\r\n\r\nEl método  **public void editName()** es muy parecido al anterior. La diferencia se trata en el método usado, en este caso se usa el método definido en la clase Persona.java **trab.setNombre(...)**, mientras que antes se uso un método propio del API ArrayList.\r\n\r\n```\r\npublic void editName(){\r\n\tTrabajador trab = null;\r\n\tSystem.out.println("Nombre de la persona que desea editar");\r\n\t//Se llama a método "findByName"\r\n\ttrab = findByName(Leer.dato());\r\n\tif (trab != null) {\r\n\t\t//Si se ha encontrado coincidencia, se edita el nombre de la colección el objeto trabajador\r\n\t\tSystem.out.println("Introduzca nuevo nombre");\r\n\t\t//Se establece nuevo nombre\r\n\t\ttrab.setNombre(Leer.dato());\r\n\t\tMensaje.exito();\r\n\t} else {\r\n\t\tMensaje.error();\r\n\t}\r\n}\r\n```\r\n\r\nEl último método que voy a explicar de esta clase es **public List<Trabajador> orderByDepart()**, este método necesita que se pase el array que se va a ordenar, en este caso el array de trabajadores. Por ser ArrayList se puede usar la interfaz **Collections** y su método **sort**, al que se le pasan como parámetros el array y la clase **OrderBySurname()** definido con los criterios necesarios para realizar la operación.\r\n\r\n```\r\npublic List<Trabajador> orderBySurname(){\r\n\tCollections.sort(trabajadores, new OrderBySurname());\r\n\treturn trabajadores;\r\n}\r\n```\r\n\r\nDentro del paquete de utilidades hay varias clases, una de ellas llamada **OrderBySurname.java**. La declario de la clase es **public class OrderBySurname implements Comparator<Trabajador>**, tiene un único método, y es usado para ordenar la colección por apellidos. El método "compare" recibe dos parámetros, dos objeto trabajadores, y devuelve un entero. Más información en la [API de Java](http://docs.oracle.com/javase/7/docs/api/java/util/Comparator.html "API JAVA COMPARATOR")\r\n\r\n```\r\npublic class OrderBySurname implements Comparator<Trabajador>{\r\n\t@Override\r\n\tpublic int compare(Trabajador trab1, Trabajador trab2) {\r\n\t\treturn trab1.getApellidos().compareToIgnoreCase(trab2.getApellidos());\r\n\t}\r\n}\r\n```\r\n\r\nLa clase principal que contiene la ejecución del programa se llama **Test.java** y está dentro del paquete test. Dentro de esta clase se crea un objeto tipo Gestion que será con el que se gestiona el programa. Dicha clase contiene un bucle _do while_ para que el usuario ejecute el programa con sus diferentes opciones. Dichas opciones son llamadas a petición del usuario con estructura _switch_. Las opciones que podrá hacer el usuario son las enumeradas al principio de este post. Por ejemplo, para el caso de cargar datos existentes se usa el caso 1. Sólo se puede cargar una vez, para no duplicar datos. Para ello, la variable booleana _flag_ al comienzo del programa (antes del _do while_) está iniciada a _true_, una vez se cargan los datos su valor se cambia a _false_.\r\n\r\n```\r\ncase 1://add existent workers\r\n\t//Carga sólo una vez los trabajadores predefinidos\r\n\tif(flag){\r\n\t\tgestion.cargarTrabajadores();\r\n\t\tflag = false;\r\n\t} else {\r\n\t\tMensaje.mostrar("Ya se han cargado los contactos");\r\n\t}\r\n\tbreak;\r\n```\r\n\r\nEl programa contiene más clases, pero algunas son obvias y otras son similares a las que he comentado. No son difíciles de entender. Puedes descargar el código para probarlo en el siguiente enlace: [Descargar el programa de colecciones de la API de Java](https://drive.google.com/open?id=0BzQS5pOyF_HjcGNfRUswVE53a00 "Descargar ejemplo programa colecciones API Java") Nota final. Este ejercicio se ha desarrollado con fines didácticos, para adquirir destreza en el manejo de la API de Java, colecciones y métodos, por lo que fuera de este uso -aprendizaje- no tiene mucho sentido.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Ejemplo de programa Java para tienda\'\r\ndate: Sun, 14 Sep 2014 14:15:54 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nEjemplo de programa Java para tienda de venta de juegos, música y películas. Al final del post añado vínculo para descargar el programa y probarlo y un vídeo explicando el código. El programa está compuesto de seis clases: Test.java, Gestion.java, Producto.java, Cine.java, Musica.java y Videojuego.java. La clase producto define propiedades comunes de los tipos Cine, Música y Videjuego, y cada una de estas define sus propios atributos. La clase Gestión, como su nombre indica, gestiona la tienda y la clase Test ejecuta el programa. Como se ha comentado, la clase principal que ejecuta el programa es la **Test**. El código es el siguiente:\r\n\r\n```\r\npackage ejerc03;\r\nimport leer.*;\r\npublic class Test {\r\n\r\n  public static void main(String[] args) {\r\n    /*\r\n     * Sólo se debe añadir métodos para establecer los valores de los atributos, poder imprimirlos datos en pantalla y calcular cantidad a pagar según el precio de venta. De momento, no hace falta gestionar el almacén con los artículos que quedan, sólo se pedirá la cantidad de artículos que lleva el cliente y se dará el precio a pagar según esa cantidad. \r\n     */\r\n    \r\n    System.out.println("Bienvenido a la tienda de JUEGOS, MÚSICA Y PELÍCULASn--------n"+\r\n              "El programa simula una tienda que vende juegos, música y películasn"+\r\n              "Los artículos sólo se pueden vender si están disponibles en la tiendan"+\r\n              "El usuario puede:n"+\r\n              "t Comprar productos de los existentes.n"+\r\n              "t Añadir nuevos productos a la cesta.n"+\r\n              "t Consultar el importe de la cuenta.");\r\n    \r\n    boolean continuar = true;\r\n    int lecturaProducto, lecturaCantidad; //Variables para seleccionar el producto y la cantidad que se quiere comprar\r\n    \r\n    //Se instancian y cargan los productos\r\n    Producto disco1 = new Musica("Portishead", 18.53, 6, true, "Trip Hop");\r\n    Producto disco2 = new Musica("Radiohead", 21.2, 20, true, "Rock");\r\n    Producto cine1  = new Cine("Hierro 3", 30.2, 5, true, "Kim Ki Duk");\r\n    Producto juego1 = new Videojuego("Mario Bross", 35.11, 0, false, "Plataformas");\r\n    \r\n    //Se crea el array "catálogo" para contener los productos. Su dimensión viene del número de veces que se\r\n    //instancia el contructor de Producto\r\n    Producto catalogo[] = new Producto[Producto.dimesionArray];\r\n    //Se crea el objeto gestion para trabajar (mostrar y vender productos, y mostrar caja)\r\n    Gestion gestion = new Gestion();\r\n\r\n    //Se rellena el array catálogo\r\n    catalogo[0] = disco1;\r\n    catalogo[1] = disco2;\r\n    catalogo[2] = cine1;\r\n    catalogo[3] = juego1;\r\n    \r\n    do {\r\n      System.out.println("nnIntroduzca la opción que desea realizar:n"\r\n                +"1. Mostrar productosn"\r\n                +"2. Vender productosn"\r\n                +"3. Mostrar cajan"\r\n                +"SALIR --\x3e Pulse cualquier otro númeron"\r\n                );\r\n      switch (Leer.datoInt()) {\r\n        case 1:\r\n          gestion.mostrarProductos(catalogo);\r\n          break;\r\n        case 2:\r\n          System.out.println("¿Que producto desea comprar?");\r\n          gestion.mostrarNombreProductos(catalogo);\r\n          lecturaProducto=Leer.datoInt();\r\n          System.out.println("¿Cuánta cantidad desea comprar?");\r\n          lecturaCantidad=Leer.datoInt();\r\n          //Se carga el producto y la cantidad solicitada por el usuario\r\n          gestion.comprarProducto(catalogo, lecturaProducto, lecturaCantidad);\r\n          break;\r\n        case 3:\r\n          System.out.println(gestion.mostrarCaja() +" €");\r\n          break;\r\n        default:\r\n          //Se sale del programa\r\n          continuar=false;\r\n      }\r\n      \r\n    } while(continuar);\r\n    \r\n    System.out.println("---- Gracias por usar la aplicación. ----");\r\n\r\n  }\r\n}\r\n```\r\n\r\nExplicando un poco el código de Test. Se declaran tres variables. Una variable booleana "_Continuar_" para repetir  el proceso de compra, dos variables enteras "_lecturaProducto_" y "_lecturaCantidad_" para que el usuario elija el producto que desea y su cantidad. Se declaran y cargan cinco arrays para contener productos de tipos "_Música_", "_Cine_" y "_Juegos_" que serán guardados en el array "_Catálogo_". Se declara el objeto "_Gestion_" para realizar los procesos del programa. Al ejecutarse el programa el usuario ve un pequeño menú con las opciones: Mostrar productos, vender, mostrar caja y salir. La opción elegida por el usuario determinará que trozo de código debe ejecutarse mediante un Switch. Si la opción elegida es mostrar productos se le aplica el método **mostrarProductos(Catalogo)** al objeto "_Gestion_". Si la opción es vender producto se muestra los nombres de los productos mediante **gestion.mostrarNombreProductos(catalogo)** y luego se solicita la cantidad de dicho producto, y se ejecuta la venta con el método: **gestion.comprarProducto(catalogo, lecturaProducto, lecturaCantidad)** en el que se pasan como parámetros el catálogo, el producto y la cantidad. Si la opción es "mostrar caja" se ejecuta el método **gestion.mostrarCaja()** que devuelve el importe de las ventas. La última opción de salida se lleva a cabo si el usuario introduce un número diferente al 1, 2 ó 3. La clase que lleva la lógica del programa es la **Gestion**, su código es el siguiente:\r\n\r\n```\r\npackage ejerc03;\r\n\r\npublic class Gestion {\r\n  \r\n  //Attributes\r\n  private Producto productos[] = null;\r\n  private double caja;\r\n  \r\n  //Constructors\r\n  public Gestion() { }\r\n  public Gestion(Producto[] productos) {\r\n    this.productos = productos;\r\n  }\r\n  \r\n  //Methods\r\n  public Producto[] cargarProductos() {\r\n\r\n    return productos;\r\n  }\r\n  \r\n  public void mostrarProductos(Producto[] productos) { \r\n      for (int i = 0; i < productos.length; i++) {\r\n        System.out.print(productos[i]+"n-------n");\r\n      }\r\n  }\r\n  public void mostrarNombreProductos(Producto[] productos) { \r\n      for (int i = 0; i < productos.length; i++) {\r\n        System.out.println(i+1 +" "+productos[i].getNombre()+"n");\r\n      }\r\n      System.out.println("n------------n");\r\n  }   \r\n  public double comprarProducto(Producto[] productos, int num, int cantidadUnidades) {\r\n    if (productos[num-1].isDisponible()) {\r\n      if (productos[num-1].getCantStock() >= cantidadUnidades){\r\n        System.out.println("La compra se ha realizado con éxito!!n");\r\n        productos[num -1].setCantStock(productos[num -1].getCantStock()-cantidadUnidades);\r\n        return caja+=cantidadUnidades*productos[num-1].getPrecioUnit();\r\n      } else {System.out.println("No hay cantidad suficiente de producto");}\r\n    } else {System.out.println("No hay cantidad suficiente de producto");}\r\n    return caja;\r\n  }\r\n  public double mostrarCaja() {\r\n    System.out.print("El total de la caja es ");\r\n    caja=Math.round(caja*100);\r\n    return caja/100;\r\n  } \r\n}\r\n```\r\n\r\nEn la clase "**Gestion**" se declaran dos atributos, un array de tipo "_Producto_" para contener los productos  y otro de tipo "_Double_" para contener el importe. Se declaran dos constructores, uno vació y otro que carga el array de productos. Esta clase contiene 5 métodos. El primero, **public Producto[] cargarProductos()**, devuelve el array de productos. El segundo, **public void mostrarProductos(Producto[] productos)**, recibe como parámetro el array de productos que se mostrarán. El tercer método, **public void mostrarNombreProductos(Producto[] productos)**, es parecido al anterior, con la diferencia que dentro de su código se llama al código método getNombre() para imprimir por pantalla el nombre en lugar de todo el array de productos. El cuarto método, public double **comprarProducto(Producto[] productos, int num, int cantidadUnidades)**, recibe el array de productos, un entero identificador del producto seleccionado y otro entero para la cantidad de productos elegida por el usuario. Este método, comprueba que el producto seleccionado exista **if (productos[num-1].isDisponible())** y que la cantidad seleccionada sea menor que la cantidad en stock **if (productos[num-1].getCantStock() >= cantidadUnidades)**. En el caso que la compra se pueda llevar a cabo cumpliendo las condiciones anteriores, la cantidad de productos en stock será actualizado **productos[num -1].setCantStock(productos[num -1].getCantStock()-cantidadUnidades)** y se añadirá el importe de la compra a la caja: **caja+=cantidadUnidades*productos[num-1].getPrecioUnit()**. El último método, **public double mostrarCaja()**, devuelve entero que indica el importe de la venta actual  **caja=Math.round(caja*100); return caja/100;**. En la clase Producto se definen atributos comunes a los tipos "_Música_", "_Videojuego_" y "_Cine_": "_nombre_", "_precioUnit_", "_cantStock_" y "_disponible_". Se crea un cuarto atributo estático llamado "_dimensionArray_" para que cuando en la clase Test se cree el catálogo de productos le podamos designar la dimensión de este array directamente usando esta variable: **Producto catalogo[] = new  producto[Producto.dimesionArray]** (cada nueva creación de objeto Producto incrementa en uno la dimensión). El código de la clase **Producto** es el siguiente:\r\n\r\n```\r\npackage ejerc03;\r\n\r\npublic abstract class Producto {\r\n\r\n  //Attributes\r\n  private String nombre;\r\n  private double precioUnit;\r\n  private int cantStock;\r\n  private boolean disponible = false;\r\n  public static int dimesionArray;\r\n  \r\n  \r\n  //Constructors\r\n  public Producto() { }\r\n  public Producto(String nombre, double precioUnit, int cantStock, boolean disponible) {\r\n    this.nombre   = nombre;\r\n    this.precioUnit = precioUnit;\r\n    this.cantStock  = cantStock;\r\n    this.disponible = disponible;\r\n    \r\n    dimesionArray++;//Se obtiene con esta variable la dimensión del array. Según número de instancias del constructor\r\n  }\r\n  \r\n  \r\n  //Methods\r\n  @Override\r\n  public String toString() {\r\n    return  "Nombre: "      +this.getNombre()+    "n"+\r\n        "Precio unidad: " +this.getPrecioUnit()+  " €n"+\r\n        "En Stock: "    +this.getCantStock()+ "n";\r\n  }\r\n  \r\n  //Get and Set\r\n  public String getNombre() {\r\n    return this.nombre;\r\n  }\r\n  public void setNombre(String nombre) {\r\n    this.nombre = nombre;\r\n  }\r\n  public double getPrecioUnit() {\r\n    return this.precioUnit;\r\n  }\r\n  public void setPrecioUnit(double precioUnit) {\r\n    this.precioUnit = precioUnit;\r\n  }\r\n  public int getCantStock() {\r\n    return this.cantStock;\r\n  }\r\n  public void setCantStock(int cantStock) {\r\n    this.cantStock = cantStock;\r\n  }\r\n  public boolean isDisponible() {\r\n    if(getCantStock()>0) this.disponible = true;\r\n    return this.disponible;\r\n  }\r\n  public void setDisponible(boolean disponible) {\r\n    this.disponible = disponible;\r\n  }\r\n\r\n}\r\n```\r\n\r\nEn esta clase generamos los _getters_ y _setters_ para acceder a los atributos. También el método **toString()**. Uno de los métodos generados **public boolean isDisponible()** lo modificamos un poco. En la declaración de atributos pusimos a "_false_" la disponibilidad, con lo que siempre figura que no existe producto, para ello usamos: **if(getCantStock()>0) this.disponible = true;** sabremos si hay disponibilidad. Las tres clases restantes: "_Musica_", "_Videojuego_" y "_Cine_" se crean por _herencia_ de la clase padre "_Producto_". Por darle un poco de diferencia, he añadido un atributo a cada una de ellas: "genero", "tematica" y "director". Por herencia se crean los constructores y método toString(). Y se añaden getters y setters de los nuevos atributos. Para no añadir mucho código, copio el código de la clase **Musica**:\r\n\r\n```\r\npackage ejerc03;\r\n\r\npublic class Cine extends Producto {\r\n\r\n  //Attribute\r\n  private String director;\r\n\r\n  \r\n  //Constructor\r\n  public Cine() { }\r\n  public Cine(String nombre, double precioUnit, int cantStock, boolean disponible, String director) {\r\n    super(nombre, precioUnit, cantStock, disponible);\r\n    this.director = director;\r\n  }\r\n  \r\n  \r\n  //Methods\r\n  @Override\r\n  public String toString() {\r\n    return  "ARTÍCULO DE CINEn"+\r\n        super.toString()+\r\n        "Director: "  +this.director;\r\n  }\r\n  \r\n  //Gets and Sets\r\n  public String getDirector() {\r\n    return director;\r\n  }\r\n  public void setDirector(String director) {\r\n    this.director = director;\r\n  }\r\n}\r\n```\r\n\r\nLo único a mencionar de esta clase es que en su declaración inicial se añade la palabra reservada "extends" indicando que extiende de la clase padre "Producto".\r\n\r\n```\r\npackage leer;\r\n\r\nimport java.io.*;\r\n\r\npublic class Leer {\r\n\r\n\tpublic static String dato() {\r\n\t\tString sdato = " ";\r\n\t\ttry {\r\n\t\t\tInputStreamReader isr = new InputStreamReader(System.in);\r\n\t\t\tBufferedReader flujoE = new BufferedReader(isr);\r\n\t\t\tsdato = flujoE.readLine();\r\n\t\t} catch (IOException e) {\r\n\t\t\tSystem.out.println("Error " + e.getMessage());\r\n\t\t}\r\n\t\treturn sdato;\r\n\r\n\t}\r\n\r\n\tpublic static int datoInt() {\r\n\t\treturn Integer.parseInt(dato());\r\n\t}\r\n\r\n\tpublic static float datoFloat() {\r\n\t\treturn Float.parseFloat(dato());\r\n\t}\r\n\r\n\t// Leer un char por teclado\r\n\r\n\tpublic static char datoChar() {\r\n\t\tchar c = \' \';\r\n\t\ttry {\r\n\t\t\tjava.io.BufferedInputStream b = new BufferedInputStream(System.in);\r\n\t\t\tc = (char) b.read();\r\n\t\t} catch (IOException e) {\r\n\t\t\tSystem.out.println("Error al leer");\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn c;\r\n\t}\r\n\r\n\tpublic static long datoLong() {\r\n\t\treturn Long.parseLong(dato());\r\n\t}\r\n}\r\n```\r\n\r\nEn este vídeo explico el código: [Descargar Programa java tienda](https://drive.google.com/open?id=0BzQS5pOyF_HjTGpjdnRzQnlfeDA "Descargar Programa java tienda") Nota final. El programa ha sido creado para FP aplicaciones móviles que estoy estudiando, es con fines didácticos, por lo que fuera de este uso, carece de sentido.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Firebase + Google\'\r\ndate: Fri, 07 Nov 2014 21:28:10 +0000\r\npublished: true\r\ntags: Android,AngularJS,Pildoritas\r\n---\r\n\r\nFirebase anunció hace unos días (21 Octubre 2.014) en su blog que Google entraba a "formar parte" en Firebase. Lo que poco que he experimentado con Firebase fue para probar AngularJS y trabajar con la información guardada en Firebase. La información más importante a destacar es:\r\n\r\n*   Firebase dispone de una buena API, con ejemplos de códigos.\r\n*   Trabaja con JSON.\r\n*   Real time backend.\r\n*   En su free plan:\r\n    *   50 conexiones máximas.\r\n    *   5 GB Data Transfer, 100 MB Data Storage.\r\n    *   1 GB Hosting Storage,100 GB Hosting Transfer.\r\n*   Plataforma AngularJS, Android, Backbone, Java..\r\n\r\nPara más info: [https://www.firebase.com/](https://www.firebase.com/ "Abre en nueva página web FIREBASE") Habrá que esperar que depara esta nueva situación de Firebase.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Formulario web centrado\'\r\ndate: Mon, 03 Mar 2014 22:18:41 +0000\r\npublished: true\r\ntags: Css3,Pildoritas\r\n---\r\n\r\nFormulario web centrado en la página web noes complicado. El método aquí explicado puede usarse para cualquier elemento, es válido para un formulario web como para cualquier otro elemento o caja. Para conseguir el centrado he posicionado el contenedor de manera absolute y definido sus atributos left, right, top y bottom a 0 para que ocupe todo el ancho y alto de la pantalla y dando márgenes autos en las cuatro direcciones. A dicho contenedor se le da width y height en porcentajes y para que no quede o muy pequeño o grande se le da mínimos y máximos a los width y height. Adicionalmente, para darle un poco más de juego al formulario web he insertado imágenes de background a cada uno de los campos input. El código **css**:\r\n\r\n```\r\n*{\r\n    margin:0;\r\n    padding:0;\r\n}\r\nbody {\r\n    font-family:sans-serif;\r\n}\r\n#contenedor {\r\n    position:absolute;\r\n    left:0; right:0;\r\n    top:0; bottom:0;\r\n    margin:auto;\r\n    width:35%;\r\n    height:30%;\r\n    min-width:340px;\r\n    min-height:200px;\r\n    max-width:1920px;\r\n    max-height:1080px;\r\n}\r\nform{\r\n    background: -moz-linear-gradient(top,  rgba(242,244,242,0) 5%, rgba(237,247,239,0.47) 50%, rgba(237,247,239,1) 100%);\r\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(5%,rgba(242,244,242,0)), color-stop(50%,rgba(237,247,239,0.47)), color-stop(100%,rgba(237,247,239,1)));\r\n    background: -webkit-linear-gradient(top,  rgba(242,244,242,0) 5%,rgba(237,247,239,0.47) 50%,rgba(237,247,239,1) 100%);\r\n    background: -o-linear-gradient(top,  rgba(242,244,242,0) 5%,rgba(237,247,239,0.47) 50%,rgba(237,247,239,1) 100%);\r\n    background: -ms-linear-gradient(top,  rgba(242,244,242,0) 5%,rgba(237,247,239,0.47) 50%,rgba(237,247,239,1) 100%);\r\n    background: linear-gradient(to bottom,  rgba(242,244,242,0) 5%,rgba(237,247,239,0.47) 50%,rgba(237,247,239,1) 100%);\r\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\'#00f2f4f2\', endColorstr=\'#edf7ef\',GradientType=0 );\r\n}\r\nfieldset{\r\n    padding:20px 10px;\r\n    text-align:center;\r\n}\r\nlabel, input {\r\n    margin:3px 0;\r\n    height:25px;\r\n    line-height:25px;\r\n}\r\nlabel {\r\n    float:left;\r\n    clear:both;\r\n    width:42%;\r\n    text-align:right;\r\n}\r\ninput {\r\n    float:right;\r\n    text-indent:30px;\r\n    width:55%;\r\n}\r\nlegend {\r\n    background: url(\'../img/login_small.png\') no-repeat 2px center;\r\n    text-indent:40px;\r\n    font-size:1.2em;\r\n    text-transform:uppercase;\r\n}\r\ninput#usuario {\r\n    background: url(\'../img/user.png\') no-repeat 2px center;\r\n}\r\ninput#contrasena, input#repetir_contrasena{\r\n    background: url(\'../img/pass.png\') no-repeat 2px center;\r\n}\r\ninput[type="submit"] {\r\n    background: #ccc url(\'../img/send.png\') no-repeat 5px center;\r\n    border-radius:3px;\r\n    padding:10px;\r\n    cursor:pointer;\r\n    margin-top:10px;\r\n    height:30px;\r\n    line-height:5px;\r\n    width:auto;\r\n}\r\n```\r\n\r\nEl código **html**:\r\n\r\n```\r\n<!doctype html>\r\n<html lang="es">\r\n<head>\r\n\t<meta charset="UTF-8" http-equiv="Content-Type" content="text/html;" />\r\n\t<title>Formulario de login</title>\r\n\t<link rel="stylesheet" href="css/style.css" type="text/css" charset="utf-8"/>\r\n</head>\r\n\r\n<body>\r\n    <div id="contenedor">\r\n        <form action="index_submit" method="get" accept-charset="utf-8">\r\n\r\n            <fieldset>\r\n                <legend>Login</legend>\r\n                <label for="usuario">Usuario</label><input type="text" name="usuario" id="usuario" required="required" />\r\n                <label for="">Contraseña</label><input type="password" name="contrasena" id="contrasena" required="required" />\r\n                <label for="repetir_contrasena">Repetir contraseña</label><input type="password" name="repetir_contrasena" id="repetir_contrasena" required="required" />\r\n            </fieldset>\r\n            <p><input type="submit" value="Logear"/></p>\r\n\r\n        </form>\r\n    </div>\r\n</body>\r\n</html>\r\n```\r\n\r\nSi te ha gustado el formulario, puedes descargarlo desde este enlace: [formulario web centrado](https://dl.dropboxusercontent.com/u/12043780/ivanalbizu.eu/formulario-login.zip "Formulario web centrado")'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Foundation Zurb 5 ya está disponible'\r\ndate: Fri, 22 Nov 2013 20:37:53 +0000\r\npublished: true\r\ntags: Pildoritas,Zurb\r\n---\r\n\r\nYa está disponible la nueva versión de **Foundation Zurb 5**\r\n\r\nLas principales modificaciones vienen por dos vías, la del _usuario_ y la del _desarrollador_.\r\n\r\n*   Para el usuario:\r\n    *   Usa **jQuery 2** (la nueva versión de jQuery reduce un 10% aproximadamente su peso).\r\n    *   Apuesta por realizar **animaciones con CSS**.\r\n    *   Integra una libreria JavaScript llamada **fastclick.js** ([https://github.com/ftlabs/fastclick](https://github.com/ftlabs/fastclick)). Al parecer, reduce los tiempos de espera del usuario desde el momento en que hace \"click\"\r\n*   Para el desarrollador:\r\n    *   Incluye **templates** muy variadas para poder empezar a trabajar rápidamente sobre una estructura de web. [http://foundation.zurb.com/templates/banded.html](http://foundation.zurb.com/templates/banded.html)\r\n    *   Se habla algo de **SassC** (C viene del lenguaje, no lo he terminado de entender)\r\n    *   **Foro**. He estado mirando la actividad, y parece que las respuestas llegan pronto.\r\n\r\nGráficamente parece que tiene algunos cambios. Hasta aquí lo que he podido ir entresacando de la web oficial. Ahora me toca probarlo con mis propias manos."},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'GridView con librería Picasso II\'\r\ndate: Wed, 17 Dec 2014 18:17:18 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nContinuando con mi publicación anterior sobre [GridView con librería Picasso I](http://ivanalbizu.eu/gridview-con-libreria-picasso/ "GridView con librería Picasso"), voy a implementar:\r\n\r\n*   Usar las imágenes de nuestro móvil\r\n*   Posibilidad de controlar el número de columnas del GridView\r\n*   Permitir ver la imagen con la aplicación por defecto\r\n*   Mejorar la visualización en función del tamaño de pantalla\r\n\r\n## 1. Usar imágenes de nuestro móvil.\r\n\r\nPara obtener las imágenes que tenemos en nuestro teléfono usaremos un método estático que nos devuelve un ArrayList de String. El método lo implementamos dentro de MainActivity.java Su código:\r\n\r\n```\r\n/**\r\n * Getting All Images Path\r\n * \r\n * @param activity\r\n * @return ArrayList with images Path\r\n */\r\npublic static ArrayList<String> getAllShownImagesPath(Activity activity) {\r\n\tUri uri;\r\n\tCursor cursor;\r\n\tint column_index_data, column_index_folder_name;\r\n\tArrayList<String> listOfAllImages = new ArrayList<String>();\r\n\tString absolutePathOfImage = null;\r\n\turi = android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n\r\n\tString[] projection = { MediaColumns.DATA,\r\n\t\t\tMediaStore.Images.Media.BUCKET_DISPLAY_NAME };\r\n\r\n\tcursor = activity.getContentResolver().query(uri, projection, null,\r\n\t\t\tnull, MediaStore.Images.Media.DATE_ADDED);\r\n\r\n\tcolumn_index_data = cursor.getColumnIndexOrThrow(MediaColumns.DATA);\r\n\tcolumn_index_folder_name = cursor\r\n\t\t\t.getColumnIndexOrThrow(MediaStore.Images.Media.BUCKET_DISPLAY_NAME);\r\n\twhile (cursor.moveToNext()) {\r\n\t\tabsolutePathOfImage = cursor.getString(column_index_data);\r\n\r\n\t\tlistOfAllImages.add(absolutePathOfImage);\r\n\t}\r\n\r\n\tCollections.reverse(listOfAllImages);\r\n\treturn listOfAllImages;\r\n}\r\n```\r\n\r\nNecesitamos ahora modificar el código del adaptador, ya que su constructor recibía como uno de sus parámetros un Array de String. Por tanto\r\n\r\n1.  La variable que contiene las imágenes será **private ArrayList<String> items;**\r\n2.  El contructor será del tipo **public GridviewAdapter(Context context, ArrayList<String> items) {...}**.\r\n3.  Para determinar cuantos elementos tiene el Array ahora será **public int getCount() { return items.length; }**\r\n4.  Para conocer sobre que imagen se itera dentro de getView necesitaremos cambiarlo a **public Object getItem(int position) { return items.get(position); }**\r\n5.  Para hacer uso de la librería Picasso modificaremos el método que obtiene la imagen a procesar **.load("file://"+items.get(position))**. Concatenamos antes de la ruta de la imagen un trozo de String para referenciarla correctamente: "file://"\r\n\r\nHasta aquí ya usamos las imágenes de nuestro móvil para crear el GridView.\r\n\r\n## 2. Controlar el número de columnas.\r\n\r\nNecesitaremos crear y modificar varios archivos.\r\n\r\n1.  Crear el menú de opciones, sobre esto ya hice un [vídeo](https://www.youtube.com/watch?v=4r7RNfK89lg&list=UUgAVPB3yw74JP5UEEXHgccA "Vídeo menú de opciones")\r\n2.  Registramos el menú en el MainActivity.java con **public boolean onCreateOptionsMenu(Menu menu) {...}**\r\n3.  Le damos funcionalidad a los ítems del menú con **public boolean onOptionsItemSelected(MenuItem item) {...}**\r\n    1.  Establecemos al comienzo todos los ítems como no seleccionados **item.setChecked(false);**\r\n    2.  Según ítem seleccionado, pasamos (**numColumn**) a una variable el valor de columnas y establecemos el ítem como "checked" **item.setChecked(true);**\r\n    3.  Después del SWITCH le comunicamos al GridView el número de columnas: **.setNumColumns(numColumn);** y el adaptador actualizado: **.setAdapter(new GridviewAdapter(MainActivity.this, getAllShownImagesPath(this), numColumn));**\r\n    4.  Añadimos nueva variable al adaptador y modificamos el constructor para que reciba el tercer parámetro que indica el número de columnas: **public GridviewAdapter(Context context, ArrayList<String> items, int numColumn) {..}**\r\n\r\nCódigo XML del menú:\r\n\r\n```\r\n<menu xmlns:android="http://schemas.android.com/apk/res/android"\r\n\txmlns:app="http://schemas.android.com/apk/res-auto"\r\n\txmlns:tools="http://schemas.android.com/tools"\r\n\ttools:context="eu.ivanalbizu.picassogridviewgallery.MainActivity" >\r\n\r\n\t<group android:id="@+id/group1" android:checkableBehavior="single">\r\n\t\t<item\r\n\t\t\tandroid:id="@+id/oneColumn"\r\n\t\t\tandroid:orderInCategory="100"\r\n\t\t\tandroid:title="@string/one_column"\r\n\t\t\tapp:showAsAction="never"/>\r\n\t\t<item\r\n\t\t\tandroid:id="@+id/twoColumn"\r\n\t\t\tandroid:orderInCategory="200"\r\n\t\t\tandroid:title="@string/two_column"\r\n\t\t\tapp:showAsAction="never"/>\r\n\t\t<item\r\n\t\t\tandroid:id="@+id/threeColumn"\r\n\t\t\tandroid:orderInCategory="300"\r\n\t\t\tandroid:title="@string/three_column"\r\n\t\t\tapp:showAsAction="never" android:checked="true"/>\r\n\t\t<item\r\n\t\t\tandroid:id="@+id/fourColumn"\r\n\t\t\tandroid:orderInCategory="400"\r\n\t\t\tandroid:title="@string/four_column"\r\n\t\t\tapp:showAsAction="never"/>\r\n\t</group>\r\n\r\n</menu>\r\n```\r\n\r\nCódigo de creación y control del menú:\r\n\r\n```\r\n@Override\r\npublic boolean onCreateOptionsMenu(Menu menu) {\r\n\tgetMenuInflater().inflate(R.menu.main, menu);\r\n\tgetOverflowMenu();\r\n\treturn super.onCreateOptionsMenu(menu);\r\n}\r\n\r\nprivate void getOverflowMenu() {\r\n\r\n\ttry {\r\n\t\tViewConfiguration config = ViewConfiguration.get(this);\r\n\t\tField menuKeyField = ViewConfiguration.class.getDeclaredField("sHasPermanentMenuKey");\r\n\t\tif (menuKeyField != null) {\r\n\t\t\tmenuKeyField.setAccessible(true);\r\n\t\t\tmenuKeyField.setBoolean(config, false);\r\n\t\t}\r\n\t} catch (Exception e) {\r\n\t\te.printStackTrace();\r\n\t}\r\n}\r\n\r\n@Override\r\npublic boolean onOptionsItemSelected(MenuItem item) {\r\n\titem.setChecked(false);\r\n\t\r\n\tswitch (item.getItemId()) {\r\n\tcase R.id.oneColumn:\r\n\t\tnumColumn=1;\r\n\t\titem.setChecked(true);\r\n\t\tbreak;\r\n\tcase R.id.twoColumn:\r\n\t\tnumColumn=2;\r\n\t\titem.setChecked(true);\r\n\t\tbreak;\r\n\tcase R.id.threeColumn:\r\n\t\tnumColumn=3;\r\n\t\titem.setChecked(true);\r\n\t\tbreak;\r\n\tcase R.id.fourColumn:\r\n\t\tnumColumn=4;\r\n\t\titem.setChecked(true);\r\n\t\tbreak;\r\n\tdefault:\r\n\t\tbreak;\r\n\t}\r\n\t\r\n\tgridView.setNumColumns(numColumn);\r\n\tgridView.setAdapter(new GridviewAdapter(MainActivity.this,\r\n\t\t\tgetAllShownImagesPath(this),numColumn));\r\n\t\r\n\treturn super.onOptionsItemSelected(item);\r\n}\r\n```\r\n\r\n## 3. Permitir ver la imagen con la aplicación por defecto.\r\n\r\nDentro del método onCreate(...) incluimos listener al GridView del tipo "ítem seleccionado". Su código:\r\n\r\n```\r\ngridView.setOnItemClickListener(new OnItemClickListener() {\r\n\r\n\t@Override\r\n\tpublic void onItemClick(AdapterView<?> parent, View view,\r\n\t\t\tint position, long id) {\r\n\t\tString rutaDeLaImagen = gridAdapter.getItem(position).toString();\r\n\r\n\t\tIntent intent = new Intent();\r\n\t\tintent.setAction(Intent.ACTION_VIEW);\r\n\t\tintent.setDataAndType(Uri.parse("file://" + rutaDeLaImagen), "image/*");\r\n\t\tstartActivity(intent);\r\n\t}\r\n});\r\n```\r\n\r\n## 4. Mejorar la visualización en función del tamaño de pantalla.\r\n\r\nPara optimizar el ancho de pantalla del móvil y el número de columnas a mostrar modificaremos el código del getView del adaptador. Se necesita obtener el ancho de pantalla del teléfono (detecta si está vertical u horizontal el móvil). Al método **.resize(...)** de la librería Picasso le pasamos como parámetros el resultado de dividir el ancho del móvil entre el número de columnas** int imageWidth = (int) (width / numColumn);** El método completo del getView es:\r\n\r\n```\r\n@Override\r\npublic View getView(int position, View convertView, ViewGroup parent) {\r\n\tWindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);\r\n\tDisplay display = wm.getDefaultDisplay();\r\n\tPoint size = new Point();\r\n\tdisplay.getSize(size);\r\n\tint width = size.x;\r\n\t\r\n\tint imageWidth = (int) (width / numColumn);\r\n\t\r\n\t//Declaramos el ImageView\r\n\tImageView img = null;\r\n\tif (convertView == null) {\r\n\t\t//Referenciamos el ImageView\r\n\t\timg = new ImageView(context);\r\n\t\t//Referenciamos el ImageView al convertView\r\n\t\timg.setPadding(10,0,10,0);\r\n\t\tconvertView = img;\r\n\t} else {\r\n\t\timg = (ImageView) convertView;\r\n\t}\r\n\r\n\t//Uso de la librería Picasso\r\n\tPicasso.with(context)\r\n\t\t//Cargamos la imagen sobre la que se esté iterando\r\n\t\t.load("file://"+items.get(position))\r\n\t\t//Imagen por defecto usada mientras se cargan las imágenes\r\n\t\t.placeholder(R.drawable.picture)\r\n\t\t.noFade()\r\n\t\t.resize(imageWidth, imageWidth)\r\n\t\t.centerCrop()\r\n\t\t//Se aplica sobre la imagen (ImageView - se hizo referencia a "convertView")\r\n\t\t.into(img);\r\n\t\r\n\treturn convertView;\r\n}\r\n```\r\n\r\nVídeo del proyecto: Descargar el código completo de el [GridView con librería Picasso](https://drive.google.com/open?id=0BzQS5pOyF_HjOWc5ekxRWS01bjQ "GridView con Picasso de galería del móvil")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'GridView con librería Picasso ViewHolder\'\r\ndate: Sat, 27 Dec 2014 18:09:17 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nEn esta entrada voy a realizar una variante del primer post sobre [librería Picasso.](http://ivanalbizu.eu/gridview-con-libreria-picasso/ "Artículo uso librería Picasso") En este caso mostraré una información adicional. Se trata de ubicar un TextView que muestre cual es el dominio extraído de la URL de la imagen. Voy a crear para ello nuevos archivos:\r\n\r\n*   La clase Pojo se llama **Imagen.java** con un atributo String para imagen\r\n*   La clase **Imagenes.java** donde estarán las imágenes a cargar\r\n*   La vista de las imágenes y textos en **molde.xml**. ImageView y TextView dentro de un RelativeLayout.\r\n\r\nVoy a modificar los siguientes archivos:\r\n\r\n*   GridviewAdapter.java\r\n*   MainActivity.java\r\n\r\n## 1. Modificación de GridviewAdapter.java:\r\n\r\n*   Se usa un método, getDomainName(String url), al que se le pasa una URL y devuelve el dominio\r\n*   Se crea clase ViewHolder con dos variables de tipos ImageView y TextView\r\n*   Método getView(...):\r\n    *   Las primeras líneas capturan el ancho de pantalla y para luego, con Picasso redimensionarlas mediante **resize(imageWidth, imageWidth)**\r\n    *   Se declara el objeto patrón de tipo ViewHolder\r\n    *   Dentro de claúsula "if" se instancia el patrón, se guarda dentro de convertView el layout de la vista, se obtienen las referencias de la imagen y el texto. Al convertView se le asigna un Tag con **setTag(...)** para después poder llamarla\r\n    *   En la claúsula "else" se le pasa al patrón las referencias del convertView mediante **getTag()**\r\n    *   Al TextView se le asigna el texto mediante **patron.texto.setText(getDomainName(items[position].getImagen()))**\r\n    *   La imagen se introduce especificando el ítem sobre el que se itera **load(items[position])** y se establece al ImageView mediante **into(patron.imagen)**\r\n\r\n## 2. Creación del layout\r\n\r\nSe crea el archivo molde.xml. Se usa un RelativeLayout para contener el ImageView y el TextView\r\n\r\n## 3. Clase Pojo\r\n\r\nSólo tiene un atributo la clase Imagen.java, que será de tipo String. Con su constructor y sus Getters y Setters.\r\n\r\n## 4. Clase que contiene las URL de las imágenes.\r\n\r\nSe trata de construir con un array de imágenes y la clase Pojo todas las imágenes a usar.\r\n\r\n## 5. MainActivity.java\r\n\r\nSe instancia el Adaptador del GridgenyView y el GridView del layout. En onCreate(...) se le pasa al adaptador el array de imágenes dela clase Imagenes.java. Descargar [GridView con Picasso](https://db.tt/VbNEyPFs "GridView con Picasso ViewHolder")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'GridView con librería Picasso I\'\r\ndate: Mon, 15 Dec 2014 15:40:06 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nGridview con libreria Picasso Android. En esta entrada voy a hacer un sencillo ejemplo de GridvView. Para ello necesitamos descargarnos el [Jar de la librería Picasso](http://square.github.io/picasso/ "Web para descargar librería Picasso") Se trabajará sobre cuatro archivos:\r\n\r\n1.  La vista de la aplicación: **activity_main.xml**\r\n2.  El adaptador del GridView: **GridviewAdapter.java**\r\n3.  El programa principal: **MainActivity.java**\r\n4.  Modificar el **AndroidManifest.xml** para dar permisos de internet\r\n\r\nEl primer archivo, **activity_main.xml**, contiene el GridView y su ID será **@+id/gridView**. Su código es:\r\n\r\n```\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n  xmlns:tools="http://schemas.android.com/tools"\r\n  android:layout_width="match_parent"\r\n  android:layout_height="match_parent"\r\n  android:padding="10sp"\r\n  tools:context="${relativePackage}.${activityClass}" >\r\n\r\n  <GridView\r\n    android:id="@+id/gridView"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="wrap_content"\r\n    android:layout_alignParentLeft="true"\r\n    android:layout_alignParentTop="true"\r\n    android:numColumns="3" >\r\n  </GridView>\r\n\r\n</RelativeLayout>\r\n```\r\n\r\nEl segundo archivo, el adaptador del GridView se llama **GridviewAdapter.java** lo construyo extendiendo de BaseAdapter.\r\n\r\n*   El constructor del adaptador será con dos parámetros. El primero hace referencia al contexto, y el segundo aun Array de String que contendrá lista de URL que pasarán en el programa principal.\r\n*   Se implementan los tres métodos propios del base adapter: public int getCount(), public Object getItem(int position) y public long getItemId(int position).\r\n*   Se da forma al public View getView(int position, View convertView, ViewGroup parent).\r\n    *   Se declara un ImageView. La primera vez que se itere dentro de getView se instancia el ImageView y se iguala a convertView. En el resto de iteraciones el convertView se castea y se pasa al ImageView.\r\n    *   Se usa la librería Picasso. Existen muchos métodos. Los necesarios son cargar (load()) las imágenes y especificar sobre que se cargarán, en mi caso sobre "img", es decir, sobre el ImageView.\r\n\r\nEl código es:\r\n\r\n```\r\npackage eu.ivanalbizu.picasso;\r\n\r\nimport android.content.Context;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.BaseAdapter;\r\nimport android.widget.ImageView;\r\n\r\nimport com.squareup.picasso.Picasso;\r\n\r\npublic class GridviewAdapter extends BaseAdapter{\r\n\r\n\tprivate Context context;\r\n\tprivate String[] items;\r\n\r\n\t//Constructor de dos parámetros\r\n\tpublic GridviewAdapter(Context context, String[] items){\r\n\t\tsuper();\r\n\t\tthis.context = context;\r\n\t\tthis.items = items;\r\n\t}\r\n\r\n\t//Obetenemos la cantidad de imágenes\r\n\t@Override\r\n\tpublic int getCount() {\r\n\t\treturn items.length;\r\n\t}\r\n\r\n\t//Obtenemos el objeto a partir de su posición\r\n\t@Override\r\n\tpublic Object getItem(int position) {\r\n\t\treturn items[position];\r\n\t}\r\n\r\n\t@Override\r\n\tpublic long getItemId(int position) {\r\n\t\treturn position;\r\n\t}\r\n\r\n\t//Generamos la vista\r\n\t@Override\r\n\tpublic View getView(int position, View convertView, ViewGroup parent) {\r\n\t\t//Declaramos el ImageView\r\n\t\tImageView img = null;\r\n\t\tif (convertView == null) {\r\n\t\t\t//Referenciamos el ImageView\r\n\t\t\timg = new ImageView(context);\r\n\t\t\t//Referenciamos el ImageView al convertView\r\n\t\t\tconvertView = img;\r\n\t\t\timg.setPadding(5, 5, 5, 5);\r\n\t\t} else {\r\n\t\t\timg = (ImageView) convertView;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//Uso de la librería Picasso\r\n\t\tPicasso.with(context)\r\n\t\t\t//Cargamos la imagen sobre la que se esté iterando\r\n\t\t\t.load(items[position])\r\n\t\t\t//Imagen por defecto usada mientras se cargan las imágenes\r\n\t\t\t.placeholder(R.drawable.picture)\r\n\t\t\t.resize(200, 300)\r\n\t\t\t//Se aplica sobre la imagen (ImageView - se hizo referencia a "convertView")\r\n\t\t\t.into(img);\r\n\t\t\r\n\t\treturn convertView;\r\n\t}\r\n\r\n}\r\n```\r\n\r\nEn **MainActivity.java:**\r\n\r\n*   Se declaran tres variables, una variable GridView y obtengo la referencia de la vista, otra variable para hacer uso del adaptador y un Array de String que contiene las URL de las imágenes.\r\n*   Se construye el adaptador con los dos parámetros, primero se pasa la clase actual (MainActivity.this) y segundo el Array de String\r\n*   Al gridView se le especifica que haga uso del adaptador que acabamos de crear.\r\n\r\nSu código:\r\n\r\n```\r\npackage eu.ivanalbizu.picasso;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.widget.GridView;\r\n\r\npublic class MainActivity extends Activity {\r\n  \r\n  private GridView gridView;\r\n  private GridviewAdapter gridAdapter;\r\n  \r\n  //Array de String que contiene las URL de las imágenes externas que usemos\r\n  String[] items = {\r\n    "http://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Tour_Eiffel_Wikimedia_Commons.jpg/324px-Tour_Eiffel_Wikimedia_Commons.jpg",\r\n    "http://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Tour_Eiffel_Wikimedia_Commons.jpg/324px-Tour_Eiffel_Wikimedia_Commons.jpg",\r\n    "http://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Tour_Eiffel_Wikimedia_Commons.jpg/324px-Tour_Eiffel_Wikimedia_Commons.jpg",\r\n    "http://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Tour_Eiffel_Wikimedia_Commons.jpg/324px-Tour_Eiffel_Wikimedia_Commons.jpg",\r\n    "http://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Tour_Eiffel_Wikimedia_Commons.jpg/324px-Tour_Eiffel_Wikimedia_Commons.jpg",\r\n  };\r\n  \r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n    \r\n    //Obtenemos la referencia de la vista\r\n    gridView = (GridView) findViewById(R.id.gridView);\r\n    \r\n    //Construímos el adaptador pasando como\r\n    //segundo parámetro el array de imágenes\r\n    gridAdapter = new GridviewAdapter(MainActivity.this, items);\r\n    \r\n    //Especificamos el adaptador\r\n    gridView.setAdapter(gridAdapter);\r\n\r\n  }\r\n}\r\n```\r\n\r\nEn **AndroidManifest.xml** tenemos que dar permisos de internet: <uses-permission android:name="android.permission.INTERNET"/> Vídeo del proyecto: Se puede decargar [código de GridView con librería Picasso](https://db.tt/EFMK4Nm4 "Código GridView con librería Picasso")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Instalación de GIT en Windows\'\r\ndate: Tue, 29 Oct 2013 20:58:00 +0000\r\npublished: true\r\ntags: Pildoritas\r\n---\r\n\r\nEn esta entrada se va a llevar  a cabo la instalación de GIT. Git es un software de control de versiones diseñado por Linus Torvalds, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran número de archivos de código fuente. [(Wikipedia)](http://es.wikipedia.org/wiki/Git "Fuente Wikipedia")\r\n\r\n#### Pantalla de descarga de GIT\r\n\r\n[caption id="attachment_257" align="alignnone" width="519"][![Pantalla de descarga de GIT](storage/wp-content/uploads/2013/10/01g.png "Pantalla de descarga de GIT")](http://ivanalbizu.eu/wp-content/uploads/2013/10/01g.png) Pantalla de descarga de GIT[/caption]\r\n\r\n1.  Pinchar en "Download for Windows". Normalmente se nos presentará la opción de descarga de acuerdo a nuestro sistema operativo. [http://git-scm.com/](http://git-scm.com/)\r\n\r\n#### Pantalla de inicio de la descarga\r\n\r\n[caption id="attachment_258" align="alignnone" width="517"][![Pantalla de inicio de la descarga](storage/wp-content/uploads/2013/10/02g.png "Pantalla de inicio de la descarga")](http://ivanalbizu.eu/wp-content/uploads/2013/10/02g.png) Pantalla de inicio de la descarga[/caption]\r\n\r\n1.  Se indica que la descarga del instalable está en curso.\r\n\r\n#### Iniciar el instalador de GIT\r\n\r\n[caption id="attachment_259" align="alignnone" width="489"][![Iniciar el instalador de GIT](storage/wp-content/uploads/2013/10/03g.png "Iniciar el instalador de GIT")](http://ivanalbizu.eu/wp-content/uploads/2013/10/03g.png) Iniciar el instalador de GIT[/caption]\r\n\r\n1.  Localizar dentro de nuestro ordenador el instalador. Y pulsando sobre la descarga con el "botón derecho" del ratón.\r\n2.  Elegir la opción "Ejecutar como administrador" e introducir el Usuario y Contraseña de nuestro equipo.\r\n\r\n#### Inicio de la instalación de GIT\r\n\r\n[caption id="attachment_260" align="alignnone" width="526"][![Inicio de la instalación de GIT](storage/wp-content/uploads/2013/10/04g.png "Inicio de la instalación de GIT")](http://ivanalbizu.eu/wp-content/uploads/2013/10/04g.png) Inicio de la instalación de GIT[/caption]\r\n\r\n1.  La instalación ha comenzado, para continuar pulsar "Next >".\r\n\r\n#### Licencia de GIT\r\n\r\n[caption id="attachment_261" align="alignnone" width="527"][![Licencia de GIT](storage/wp-content/uploads/2013/10/05g.png "Licencia de GIT")](http://ivanalbizu.eu/wp-content/uploads/2013/10/05g.png) Licencia de GIT[/caption]\r\n\r\n1.  Se muestra la licencia del Software. La léemos y pulsamos "Next >" para aceptar.\r\n\r\n#### Ubicación de la instalación\r\n\r\n[caption id="attachment_262" align="alignnone" width="523"][![Ubicación de la instalación](storage/wp-content/uploads/2013/10/06g.png "Ubicación de la instalación")](http://ivanalbizu.eu/wp-content/uploads/2013/10/06g.png) Ubicación de la instalación[/caption]\r\n\r\n1.  Se elige la ubicación de la instalación. Se puede cambiar la que viene por defecto pulsando sobre "Browse..." y navegando se elige la ruta deseada.\r\n2.  Para continuar se pulsa sobre sobre "Next >".\r\n\r\n#### Selección de los componentes de GIT\r\n\r\n[caption id="attachment_263" align="alignnone" width="528"][![Selección de los componentes de GIT](storage/wp-content/uploads/2013/10/07g.png "Selección de los componentes de GIT")](http://ivanalbizu.eu/wp-content/uploads/2013/10/07g.png) Selección de los componentes de GIT[/caption] La siguiente pantalla permite la personalización de Git. La configuración por defecto es la recomendada.\r\n\r\n1.  Mediante "botones radio" y "check boxes" se puede modificar la instalación por defecto.\r\n2.  Para continuar se pulsa sobre sobre "Next >".\r\n\r\n#### Posibilidad de crear atajo de GIT en inicio\r\n\r\n[caption id="attachment_264" align="alignnone" width="525"][![Posibilidad de crear atajo de GIT en inicio](storage/wp-content/uploads/2013/10/08g.png "Posibilidad de crear atajo de GIT en inicio")](http://ivanalbizu.eu/wp-content/uploads/2013/10/08g.png) Posibilidad de crear atajo de GIT en inicio[/caption] Esta pantalla da posibilidad de crear un atajo para su ejecución.\r\n\r\n1.  Si se selecciona "Don\'t create a Start Menu folder" no se crea atajo para iniciar, y no procede el punto 1\'.\r\n\r\n1.  \'  Si se quiere atajo para iniciar el programa, se puede especificar la ubicación.\r\n2.  Para continuar se pulsa sobre sobre "Next >".\r\n\r\n#### Opción para poder trabajar con la consola\r\n\r\n[caption id="attachment_265" align="alignnone" width="521"][![Opción para poder trabajar con la consola](storage/wp-content/uploads/2013/10/09g.png "Opción para poder trabajar con la consola")](http://ivanalbizu.eu/wp-content/uploads/2013/10/09g.png) Opción para poder trabajar con la consola[/caption] Se ofrece la posibilidad de seleccionar el modo de ejecución.\r\n\r\n1.  Se recomienda la primera opción "Use Git Bash only".\r\n2.  Para continuar se pulsa sobre sobre "Next >".\r\n\r\n#### Traducción de comandos de consola\r\n\r\n[caption id="attachment_266" align="alignnone" width="522"][![Traducción comandos de consola](storage/wp-content/uploads/2013/10/10g.png "Traducción comandos de consola")](http://ivanalbizu.eu/wp-content/uploads/2013/10/10g.png) Traducción comandos de consola[/caption] Configuración del entorno de uso de Git.\r\n\r\n1.  Para usuarios de Windows se recomienda la primera opción "Checkout Windwos-style, commit Unix-style line endings".\r\n2.  Para continuar se pulsa sobre sobre "Next >".\r\n\r\n#### Instalación en progreso\r\n\r\n[caption id="attachment_267" align="alignnone" width="525"][![Instalación en progreso](storage/wp-content/uploads/2013/10/11g.png "Instalación en progreso")](http://ivanalbizu.eu/wp-content/uploads/2013/10/11g.png) Instalación en progreso[/caption] Progreso de la instalación\r\n\r\n#### Instalación finalizada\r\n\r\n[caption id="attachment_268" align="alignnone" width="519"][![Instalación finalizada](storage/wp-content/uploads/2013/10/12g.png "Instalación finalizada")](http://ivanalbizu.eu/wp-content/uploads/2013/10/12g.png) Instalación finalizada[/caption] Da la posibilidad de descargarse las notas, donde aparecen las diferentes versiones, sus modificaciones, etc.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Intents en Android para llamada, mapas y mail\'\r\ndate: Tue, 28 Oct 2014 20:41:04 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nIntents en Android para hacer llamada, buscar en mapa google y enviar mail. Los pasos para hacer este proyecto son:\r\n\r\n1.  Declarar las **variables** en MainActivity.java y crear referencias de la vista XML\r\n2.  Se asigna **listener al botón llamar** con el texto que ha introducido el usuario.\r\n3.  Se asigna **listener al botón buscar** en mapa la dirección que ha introducido el usuario\r\n4.  Se asigna **listener al botón enviar mail.**\r\n\r\nLa declaración de variables la he realizado dentro del método onCreate(...)\r\n\r\n```\r\n//Se declaran y se referencian las variables de la vista XML\r\nfinal Button btnLlamar = (Button) findViewById(R.id.buttoncall);\r\nfinal Button btnBuscarMapa = (Button) findViewById(R.id.buttonsearch);\r\nfinal Button btnEnviarMail = (Button) findViewById(R.id.buttonsendmail);\r\n```\r\n\r\nListener para el botón de realizar llamada\r\n\r\n```\r\n//Se asigna listener al botón llamar con el texto que ha introducido el usuario\r\nbtnLlamar.setOnClickListener(new View.OnClickListener(){\r\n\tpublic void onClick(View v){\r\n\t\t\r\n\t\t//Se obtiene campo teléfono introducido por el usuario\r\n\t\tfinal EditText numeroTelefono = (EditText) findViewById(R.id.txtnumbercall);\r\n\t\tString numero = numeroTelefono.getText().toString();\r\n\t\t\r\n\t\t//Si no existe teléfono, se asigna teléfono de emergencias\r\n\t\tif (numero.equals("")) {\r\n\t\t\tnumero = "112";\r\n\t\t}\r\n\t\t//Se parse el teléfono a URI\r\n\t\tUri number = Uri.parse("tel:"+numero);\r\n\t\t\r\n\t\t//Se lanza el intent para llamada\r\n\t\tIntent callIntent = new Intent(Intent.ACTION_DIAL, number);\r\n\t\tstartActivity(callIntent);\r\n\t}\r\n});\r\n```\r\n\r\nListener para buscar en mapa\r\n\r\n```\r\n//Se asigna listener al botón buscar en mapa la dirección\r\n// que ha introducido el usuario\r\nbtnBuscarMapa.setOnClickListener(new View.OnClickListener() {\r\n\tpublic void onClick(View v) {\r\n\t\t\r\n\t\t//Se obtiene la dirección introducida por el usuario\r\n\t\tfinal EditText localizacion = (EditText) findViewById(R.id.txtsearchmap);\r\n\t\tString buscado = localizacion.getText().toString();\r\n\t\t\r\n\t\t//Se parsea la dirección\r\n\t\tUri location = Uri.parse("http://maps.google.co.in/maps?q="+buscado);\r\n\t\t\r\n\t\t//Se lanza el intent paramostra mapa\r\n\t\tIntent mapIntent = new Intent(Intent.ACTION_VIEW, location);\r\n\t\tstartActivity(mapIntent);\r\n\t}\r\n});\r\n```\r\n\r\nListener para el envió de mail\r\n\r\n```\r\n//Se asigna listener al botón enviar mail\r\nbtnEnviarMail.setOnClickListener(new View.OnClickListener() {\r\n\tpublic void onClick(View v) {\r\n\t\t\r\n\t\t//Se obtienen los campos introducidos por el usuario\r\n\t\tfinal EditText destinatario = (EditText) findViewById(R.id.txtmailuser);\r\n\t\tString dest = destinatario.getText().toString();\r\n\t\tfinal EditText asunto = (EditText) findViewById(R.id.txtmailsubject);\r\n\t\tString asun = asunto.getText().toString();\r\n\t\tfinal EditText cuerpo = (EditText) findViewById(R.id.txtmailbody);\r\n\t\tString cuer = cuerpo.getText().toString();\r\n\t\t\r\n\t\t//Se crea el intent para envío demail\r\n\t\tIntent emailIntent = new Intent(Intent.ACTION_SEND);\r\n\t\t\r\n\t\t//Se añaden campos extras para enviar mail\r\n\t\temailIntent.setType("text/plain");\r\n\t\temailIntent.putExtra(Intent.EXTRA_EMAIL, new String[] {dest});\t//Destinatario\r\n\t\temailIntent.putExtra(Intent.EXTRA_SUBJECT, asun);\t\t\t\t//Asunto\r\n\t\temailIntent.putExtra(Intent.EXTRA_TEXT, cuer);\t\t\t\t\t//Cuerpo mail\r\n\t\t//Se lanza la actividad\r\n\t\tstartActivity(Intent.createChooser(emailIntent, "Send email..."));\r\n\t}\r\n});\r\n```\r\n\r\nLa explicación de esta entrada ha sido escueta, es sencillo de entender directamente leyendo del código con sus comentarios. He creado un vídeo del paso seguido para este proyecto Android. Puedes descargar el código para probarlo en el siguiente enlace: [Descargar el programa Android para llamar, buscar en mapa y enviar mail](https://db.tt/CWIfbv3J "Descargar el programa Android envío mail, buscar mapa y llamar")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'ListView en Android con ArrayAdapter\'\r\ndate: Sun, 02 Nov 2014 15:14:15 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\n**ListView** en Android con **ArrayAdapter** usando una clase modelo y su adaptador para definir cada ítem de la lista. Los archivos de este programa van a ser:\r\n\r\n*   Acciones.java. Será el modelo.\r\n*   AccionesAdapter.java. Será el adaptador.\r\n*   MainActivity.java. Será el programa, el main.\r\n*   activity_main.xml. Será el contenedor de la vista de lista.\r\n*   list_item_accion.xml. Será la definición de la vista, cada ítem.\r\n\r\nLa ListView va a ser simple, cada ítem tendrá una imagen a la izquierda y un texto la derecha. Empiezo explicando los archivos XML. El archivo **activity_main.xml** tendrá como layout RelaveLayout, dentro tiene etiqueta <ListView></ListView> y el valor del atributo "id" será "@android:id/list". (Ojo, no será tipo @+id="").\r\n\r\n```\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n  xmlns:tools="http://schemas.android.com/tools"\r\n  android:layout_width="match_parent"\r\n  android:layout_height="match_parent"\r\n  android:background="#333"\r\n  tools:context="${relativePackage}.${activityClass}" >\r\n\r\n  <ListView\r\n      android:id="@android:id/list"\r\n      android:layout_width="match_parent"\r\n      android:layout_height="wrap_content"\r\n      android:layout_alignParentLeft="true"\r\n      android:layout_alignParentTop="true" >\r\n  </ListView>\r\n    \r\n</RelativeLayout>\r\n```\r\n\r\nLa vista de cada ítem queda definida en el archivo **list_item_accion.xml**, La imagen (ImageView) y el texto (TextView) quedan dentro de un LinearLayout.\r\n\r\n```\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n  android:layout_width="match_parent"\r\n  android:layout_height="match_parent"\r\n  android:orientation="horizontal" >\r\n\r\n  <ImageView\r\n      android:id="@+id/imageAccion"\r\n      android:layout_width="wrap_content"\r\n      android:layout_height="wrap_content"\r\n      android:src="@drawable/ic_edit" />\r\n\r\n  <TextView\r\n      android:id="@+id/textViewNombreAccion"\r\n      android:layout_width="wrap_content"\r\n      android:layout_height="wrap_content"\r\n      android:text="@string/incompleto"\r\n      android:textAppearance="?android:attr/textAppearanceLarge"\r\n      android:padding="5sp"\r\n      android:textColor="#fff"/>\r\n\r\n</LinearLayout>\r\n```\r\n\r\nDe aquí en adelante se va a definir la lógica, serán archivos java. El modelo se define en el archivo **Acciones.java**. Sólo tendrá dos atributos, uno de tipo "String" para el nombre y otro de tipo "int" para la imagen (en el XML será de tipo ImageView). Y su constructor y Getters y Setters.\r\n\r\n```\r\npackage eu.ivanalbizu.listview;\r\n\r\npublic class Acciones {\r\n  \r\n  //Variables del modelo\r\n  private String nombre;\r\n  private int icono;\r\n  \r\n  //Constructor del modelo\r\n  public Acciones(String nombre, int icono) {\r\n    this.nombre = nombre;\r\n    this.icono = icono;\r\n  }\r\n\r\n  //Getters y setters\r\n  public String getNombre() {\r\n    return nombre;\r\n  }\r\n  public void setNombre(String nombre) {\r\n    this.nombre = nombre;\r\n  }\r\n  public int getIcono() {\r\n    return icono;\r\n  }\r\n  public void setIcono(int icono) {\r\n    this.icono = icono;\r\n  }\r\n}\r\n```\r\n\r\nEl adaptador de ListView queda definido en el archivo **AccionesAdapter.java**. Este archivo extiende de ArrayAdapter y hace uso de Acciones.java: **extends ArrayAdapter<Acciones>.** Se definen tres variables:\r\n\r\n*   private List<Acciones> listadoOperaciones;\r\n*   private Activity context;\r\n*   private int layoutModel;\r\n\r\nSe crea el constructor de dicha clase. Se sobrescribe el método getView(...) usando tres parámetro. Este método realiza como un bucle recorriendo cada ítem, capturando la ImageView y el TextView. El código completo de esta clase:\r\n\r\n```\r\npackage eu.ivanalbizu.listview;\r\n\r\nimport java.util.List;\r\n\r\nimport android.app.Activity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\npublic class AccionesAdapter extends ArrayAdapter<Acciones> { \r\n  \r\n  //Atributos del adaptador\r\n  private List<Acciones> listadoOperaciones;\r\n  private Activity context;\r\n  private int layoutMolde;\r\n\r\n  //Constructor del adaptador\r\n  public AccionesAdapter(Activity context, int layout, List<Acciones> listadoOperaciones) {\r\n    super(context, layout, listadoOperaciones);\r\n    this.listadoOperaciones = listadoOperaciones;\r\n    this.context = context;\r\n    this.layoutMolde = layout;\r\n  }\r\n\r\n  \r\n  //Este método se puede considerar como un bucle. Se leen todos los ítems de la lista\r\n  @Override\r\n  public View getView(int position, View convertView, ViewGroup parent) {\r\n    \r\n    LayoutInflater inflater = context.getLayoutInflater();\r\n    \r\n    convertView = inflater.inflate(layoutMolde, null);\r\n\r\n    Acciones accionActual = listadoOperaciones.get(position);\r\n    \r\n    //Referencias a "list_item_accion.xml"\r\n    ImageView iconoAccion = (ImageView) convertView.findViewById(R.id.imageAccion);\r\n    TextView nombreAccion = (TextView) convertView.findViewById(R.id.textViewNombreAccion);\r\n    \r\n    //Se usan los SETTERS del modelo "Acciones.java"\r\n    iconoAccion.setImageResource(accionActual.getIcono());\r\n    nombreAccion.setText(accionActual.getNombre());\r\n    \r\n    //Se devuelve cada vez un item de la lista\r\n    return convertView;\r\n  }\r\n}\r\n```\r\n\r\nEl archivo **MainActivity.java** extiende de ListView. En el método protected void onCreate(Bundle savedInstanceState) se declara una lista de tipo Acciones y con el método **add** se añaden ítems a la lista:\r\n\r\n```\r\nList<Acciones> acciones = new ArrayList<Acciones>(); acciones.add(new Acciones("Editar",R.drawable.ic_edit));\r\n```\r\n\r\nSe crea el adaptador de la lista y se establece, pasando el layout a usar list_item_accion: \r\n\r\n```\r\nAccionesAdapter adapter = new AccionesAdapter(this, R.layout.list_item_accion, acciones); setListAdapter(adapter);\r\n```\r\n\r\n```\r\npackage eu.ivanalbizu.listview;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport android.app.ListActivity;\r\nimport android.os.Bundle;\r\n\r\npublic class MainActivity extends ListActivity {\r\n\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n    \r\n    //Se crea la lista de tipo Acciones(dos parámetros: texto e imagen)\r\n    List<Acciones> acciones = new ArrayList<Acciones>();\r\n    acciones.add(new Acciones("Editar",R.drawable.ic_edit));\r\n    acciones.add(new Acciones("Nuevo",R.drawable.ic_new));\r\n    acciones.add(new Acciones("Eliminar",R.drawable.ic_delete));\r\n    acciones.add(new Acciones("Copiar",R.drawable.ic_copy));\r\n    \r\n    //Se contruye el adaptador para la lista\r\n    //Se usa el Layout "list_item_accion.xml"\r\n    AccionesAdapter adapter = new AccionesAdapter(this, R.layout.list_item_accion, acciones);\r\n    \r\n    setListAdapter(adapter);\r\n  }\r\n}\r\n```\r\n\r\nSe puede descargar el [código completo de ListView en Android con ArrayAdapter](https://drive.google.com/open?id=0BzQS5pOyF_HjVUhvSFhMalVfYms "Código ListView en Android") Y aquí un vídeo de todo el proceso:'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Manejar eventos en Java'\r\ndate: Sat, 03 May 2014 15:39:00 +0000\r\npublished: true\r\ntags: Java,Pildoritas\r\n---\r\n\r\nManejar eventos en Java es relatívamente fácil. Y las maneras de hacerlo variadas. Siempre dependerá del proyecto, de su complejidad y del tiempo que tengamos. Se pueden usar clases anónimas, internas, etc. En el vídeo que he creado realizo un ejemplo de como capturar el de ratón, y cómo actuar en función de sobre que botón se ha pulsado, y en consecuencia, mostrárselo al usuario. Es un ejemplo simple, por sí solo no tiene utilidad."},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Maquetación página con Haml y Sass'\r\ndate: Thu, 31 Jul 2014 10:51:51 +0000\r\npublished: true\r\ntags: Css3,Sass\r\n---\r\n\r\nHace poco tuve que realizar una maquetación de una página simple con HAML y SASS. Con Sass ya estaba acostumbrado a trabajar. Creación y uso de funciones (mixins), declaración de variables, anidamiento (nesting) de selectores, con un poco de compass para hacer el trabajo más rápido y limpio. Comparto aquí los dos vídeos que grabé para que se viera el proceso seguido para la maquetación. El primero se trata de incluir el contenido con Haml. El segundo para la maquetación con Sass y Compass."},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Menú apple con css\'\r\ndate: Sat, 15 Feb 2014 22:17:54 +0000\r\npublished: true\r\ntags: Css3,Sass\r\n---\r\n\r\n**Menú apple con css**, construido usando **Sass**. En este artículo quería compartir como he reproducido el menú de navegación de la web de Apple, sin usar imágenes, sólo con degradados de css3 y jugando con los bordes para crear los diferentes botones. Se obtiene también las sombras y los bordes redondeados. El aspecto que no he tratado de reproducir ha sido el último botón, el de la búsqueda. Para realizar el menú he usado **SASS** para ahorrar un poco de tiempo, y para que cada cambio en colores o degradados suponga cambiar menos información en la hoja de estilos, ya que con sass se pueden usar variables, funciones y otras muchas cosas. Aquí se puede ver la hoja de estilos **.scss**\r\n\r\n```\r\n@import "compass";\r\n@mixin shadow_nav($left, $top, $blur, $color){\r\n  box-shadow:$left $top $blur $color;\r\n}\r\n@mixin borde_interior($color,$transparencia){\r\n  border-right:1px solid rgba($color,$color,$color,$transparencia);\r\n  border-left:1px solid rgba($color,$color,$color,$transparencia);\r\n}\r\n\r\n*{\r\n\tmargin:0;\r\n\tpadding:0;\t\r\n}\r\nbody {\r\n\tfont-family: \'Dosis\', sans-serif;\r\n\tfont-size:1em;\r\n\tmargin:30px;\r\n\tbackground:rgba(249,238,223,0.1) url(\'../img/noise.png\') repeat;\r\n}\r\n\r\na, a:visited {\r\n\tcolor:#fff;\r\n\ttext-shadow:-1px -1px 3px #333;\r\n\ttext-decoration:none;\r\n}\r\nnav ul {\r\n\tdisplay:inline-block;\r\n\twidth:auto;\r\n\tbackground-color:rgba(100,100,100,0.95);\r\n\tborder-top:1px solid rgba(100,100,100,0.9);\r\n\tborder-bottom:1px solid rgba(100,100,100,1);\r\n\tborder-radius:5px;\r\n\t@include shadow_nav(1px,1px,3px,rgba(100,100,100,.8));\r\n}\r\nnav ul li {\r\n\twidth:104px;\r\n\tfloat:left;\r\n\tlist-style:none;\r\n\tmargin-right: 1px;\r\n\t@include borde_interior(130,0.99);\r\n  text-align:center;\r\n}\r\nnav ul li:first-child, nav ul li:first-child a{\r\n\tborder-left:0;\r\n\tborder-top-left-radius:5px;\r\n\tborder-bottom-left-radius:5px;\r\n}\r\nnav ul li:last-child, nav ul li:last-child a{\r\n\tborder-right:0;\r\n\tborder-top-right-radius:5px;\r\n\tborder-bottom-right-radius:5px;\r\n}\r\nnav ul li a, .explorer a {\r\n\tdisplay: block;\r\n\tpadding:8px 25px;\r\n\tbackground-color: rgb(138,138,138);\r\n\t@include filter-gradient(#8a8a8a, #767676, vertical);\r\n\t$experimental-support-for-svg: true;\r\n\t@include background-image(linear-gradient(top,  rgb(138,138,138) 0%,rgb(138,138,138) 3%,rgb(120,120,120) 24%,rgb(111,111,111) 48%,rgb(93,93,93) 52%,rgb(97,97,97) 73%,rgb(109,109,109) 91%,rgb(118,118,118) 100%));\r\n}\r\nnav ul li:hover a{\r\n\tbackground: rgb(60,60,60);\r\n\tbackground: -moz-radial-gradient(center, ellipse cover,  rgb(60,60,60) 0%, rgb(60,60,60) 20%, rgb(71,71,71) 64%, rgb(102,102,102) 100%);\r\n\tbackground: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgb(60,60,60)), color-stop(20%,rgb(60,60,60)), color-stop(64%,rgb(71,71,71)), color-stop(100%,rgb(102,102,102)));\r\n\tbackground: -webkit-radial-gradient(center, ellipse cover,  rgb(60,60,60) 0%,rgb(60,60,60) 20%,rgb(71,71,71) 64%,rgb(102,102,102) 100%);\r\n\tbackground: -o-radial-gradient(center, ellipse cover,  rgb(60,60,60) 0%,rgb(60,60,60) 20%,rgb(71,71,71) 64%,rgb(102,102,102) 100%);\r\n\tbackground: -ms-radial-gradient(center, ellipse cover,  rgb(60,60,60) 0%,rgb(60,60,60) 20%,rgb(71,71,71) 64%,rgb(102,102,102) 100%);\r\n\tbackground: radial-gradient(ellipse at center,  rgb(60,60,60) 0%,rgb(60,60,60) 20%,rgb(71,71,71) 64%,rgb(102,102,102) 100%);\r\n\tfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr=\'#3c3c3c\', endColorstr=\'#666666\',GradientType=1 );\r\n}\r\nnav ul li:hover {\r\n  width:106px;\r\n  border-left:0;\r\n  border-right:0;\r\n}\r\nnav ul li:last-child:hover {\r\n  width:105px;\r\n  border-left:1px;\r\n}\r\nnav ul li:first-child:hover {\r\n  width:105px;\r\n  border-right:1px;\r\n}\r\n```\r\n\r\nAquí el contenido del archivo **.html**\r\n\r\n```\r\n<!doctype html>\r\n<html lang="es">\r\n<head>\r\n\t<meta charset="UTF-8" />\r\n\t<title>Menú apple con css</title>\r\n\t<link href=\'http://fonts.googleapis.com/css?family=Dosis:400,500\' rel=\'stylesheet\' type=\'text/css\'>\r\n\t<link rel="stylesheet" href="../css/style.css" type="text/css" media="screen" title="no title" charset="utf-8"/>\r\n\t\x3c!--\\[if gte IE 9\\]>\r\n\t\t<style type="text/css">\r\n\t\t\t.explorer a { filter: none; }\r\n\t\t</style>\r\n\t<!\\[endif\\]--\x3e\t\r\n</head>\r\n<body>\r\n<div id="contenedor">\r\n\t<nav>\r\n\t\t<ul class="explorer">\r\n\t\t\t<li><a href="#"><img src="img/apple.png" alt="" /></a></li>\r\n\t\t\t<li><a href="#">Store</a></li>\r\n\t\t\t<li><a href="#">Mac</a></li>\r\n\t\t\t<li><a href="#">iPod</a></li>\r\n\t\t\t<li><a href="#">iPhone</a></li>\r\n\t\t\t<li><a href="#">iPad</a></li>\r\n\t\t\t<li><a href="#">iTunes</a></li>\r\n\t\t\t<li><a href="#">Soporte</a></li>\r\n\t\t\t<li><a href="#">Search</a></li>\r\n\t\t</ul>\r\n\t</nav>\r\n</div>\r\n</body>\r\n</html>\r\n```\r\n\r\nMe gustaría destacar la comprobación del navegador del usuario, para saber si usa una versión de internet explorer inferior a la 9, para que pueda visualizarse correctamente. Si quieres descargare el menú y probarlo directamente, puedes hacerlo en el siguiente enlace. [Descargar menú apple con css](https://dl.dropboxusercontent.com/u/12043780/ivanalbizu.eu/menu_apple_con_css.zip "Menú Apple con ccs")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Menú contextual en Android\'\r\ndate: Fri, 28 Nov 2014 20:28:58 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nEl menú opciones en Android y con Eclipse se puede crear directamente al generar un Activity usando la plantilla "Blank Activity". En esta publicación he querido construirlo paso a paso, creando todas las líneas de código. Se trabajará sobre dos archivos:\r\n\r\n*   MainActivity.java\r\n*   options_menu.xml\r\n\r\nEl archivo "options_menu.xml" se creará dentro de una carpeta que tendremos que crear llamada "menu", que estará dentro de la carpeta "res". La interfaz gráfica o mediante código XML directamente, se creará tres ítems.\r\n\r\n*   El atributo android:id contendrá la referencia del ítem.\r\n*   El atributo android:icon captura la imagen del atributo.\r\n*   El atributo android:orderInCategory permite mostrar el orden de aparición de los ítems.\r\n*   El atributo android:showAsAction sirve para especificar que y como queremos mostrar los ítems.\r\n*   El atributo android:title se usará para especificar el texto del ítem.\r\n\r\nEl código del XML puede ser:\r\n\r\n```\r\n<?xml version="1.0" encoding="utf-8"?>\r\n<menu xmlns:android="http://schemas.android.com/apk/res/android" >\r\n\r\n\t<item\r\n\t\tandroid:id="@+id/optionAdd"\r\n\t\tandroid:icon="@drawable/ic_add"\r\n\t\tandroid:orderInCategory="1"\r\n\t\tandroid:showAsAction="ifRoom"\r\n\t\tandroid:title="@string/add">\r\n\t</item>\r\n\t<item\r\n\t\tandroid:id="@+id/optionDelete"\r\n\t\tandroid:icon="@drawable/ic_delete"\r\n\t\tandroid:orderInCategory="2"\r\n\t\tandroid:showAsAction="ifRoom"\r\n\t\tandroid:title="@string/delete">\r\n\t</item>\r\n\t<item\r\n\t\tandroid:id="@+id/optionEdit"\r\n\t\tandroid:icon="@drawable/ic_edit"\r\n\t\tandroid:orderInCategory="3"\r\n\t\tandroid:showAsAction="ifRoom"\r\n\t\tandroid:title="@string/edit">\r\n\t</item>\r\n\r\n</menu>\r\n```\r\n\r\nEn el archivo "MainActivity.java" se sobre escriben dos métodos para crear y dar funcionalidad el menú, **public boolean onCreateOptionsMenu(Menu menu)** y **public boolean onOptionsItemSelected(MenuItem item)**. En el primero se llama y se muestra el menú definido en el XML. Y en el segundo se la da funcionalidad a los ítems, detectando sobre que ítem se hizo "click". El código de la clase es el siguiente:\r\n\r\n```\r\npublic class MainActivity extends Activity {\r\n\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_main);\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic boolean onCreateOptionsMenu(Menu menu) {\r\n\t\tMenuInflater inflater = getMenuInflater();\r\n\t\tinflater.inflate(R.menu.options_menu, menu);\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic boolean onOptionsItemSelected(MenuItem item) {\r\n\t\tswitch (item.getItemId()) {\r\n\t\tcase R.id.optionAdd:\r\n\t\t\tclickAdd();\r\n\t\t\tbreak;\r\n\t\tcase R.id.optionDelete:\r\n\t\t\tclickDelete();\r\n\t\t\tbreak;\r\n\t\tcase R.id.optionEdit:\r\n\t\t\tclickEdit();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn super.onOptionsItemSelected(item);\r\n\t}\r\n\r\n\tprivate void clickEdit() {\r\n\t\tToast.makeText(this, "Ha seleccionado Editar", Toast.LENGTH_SHORT).show();\r\n\t}\r\n\r\n\tprivate void clickDelete() {\r\n\t\tToast.makeText(this, "Ha seleccionado Delete", Toast.LENGTH_SHORT).show();\r\n\t}\r\n\r\n\tprivate void clickAdd() {\r\n\t\tToast.makeText(this, "Ha seleccionado Añadir", Toast.LENGTH_SHORT).show();\r\n\t}\r\n}\r\n```\r\n\r\nHay tres métodos más que sólo son usados para mostrar un Toast. Se puede ver el vídeo: Se puede [descargar el código Menú contextual en Android.](https://db.tt/wemwubDo "Menú opciones en Android")'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Obtener diferentes url de imagen destacada de Wordpress'\r\ndate: Thu, 09 Jun 2016 19:46:35 +0000\r\npublished: true\r\ntags: Php,Pildoritas,Wordpress\r\n---\r\n\r\nEn esta entrada explicaré como obtener diferentes url de imagen destacada de Wordpress. Al añadir  una imagen destacada a una entrada de Wordpress podemos acceder a la misma mediante la función [the_post_thumbnail ( string|array $size = 'post-thumbnail', string|array $attr = '' )](https://developer.wordpress.org/reference/functions/the_post_thumbnail/) en la que se pueden especificar atributos y tamaño de imagen a obtener. En un proyecto de Ionic que estoy realizando me interesaba crear una función en Wordpress que me devolviera diferentes tamaños de imagen para cada tipo de entrada.\r\n\r\n```\r\nfunction ng_get_thumbnail_url( $post ) {\r\n\t// Default images size to Return\r\n\t$sizes = ['thumbnail', 'medium'];\r\n\t$imgArray = [];\r\n\r\n\tif ( has_post_thumbnail( $post['id'] ) ){\r\n\t\t$post_type = get_post_type();\r\n\r\n\t\tswitch ( $post_type ) {\r\n\t\t\tcase 'team':\r\n\t\t\t\t// Add new images size for post type 'team'\r\n\t\t\t\t$sizes['ionic-team'] = 'ionic-team';\r\n\t\t\t\t// Iterate over selected sizes\r\n\t\t\t\tforeach ($sizes as $size) {\r\n\t\t\t\t\t//wp_get_attachment_image_src(id, size)[0] -> with [0] get URL from attachment\r\n\t\t\t\t\t$imgArray[$size] = wp_get_attachment_image_src( get_post_thumbnail_id( $post['id'] ), $size )[0];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'work':\r\n\t\t\t\t// Add new images size for post type 'work'\r\n\t\t\t\t$sizes['ionic-work'] = 'ionic-work';\r\n\t\t\t\tforeach ($sizes as $size) {\r\n\t\t\t\t\t$imgArray[$size] = wp_get_attachment_image_src( get_post_thumbnail_id( $post['id'] ), $size )[0];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tforeach ($sizes as $size) {\r\n\t\t\t\t\t$imgArray[$size] = wp_get_attachment_image_src( get_post_thumbnail_id( $post['id'] ), $size )[0];\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn $imgArray;\r\n\t}else{\r\n\t\treturn false;\r\n\t}\r\n}\r\n```\r\n\r\nPor defecto se añaden en un array dos tamaños de imágenes que vienen incluidas en Wordpress: 'thumbnail' y 'medium'. Se comprueba que la entrada tenga Imagen Destacada y si es así, se obtiene el tipo de entrada que se trata, para añadir nuevos tamaños personalizados. Con la función _wp_get_attachment_image_src_ de Wordpress dentro de un _foreach_ se obtiene las Urls de cada imagen con sus diferentes tamaños, que será almacenada en un array asociativo que finalmente será devuelto. Un ejemplo de uso de esta función puede ser:\r\n\r\n```\r\nadd_action( 'rest_api_init', 'ng_thumbnail_url' );\r\nfunction ng_thumbnail_url() {\r\n  register_rest_field( 'team',\r\n      'url_team_thumbnail',\r\n      array(\r\n          'get_callback'    => 'ng_get_thumbnail_url',\r\n          'update_callback' => null,\r\n          'schema'          => null,\r\n      )\r\n  );\r\n  register_rest_field( 'work',\r\n      'url_work_thumbnail',\r\n      array(\r\n          'get_callback'    => 'ng_get_thumbnail_url',\r\n          'update_callback' => null,\r\n          'schema'          => null,\r\n      )\r\n  );\r\n}\r\n```\r\n\r\nCon el código anterior y con el plugin Wordpress Rest Api activado hacemos uso de la función anterior pasándola como callback. Si accedemos a la url http://localhost/nombre_instalacion/wp-json/wp/v2/team/ obtendremos las rutas a las imágenes que hallamos añadido.   ![Thumbnail url](storage/wp-content/uploads/2016/06/thumbs_url.png)"},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Parsear XML usando Java Stax Cursor\'\r\ndate: Sat, 15 Nov 2014 10:23:28 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nEn esta entrada voy a realizar un sencillo ejemplo para parsear un archivo XML usando Java Stax. El archivo a parsear contiene información meteorológica de la ciudad de Sevilla. Voy a obtener los días en los que la temperatura máxima fuese mayor a una temperatura "X". El procedimiento para llevarlo a cabo es:\r\n\r\n1.  Llegar a la etiqueta de apertura día y obtener la fecha.\r\n2.  Obtener la _etiqueta máxima_ que corresponde a la _etiqueta temperatura._\r\n3.  Al llegar al cierre de la etiqueta día, añado el día a la lista.\r\n4.  A partir de la lista generada de días, construyo método para que a partir de la lista y de una temperatura se muestren los días filtrados.\r\n\r\nUn fragmento del archivo XML es el siguiente:\r\n\r\n```\r\n<?xml version="1.0" encoding="ISO-8859-15"?>\r\n<root id="41091" version="1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.aemet.es/xsd/localidades.xsd">\r\n\t<origen>\r\n\t\t<productor>AEMET</productor>\r\n\t\t<web>http://www.aemet.es</web>\r\n\t\t<enlace>http://www.aemet.es/es/eltiempo/prediccion/municipios/sevilla-id41091</enlace>\r\n\t\t<language>es</language>\r\n\t\t<copyright>© AEMET. Autorizado el uso de la información y su reproducción citando a AEMET como autora de la misma.</copyright>\r\n\t\t<nota_legal>http://www.aemet.es/es/nota_legal</nota_legal>\r\n\t</origen>\r\n\t<elaborado>2014-11-06T11:41:02</elaborado>\r\n\t<nombre>Sevilla</nombre>\r\n\t<provincia>Sevilla</provincia>\r\n\t<prediccion>\r\n\t\t<dia fecha="2014-11-10">\r\n\t\t\t<prob_precipitacion>25</prob_precipitacion>\r\n\t\t\t<cota_nieve_prov/>\r\n\t\t\t<estado_cielo descripcion="Intervalos nubosos">13</estado_cielo>\r\n\t\t\t<viento>\r\n\t\t\t\t<direccion>C</direccion>\r\n\t\t\t\t<velocidad>0</velocidad>\r\n\t\t\t</viento>\r\n\t\t\t<racha_max/>\r\n\t\t\t<temperatura>\r\n\t\t\t\t<maxima>17</maxima>\r\n\t\t\t\t<minima>7</minima>\r\n\t\t\t</temperatura>\r\n\t\t\t<sens_termica>\r\n\t\t\t\t<maxima>17</maxima>\r\n\t\t\t\t<minima>6</minima>\r\n\t\t\t</sens_termica>\r\n\t\t\t<humedad_relativa>\r\n\t\t\t\t<maxima>85</maxima>\r\n\t\t\t\t<minima>50</minima>\r\n\t\t\t</humedad_relativa>\r\n\t\t\t<uv_max>3</uv_max>\r\n\t\t</dia>\r\n\t\t<dia fecha="2014-11-11">\r\n\t\t\t<prob_precipitacion>100</prob_precipitacion>\r\n\t\t\t<cota_nieve_prov/>\r\n\t\t\t<estado_cielo descripcion="Cubierto con lluvia">26</estado_cielo>\r\n\t\t\t<viento>\r\n\t\t\t\t<direccion>SO</direccion>\r\n\t\t\t\t<velocidad>10</velocidad>\r\n\t\t\t</viento>\r\n\t\t\t<racha_max/>\r\n\t\t\t<temperatura>\r\n\t\t\t\t<maxima>18</maxima>\r\n\t\t\t\t<minima>10</minima>\r\n\t\t\t</temperatura>\r\n\t\t\t<sens_termica>\r\n\t\t\t\t<maxima>18</maxima>\r\n\t\t\t\t<minima>10</minima>\r\n\t\t\t</sens_termica>\r\n\t\t\t<humedad_relativa>\r\n\t\t\t\t<maxima>95</maxima>\r\n\t\t\t\t<minima>80</minima>\r\n\t\t\t</humedad_relativa>\r\n\t\t</dia>\r\n\t</prediccion>\r\n</root>\r\n```\r\n\r\nLa clase modelo contiene dos atributos: private String dia y private int temperatura. (Para hacerlo corto, no formateo la fecha).\r\n\r\n```\r\npublic class Pojo {\r\n\r\n\tprivate String dia;\r\n\tprivate int temperatura;\r\n\t\r\n\tpublic Pojo() {}\r\n\tpublic Pojo(String dia, int temperatura) {\r\n\t\tthis.dia = dia;\r\n\t\tthis.temperatura = temperatura;\r\n\t}\r\n\t\r\n\tpublic String getDia() {\r\n\t\treturn dia;\r\n\t}\r\n\tpublic void setDia(String dia) {\r\n\t\tthis.dia = dia;\r\n\t}\r\n\tpublic int getTemperatura() {\r\n\t\treturn temperatura;\r\n\t}\r\n\tpublic void setTemperatura(int temperatura) {\r\n\t\tthis.temperatura = temperatura;\r\n\t}\r\n\t\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn "Dia: " +getDia()+" Temperatura máxima: " +getTemperatura();\r\n\t}\r\n}\r\n```\r\n\r\nEl archivo Test.java ejecuta el programa. Contiene el método main, y dos métodos más. Uno genera una lista de fechas y sus tempearturas máximas de todos los días. El otro método, a partir de una lista de días obtiene aquellos días que cumplan la condición de temperatura máxima. El código es sencillo y está comentado, y se puede descargar más abajo.\r\n\r\n```\r\npublic class Test {\r\n\r\n\t/**\r\n\t * @param args\r\n\t */\r\n\tpublic static void main(String[] args) {\r\n\t\tString fileName;\r\n\t\tfileName = "src/inventadoAemet/localidad_41091.xml";\r\n\t\tList<Pojo> dias = parseXML(fileName);\r\n\t\t\r\n\t\tSystem.out.println(dias);\r\n\t\t\r\n\t\tList<Pojo> diasfiltrados = filtroTMax(dias, 21.0);\r\n\t\tSystem.out.println(diasfiltrados);\t\t\r\n\t}\r\n\r\n\tprivate static List<Pojo> parseXML(String fileName) {\r\n\t\t//Se devolverá lista con los días que contenga el XML.\r\n\t\t//Al cerrar etiquetada "día" se añade el objeto a la lista\r\n\t\tList<Pojo> dias = new LinkedList<Pojo>();\r\n\t\t\r\n\t\t//Objeto que se añadirá a la lista.\r\n\t\t//Cada iteración sobre etiqueta de apertura "día" instancia el objeto\r\n\t\tPojo dia = null;\r\n\t\t\r\n\t\t//Variables que almacenan la ruta dentro de la jerarquía de etiquetas\r\n\t\tString path\t\t\t= ""; //Raiz. Se irá variando su contenido\r\n\t\tString pathDia\t\t= "/root/prediccion/dia";\r\n\t\tString pathTemMax\t= "/root/prediccion/dia/temperatura/maxima";\r\n\t\t\r\n\t\tXMLInputFactory xmlif = XMLInputFactory.newInstance();\r\n\t\ttry {\r\n\t\t\tXMLStreamReader xmlsr = xmlif.createXMLStreamReader(new FileInputStream(fileName));\r\n\t\t\tint event = xmlsr.getEventType();\r\n\t\t\t\r\n\t\t\twhile (xmlsr.hasNext()) {\r\n\t\t\t\tevent = xmlsr.next();\r\n\t\t\t\tswitch(event){\r\n\t\t\t\t\t//Se trata de etiqueta de apertura\r\n\t\t\t\t\tcase XMLStreamConstants.START_ELEMENT:\r\n\t\t\t\t\t\t//Añade a Path la etiqueta apertura actual\r\n\t\t\t\t\t\tpath = path +"/"+ xmlsr.getLocalName();\r\n\t\t\t\t\t\t//Si la ruta actual coincide con la Path\r\n\t\t\t\t\t\tif (path.equalsIgnoreCase(pathDia)) {\r\n\t\t\t\t\t\t\tdia = new Pojo();\r\n\t\t\t\t\t\t\t//Al objeto se añade atributo de la posición "0"\r\n\t\t\t\t\t\t\tdia.setDia(xmlsr.getAttributeValue(0));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t//Se trata de contenido de una etiqueta\r\n\t\t\t\t\tcase XMLStreamConstants.CHARACTERS:\r\n\t\t\t\t\t\t//Si la ruta actual coincide con la Path\r\n\t\t\t\t\t\tif (path.equalsIgnoreCase(pathTemMax))\r\n\t\t\t\t\t\t\tdia.setTemperatura(Integer.parseInt(xmlsr.getText()));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase XMLStreamConstants.END_ELEMENT:\r\n\t\t\t\t\t\t//Si la ruta actual coincide con la Path\r\n\t\t\t\t\t\tif (path.equalsIgnoreCase(pathDia))\r\n\t\t\t\t\t\t\tdias.add(dia);//Se añade el día creado a la lista\r\n\t\t\t\t\t\t//Elimina a Path la etiqueta cierre actual\r\n\t\t\t\t\t\tpath = path.substring(0, path.lastIndexOf("/"));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (XMLStreamException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\t//Devuelve la lista\r\n\t\treturn dias;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Devuelve una lista de objetos Días (Pojo) en los que la temperatura\r\n\t * temperatura máxima sea mayor a la indicada por parámetro\r\n\t * @param dias\t\tLista de todos los días que contiene el XML\r\n\t * @param limite\tTemperatura a partir de la que se desea filtrar\r\n\t * @return\t\t\tLista de días que complen condición de temperatura\r\n\t * \t\t\t\t\tmáxima mayor a la indicada\r\n\t */\r\n\tpublic static List<Pojo> filtroTMax(List<Pojo> dias, double limite){\r\n\t\tList<Pojo> filtroTempMax = new LinkedList<Pojo>();\r\n\r\n\t\tfor (Pojo pojo : dias) {\r\n\t\t\tif (pojo.getTemperatura() > limite)\r\n\t\t\t\tfiltroTempMax.add(pojo);\r\n\t\t}\r\n\t\treturn filtroTempMax;\r\n\t}\r\n}\r\n```\r\n\r\nEl vídeo completo: El código para descargar [Xml parseado con Java Stax](https://db.tt/SMYeYC6o "Código Xml parseado con Java Stax")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Parsear XML usando Java Stax Event\'\r\ndate: Wed, 19 Nov 2014 17:17:33 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nEn mi último post realicé un [parseo de XML usando Java Stax Cursor](http://ivanalbizu.eu/parsear-xml-usando-java-stax-cursor/ "Enlace a entrada: parseo de XML usando Java Stax Cursor"), en esta ocasión voy a realizar el mismo ejemplo pero usando Java Stax Event. Sabiendo bien cómo está estructurado el XML, marcamos los pasos para obtener la temperatura máxima y la fecha del día en cuestión son;\r\n\r\n1.  Instanciar día llegando a tagDia\r\n2.  Añadir día mediante dentro de tagDia usando atrDia\r\n3.  Añadir temperatura máxima mediante path: /root/prediccion/dia/temperatura/maxima\r\n4.  Añadir POJO a lista días mediante tagDia\r\n\r\nNecesitaremos entonces las siguientes variables:\r\n\r\n```\r\nString path = "";\r\nString pathTemMax = "/root/prediccion/dia/temperatura/maxima";\r\nString tagDia = "dia";\r\nString atrDia = "fecha";\r\n```\r\n\r\nEl código completo está comentado, y es el siguiente:\r\n\r\n```\r\npublic class Test {\r\n\r\n\t/**\r\n\t * @param args\r\n\t */\r\n\tpublic static void main(String[] args) {\r\n\t\tString fileName;\r\n\t\tfileName = "src/inventadoAemet/localidad_41091.xml";\r\n\t\tList<Pojo> dias = parseXML(fileName);\r\n\t\tList<Pojo> diasFiltrados = filtroTMax(dias, 20.0);\r\n\t\t\r\n\t\tSystem.out.println(dias);\r\n\t\tSystem.out.println(diasFiltrados);\r\n\t}\r\n\t\t\r\n\tprivate static List<Pojo> parseXML(String fileName) {\r\n\t\tList<Pojo> dias = new LinkedList<Pojo>();\r\n\t\tPojo dia = null;\r\n\t\t\r\n\t\t//Localizar elementos\r\n\t\tString path\t\t\t= "";\r\n\t\tString pathTemMax\t= "/root/prediccion/dia/temperatura/maxima";\r\n\t\tString tagDia\t\t= "dia";\r\n\t\tString atrDia\t\t= "fecha";\r\n\t\t\r\n\t\tXMLInputFactory xmlInputFactory = XMLInputFactory.newInstance();\r\n\t\ttry {\r\n\t\t\tInputStream in  = new FileInputStream(fileName);\r\n\t\t\tXMLEventReader eventReader = xmlInputFactory.createXMLEventReader(in);\r\n\t\t\twhile (eventReader.hasNext()) {\r\n\t\t\t\tXMLEvent event = eventReader.nextEvent();\r\n\t\t\t\t\r\n\t\t\t\tif (event.isStartElement()) {\r\n\t\t\t\t\tStartElement startElement = event.asStartElement();\r\n\t\t\t\t\tpath = path +"/"+ startElement.getName().getLocalPart();\r\n\r\n\t\t\t\t\tif (startElement.getName().getLocalPart().equalsIgnoreCase(tagDia)) {\r\n\t\t\t\t\t\t//Instanciar dia\r\n\t\t\t\t\t\tdia = new Pojo();\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//Añadir dia usando atrDia\r\n\t\t\t\t\t\tIterator<Attribute> atributos = startElement.getAttributes();\r\n\t\t\t\t\t\twhile (atributos.hasNext()) {\r\n\t\t\t\t\t\t\tAttribute atributo = atributos.next();\r\n\t\t\t\t\t\t\tif (atributo.getName().toString().equalsIgnoreCase(atrDia)) {\r\n\t\t\t\t\t\t\t\tdia.setDia(atributo.getValue());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Añadir temperatura máxima mediante path: /root/prediccion/dia/temperatura/maxima\r\n\t\t\t\t\tif (event.isStartElement()) {\r\n\t\t\t\t\t\tevent = eventReader.nextEvent();\r\n\t\t\t\t\t\tif (path.equalsIgnoreCase(pathTemMax)) {\r\n\t\t\t\t\t\t\tSystem.out.println("traza");\r\n\t\t\t\t\t\t\tdia.setTemperatura(Integer.parseInt(event.asCharacters().getData()));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (event.isEndElement()) {\r\n\t\t\t\t\tEndElement endElement = event.asEndElement();\r\n\t\t\t\t\t\r\n\t\t\t\t\t//Añadir POJO a lista días mediante tagDia\r\n\t\t\t\t\tif (endElement.getName().getLocalPart().equalsIgnoreCase(tagDia))\r\n\t\t\t\t\t\tdias.add(dia);\r\n\r\n\t\t\t\t\t//Actualizar PATH \r\n\t\t\t\t\tpath = path.substring(0,path.lastIndexOf("/"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} catch (FileNotFoundException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t} catch (XMLStreamException e) {\r\n\t\t\t// TODO Auto-generated catch block\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t\treturn dias;\r\n\t}\r\n\r\n\t/**\r\n\t * Devuelve una lista de objetos Días (Pojo) en los que la temperatura\r\n\t * temperatura máxima sea mayor a la indicada por parámetro\r\n\t * @param dias\t\tLista de todos los días que contiene el XML\r\n\t * @param limite\tTemperatura a partir de la que se desea filtrar\r\n\t * @return\t\t\tLista de días que complen condición de temperatura\r\n\t * \t\t\t\t\tmáxima mayor a la indicada\r\n\t */\r\n\tpublic static List<Pojo> filtroTMax(List<Pojo> dias, double limite){\r\n\t\tList<Pojo> filtroTempMax = new LinkedList<Pojo>();\r\n\r\n\t\tfor (Pojo pojo : dias) {\r\n\t\t\tif (pojo.getTemperatura() > limite)\r\n\t\t\t\tfiltroTempMax.add(pojo);\r\n\t\t}\r\n\t\treturn filtroTempMax;\r\n\t}\r\n}\r\n```\r\n\r\nCómo se puede ver ha método para realizar el filtro de temperaturas. No he incluido el fichero XML, puede verse en el enlace al otro que post que publiqué [http://ivanalbizu.eu/parsear-xml-usando-java-stax-cursor/](http://ivanalbizu.eu/parsear-xml-usando-java-stax-cursor/ "http://ivanalbizu.eu/parsear-xml-usando-java-stax-cursor/") Enlace de descarga del [código Parsear XML con StAX Event](https://db.tt/1Rnb9kID "Parsear XML con StAX event")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Programa Java gestionar alumnos\'\r\ndate: Tue, 25 Feb 2014 21:07:50 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nEl programa java sirve para gestionar el registro de alumnos de una clase. Las funciones habilitadas al programa son:\r\n\r\n*   Registrar los alumnos de la clase\r\n*   Mostrar todos los alumnos\r\n*   Mostrar un alumno\r\n*   Modificar un alumno\r\n*   Borrar un alumno\r\n\r\nEl programa tiene tres archivos:\r\n\r\n*   Test.java\r\n*   Alumno.java\r\n*   Gestion.java\r\n\r\n**Test.java** es el principal archivo del programa, el que carga la aplicación\r\n\r\n```\r\npackage coleccionesEjerc07;\r\nimport java.util.*;\r\n\r\nimport leer.*;\r\npublic class Test {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tSystem.out.println("Bienvenido al programa ADMINISTRADOR DE ALUMNOS n"\r\n\t\t\t\t+ "El programa permite: n"\r\n\t\t\t\t+ "tA.- Registrar los alumnos de la clase n"\r\n\t\t\t\t+ "tB.- Mostrar todos los alumnos n"\r\n\t\t\t\t+ "tC.- Mostrar un alumno n"\r\n\t\t\t\t+ "tD.- Modificar un alumno n"\r\n\t\t\t\t+ "tE.- Borrar un alumno n-------nn");\r\n\r\n\t\tboolean repetir = true;\r\n\t\tint cantidadAlumnosInicial=0, posicionAlumno=0;\r\n\t\tint aux = 1;\r\n\r\n\t\tGestion gestion = new Gestion();\r\n\t\tSystem.out.println("¿Con cuántos alumnos desea iniciar el programa?");\r\n\t\tcantidadAlumnosInicial = Leer.datoInt();\r\n\t\tList<Alumno> listaAlumnos = new ArrayList<Alumno>(cantidadAlumnosInicial);\r\n\r\n\t\tfor (int i = 0; i < cantidadAlumnosInicial; i++) {\r\n\t\t\tlistaAlumnos.add(gestion.anadirAlumno());\r\n\t\t}\r\n\r\n\t\tdo {\r\n\t\t\tgestion.mostrarMenu();\r\n\t\t\tswitch (Leer.datoInt()) {\r\n\t\t\t\tcase 1: //Añadir alumnos\r\n\t\t\t\t\tlistaAlumnos.add(gestion.anadirAlumno());\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2: //Mostrar todos los alumnos\r\n\t\t\t\t\tfor (Alumno alumno : listaAlumnos) {\r\n\t\t\t\t\t\tSystem.out.println(alumno.toString());\r\n\t\t\t\t\t\tSystem.out.println("------");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3: //Mostrar un alumno\r\n\t\t\t\t\tSystem.out.println("¿Qué alumno desea mostrar?");\r\n\t\t\t\t\taux = 1;\r\n\t\t\t\t\tfor (Alumno alumno : listaAlumnos) {\r\n\t\t\t\t\t\tSystem.out.println(aux+ ".- " +alumno.getNombre());\r\n\t\t\t\t\t\taux++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tposicionAlumno = Leer.datoInt();\r\n\t\t\t\t\tSystem.out.println(gestion.obtenerAlumno(listaAlumnos, posicionAlumno));\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 4: //Modificar alumnos\r\n\t\t\t\t\tSystem.out.println("¿Qué alumno desea modificar?");\r\n\t\t\t\t\taux = 1;\r\n\t\t\t\t\tfor (Alumno alumno : listaAlumnos) {\r\n\t\t\t\t\t\tSystem.out.println(aux+ ".- " + alumno.getNombre());\r\n\t\t\t\t\t\taux++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tposicionAlumno = Leer.datoInt();\r\n\t\t\t\t\tgestion.modificarAlumno(listaAlumnos, posicionAlumno);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 5: //Eliminar alumnos\r\n\t\t\t\t\tSystem.out.println("¿Qué alumno desea eliminar?");\r\n\t\t\t\t\taux = 1;\r\n\t\t\t\t\tfor (Alumno alumno : listaAlumnos) {\r\n\t\t\t\t\t\tSystem.out.println(aux+ ".- " + alumno.getNombre());\r\n\t\t\t\t\t\taux++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tposicionAlumno = Leer.datoInt();\r\n\t\t\t\t\tgestion.eliminarAlumno(listaAlumnos, posicionAlumno);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: //Salir\r\n\t\t\t\t\trepetir = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t} while (repetir);\r\n\r\n\t\tSystem.out.println("---- Gracias por usar la aplicación ----");\r\n\t}\r\n\r\n}\r\n```\r\n\r\n**Alumno.java** configura las características básicas de un alumno.\r\n\r\n```\r\npackage coleccionesEjerc07;\r\n\r\npublic class Alumno {\r\n\r\n\t//Attributes\r\n\tprivate String nombre;\r\n\tprivate String apellidos;\r\n\tprivate int edad;\r\n\r\n\t//Constructors\r\n\tpublic Alumno() { }\r\n\tpublic Alumno(String nombre, String apellidos, int edad) {\r\n\t\tthis.nombre\t\t= nombre;\r\n\t\tthis.apellidos\t= apellidos;\r\n\t\tthis.edad\t\t= edad;\r\n\t}\r\n\r\n\t//Methods\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn\t"Nombre: t"\t+this.nombre+\t\t"n"+\r\n\t\t\t\t"Apellidos: t"\t+this.apellidos+\t"n"+\r\n\t\t\t\t"Edad: tt"\t+this.edad+\t\t\t"n";\r\n\t}\r\n\r\n\t//Gets and Sets\r\n\tpublic String getNombre() {\r\n\t\treturn nombre;\r\n\t}\r\n\tpublic void setNombre(String nombre) {\r\n\t\tthis.nombre = nombre;\r\n\t}\r\n\tpublic String getApellidos() {\r\n\t\treturn apellidos;\r\n\t}\r\n\tpublic void setApellidos(String apellidos) {\r\n\t\tthis.apellidos = apellidos;\r\n\t}\r\n\tpublic int getEdad() {\r\n\t\treturn edad;\r\n\t}\r\n\tpublic void setEdad(int edad) {\r\n\t\tthis.edad = edad;\r\n\t}\r\n\r\n}\r\n```\r\n\r\n**Gestion.java** realiza las operaciones propias del programa.\r\n\r\n```\r\npackage coleccionesEjerc07;\r\nimport java.util.List;\r\n\r\nimport leer.*;\r\npublic class Gestion {\r\n\r\n\t/**\r\n\t * Muestra el menú principal de las opciones de la aplicación\r\n\t */\r\n\tpublic void mostrarMenu(){\r\n\t\tSystem.out.println("n------nElija la opción que desea: n"\r\n\t\t\t\t+ "1.- Añadir alumnos n"\r\n\t\t\t\t+ "2.- Mostrar todos los alumnos n"\r\n\t\t\t\t+ "3.- Mostrar un alumno n"\r\n\t\t\t\t+ "4.- Modificar un alumno n"\r\n\t\t\t\t+ "5.- Borrar un alumno n"\r\n\t\t\t\t+ "OTRO NÚMERO --\x3e Salir");\r\n\t}\r\n\r\n\t/**\r\n\t * Muestra menú secundario perteneciente a la utilidad de edición de registros (Alumnos)\r\n\t * @return\tDevuelve entero válido con la opción seleccionada\r\n\t */\r\n\tpublic int menuEditar(){\r\n\t\tint eleccion = 0;\r\n\t\tdo {\r\n\t\t\tSystem.out.println("n------nElija que desea editar: n"\r\n\t\t\t\t\t+ "t1.- Nombre n"\r\n\t\t\t\t\t+ "t2.- Apellidos n"\r\n\t\t\t\t\t+ "t3.- Edad n");\r\n\r\n\t\t\teleccion = Leer.datoInt();\r\n\r\n\t\t} while (eleccion < 0 || eleccion > 3);\r\n\t\treturn eleccion;\r\n\t}\r\n\r\n\t/**\r\n\t * Añadir nuevos registros (Alumnos)\r\n\t * @return\tDevuelve un nuevo objeto alumno\r\n\t */\r\n\tpublic Alumno anadirAlumno(){\r\n\t\tSystem.out.println("Introduzca nombre");\tString nom\t= \tLeer.dato();\r\n\t\tSystem.out.println("Introduzca apellidos");\tString ape\t=\tLeer.dato();\r\n\t\tSystem.out.println("Introduzca edad");\t\tint edad\t=\tLeer.datoInt();\r\n\r\n\t\tAlumno alum = new Alumno(nom, ape, edad);\r\n\r\n\t\treturn alum;\r\n\t}\r\n\r\n\t/**\r\n\t * Comprueba que el usuario ha introducido un objeto (Alumno) válido y existente en la colección de Alumnos\r\n\t * @param listaAlumnos\t\tColección (array) de los alumnos existentes\r\n\t * @param posicionAlumno\tPosición de un objeto Alumno, introducida por el usuario, dentro la colección\r\n\t * @return\t\t\t\t\tBooleano que indica si existe dicho objeto\r\n\t */\r\n\tpublic boolean noVacio(List<Alumno> listaAlumnos, int posicionAlumno){\r\n\t\tboolean existeElemento = false;\r\n\t\tif (listaAlumnos.size() < posicionAlumno)\texisteElemento = true;\r\n\r\n\t\treturn existeElemento;\r\n\t}\r\n\r\n\t/**\r\n\t * Obtiene un alumno indicado por la posición que ocupa en la colección\r\n\t * @param listaAlumnos\t\tColección (array) de los alumnos existentes\r\n\t * @param posicionAlumno\tPosición de un objeto Alumno, introducida por el usuario, dentro la colección\r\n\t * @return\t\t\t\t\tDevuelve un nuevo objeto alumno indicado por el usuario por su posición\r\n\t */\r\n\tpublic Alumno obtenerAlumno(List<Alumno> listaAlumnos, int posicionAlumno){\r\n\t\t//Llamada al método booleano "noVacio". Si no es válida la posición, no se continua\r\n\t\twhile (this.noVacio(listaAlumnos, posicionAlumno)) {\r\n\t\t\tSystem.out.println("La posición elegida no existe. nPor favor, introduzca otra");\r\n\t\t\t//Se solicita nueva posición\r\n\t\t\tposicionAlumno = Leer.datoInt();\r\n\t\t}\r\n\t\t//Devuelve el objeto alumno\r\n\t\treturn listaAlumnos.get(posicionAlumno-1);\r\n\t}\r\n\r\n\t/**\r\n\t * Elimina un objeto alumno de la colección\r\n\t * @param listaAlumnos\t\tColección (array) de los alumnos existentes\r\n\t * @param posicionAlumno\tPosición de un objeto Alumno, introducida por el usuario, dentro la colección\r\n\t */\r\n\tpublic void eliminarAlumno(List<Alumno> listaAlumnos, int posicionAlumno){\r\n\t\t//Llamada al método "obtenerAlumno" (recuerdo, este método ya se encarga de obtener una posición válida)\r\n\t\t//Se elimina el alumno con el método "remove" de ArrayList\r\n\t\tlistaAlumnos.remove(this.obtenerAlumno(listaAlumnos, posicionAlumno));\r\n\r\n\t\tSystem.out.println("Registro eliminado correctamente");\r\n\t}\r\n\r\n\t/**\r\n\t * Permite editar nombre, apellidos y edad. Individualmente\r\n\t * @param listaAlumnos\t\tColección (array) de los alumnos existentes\r\n\t * @param posicionAlumno\tPosición de un objeto Alumno, introducida por el usuario, dentro la colección\r\n\t */\r\n\tpublic void modificarAlumno(List<Alumno> listaAlumnos, int posicionAlumno){\r\n\t\t//Llamada al método "obtenerAlumno" (recuerdo, este método ya se encarga de obtener una posición válida)\r\n\t\tthis.obtenerAlumno(listaAlumnos, posicionAlumno);\r\n\r\n\t\t//Se presenta el menú de edición. Posibilita: Editar nombre, apellidos y edad.\r\n\t\t//Se modifica con los "set" creados en la clase "Alumno"\r\n\t\tswitch (this.menuEditar()) {\r\n\t\t\tcase 1://Se modifica el nombre\r\n\t\t\t\tSystem.out.println("Introduzca el nuevo nombre");\r\n\t\t\t\tthis.obtenerAlumno(listaAlumnos, posicionAlumno).setNombre(Leer.dato());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2://Se modifican los apellidos\r\n\t\t\t\tSystem.out.println("Introduzca los nuevos apellidos");\r\n\t\t\t\tthis.obtenerAlumno(listaAlumnos, posicionAlumno).setApellidos(Leer.dato());\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3://Se modifica la edad\r\n\t\t\t\tSystem.out.println("Introduzca la nueva edad");\r\n\t\t\t\tthis.obtenerAlumno(listaAlumnos, posicionAlumno).setEdad(Leer.datoInt());\r\n\t\t\t\tbreak;\r\n\t\t\tdefault://No es necesaria esta opción\r\n\t\t\t\tbreak;\r\n\t\t} System.out.println("Modificación realizada correctamente");\r\n\t}\r\n}\r\n```\r\n\r\nLos atributos de _Alumno.java_ son su nombre, sus apellidos y su edad. Contiene los "_gets_" y sets y el método "_toString_", y sus constructores. En _Test.java_ se crea el objeto gestión y la colección (array) para guardar los registros de alumnos. Contiene el menú propiamente dicho, con el que actuará el usuario en la aplicación. Para ello se crea un "_switch_" con cada una de las opciones posibles. La opción "_default_" del switch será la que hará salir del programa. La clase más interesante de todas es la llamada _Gestion.java_, en esta se escriben los métodos que paso a comentar brévemente. (Los propios archivos ya viene comentados con javadoc, así que algunas cosas las obviaré en esta explicación). El primer método, _void mostrarMenu_ carga el menú general de la aplicación. El método _int menuEditar()_ es llamado en el método _void modificarAlumno(...)_, éste último recibirá un número entero, que representa la opción elegida por el usuario. El método añadir _Alumno anadirAlumno()_ devuelve un objeto "_Alumno_". Éste método es llamado desde dos sitios. Una vez en el archivo Test.java para iniciar el programa, y se ejecutará tantas veces como el usuario marque en la opción de insertar X objetos. La otra llamada se realiza dentro del mismo archivo, en la opción de añadir más alumnos, pero en esta ocasión se ejecuta una sóla vez, para repetir esta opción el usuario deberá selecciona nuevamente la opción de añadir nuevo alumno. El método booleano _boolean noVacio(...)_ devuelve si un objeto existe o no dentro dela colección de alumnos. Este método será llamado desde el método _Alumno obtenerAlumno(...)_. El método _Alumno obtenerAlumno(...)_ devolverá un alumno elegido por el usuario. Se apoya en el método _boolean noVacio(...)_, no devolviendo objeto hasta que no se indique una posición válida. El objeto devuelto por este método es usado en los métodos _void eliminarAlumno(...)_ y _void modificarAlumno(...)_. El método _void eliminarAlumno(...)_ captura el objeto devuelto por _Alumno obtenerAlumno(...)_ y lo elimina con el método propio _remove(...)_ de ArrayList El último método, _void modificarAlumno(...)_ recibe los métodos _Alumno obtenerAlumno(...)_ para operar sobre él (modificarlo) y el método _int menuEditar()_ para realizar la operación seleccionada por el usuario, en este caso son: editar nombre, apellidos y edad. Las modificaciones se llevan a cabo mediante los "_set_" adecuados dentro del archivo Alumno.java. Puedes descargar el código para probarlo en el siguiente enlace: [Descargar programa Java - Gestion de alumnos.](https://drive.google.com/open?id=0BzQS5pOyF_HjSFFtWldxQlQ5OFE "Descargar programa Java gestionar Alumnos") Nota final. Este ejercicio se ha desarrollado con fines didácticos,  para adquirir destreza en el manejo de colecciones y métodos, por lo que fuera de este uso -aprendizaje- no tiene mucho sentido.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Programa Java gestionar ascensor\'\r\ndate: Tue, 11 Feb 2014 12:02:12 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nEl siguiente programa java intenta modelar el funcionamiento básico de un ascensor. Para ello se crean dos clases, Principal.java y Ascensor.java. La clase _Ascensor.java_ tiene como **atributos** el "pisco actual", la "planta máxima" y la "planta mínima", así como la cantidad máxima de personas. _Ascensor.java_ tiene el **constructor** vacío y un constructor que recibe un entero de piso actual. Se generan los **gets** y **sets** del atributo "piso actual". Se crean dos **métodos** booleanos de comprobación. Para validar que l número de personas no sea mayor a la permitida y que la planta a la que se desea ir no sea el mismo en el que se está. Se crean dos métodos void para subir y bajar plantas. Y métodos void para mostrar "cerrando" o "abriendo" puertas cuando proceda. Se crea un método principal void denominado "ir", que será el que gestione los desplazamientos y los mensajes. Si se cumple el número máximo de personas, que se encuentra en una planta diferente a la que se desea ir y que la planta elegida esté dentro del rango, en ese caso se produce el movimiento y a cada movimiento se muestra el mensaje "subiendo" o "bajando" según proceda.\r\n\r\n```\r\npackage ejerc01;\r\n\r\nimport leer.*;\r\n\r\npublic class Principal {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tSystem.out.println("Bienvenido al ascensor FOUR ROOMS \\n---------\\n"\r\n\t\t\t\t+ "El programa gestiona el funcionamiento de un ascensor \\n"\r\n\t\t\t\t+ "Se entra en la Planta Baja(0). Tiene 2 sótanos y 6 plantas sobre rasante \\n"\r\n\t\t\t\t+ "El número máximo de personas es 5 \\n---------");\r\n\r\n\t\tboolean repetir = true;\r\n\r\n\t\tint plantaElegida;\r\n\t\tint cantidadPersonas;\r\n\t\tAscensor viaje = new Ascensor();\r\n\r\n\t\tdo {\r\n\t\t\t//Se solicita PLANTA y Nº PERSONAS\r\n\t\t\tSystem.out.println("¿A qué planta quieres ir?");\r\n\t\t\tplantaElegida=Leer.datoInt();\r\n\t\t\tSystem.out.println("¿Cuántas personas soys?");\r\n\t\t\tcantidadPersonas=Leer.datoInt();\r\n\r\n\t\t\t//Se ejecuta la clase Ascensor con losdatos del usuario\r\n\t\t\tviaje.ir(plantaElegida, cantidadPersonas);\r\n\r\n\t\t\t//Se da la posibilidad de usar nuevamente el ascensor\r\n\t\t\tSystem.out.println("\\n\\n------------\\n¿Quiere ir a otra planta? "\r\n\t\t\t\t\t+ "\\nPulse: \\n1 en caso afirmativo \\nCualquier número en caso negativo");\r\n\t\t\tif(Leer.datoInt() != 1){\r\n\t\t\t\trepetir=false;\r\n\t\t\t\tSystem.out.println("Que tenga usted un buen día");\r\n\t\t\t}\r\n\t\t} while(repetir);\r\n\r\n\t}\r\n}\r\n```\r\n\r\nLa primera vez que se ejecute el programa el ascensor se encuentra en la planta 0 (baja). Se crean atributos tipo entero "planta elegida" y "cantidad de personas", y un objeto instanciado (llamado viaje) de tipo Ascensor con con el que operar. Al usuario se le piden dos datos:\r\n\r\n*   Planta a la que desea ir\r\n*   Número de personas\r\n\r\nEstos datos son pasados como parámetros al objeto viaje.\r\n\r\n```\r\npackage ejerc01;\r\n\r\nimport leer.*;\r\n\r\npublic class Principal {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\tSystem.out.println("Bienvenido al ascensor FOUR ROOMS n---------n"\r\n\t\t\t\t+ "El programa gestiona el funcionamiento de un ascensor n"\r\n\t\t\t\t+ "Se entra en la Planta Baja(0). Tiene 2 sótanos y 6 plantas sobre rasante n"\r\n\t\t\t\t+ "El número máximo de personas es 5 n---------");\r\n\r\n\t\tboolean repetir = true;\r\n\r\n\t\tint plantaElegida;\r\n\t\tint cantidadPersonas;\r\n\t\tAscensor viaje = new Ascensor();\r\n\r\n\t\tdo {\r\n\t\t\t//Se solicita PLANTA y Nº PERSONAS\r\n\t\t\tSystem.out.println("¿A qué planta quieres ir?");\r\n\t\t\tplantaElegida=Leer.datoInt();\r\n\t\t\tSystem.out.println("¿Cuántas personas soys?");\r\n\t\t\tcantidadPersonas=Leer.datoInt();\r\n\r\n\t\t\t//Se ejecuta la clase Ascensor con losdatos del usuario\r\n\t\t\tviaje.ir(plantaElegida, cantidadPersonas);\r\n\r\n\t\t\t//Se da la posibilidad de usar nuevamente el ascensor\r\n\t\t\tSystem.out.println("nn------------n¿Quiere ir a otra planta? "\r\n\t\t\t\t\t+ "nPulse: n1 en caso afirmativo nCualquier número en caso negativo");\r\n\t\t\tif(Leer.datoInt() != 1){\r\n\t\t\t\trepetir=false;\r\n\t\t\t\tSystem.out.println("Que tenga usted un buen día");\r\n\t\t\t}\r\n\t\t} while(repetir);\r\n\t}\r\n}\r\n```\r\n\r\nEl programa da la posibilidad de repetirse, utilizando como planta actual la última a la que se ha ido, y el número de personas siempre se solicita.'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Programa java venta de móviles\'\r\ndate: Sun, 02 Mar 2014 22:24:10 +0000\r\npublished: true\r\ntags: Java\r\n---\r\n\r\nPrograma java venta de móviles desarrollado en el curso formativo de aplicaciones para móviles. El programa consta de tres clases: Principal.java, Movil.java y GestionMovil.java. La clase **Principal.java** gestiona el conjunto de la aplicación java. Dicha clase tiene como atributos precio, caja, marca, repetir programa y la opción seleccionada por el usuario.\r\n\r\n```\r\npackage ejerc3;\r\n\r\nimport leer.*;\r\n\r\n/**\r\n * Principal presenta la aplicación al usuario donde se gestionan todas sus instrucciones y peticiones\r\n * \r\n * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n *\r\n */\r\npublic class Principal {\r\n\r\n\tpublic static void main(String[] args) {\r\n\r\n\t\t//Atributos\r\n        double precio = 0.0, caja = 0.0; \r\n        String marca = null; \r\n        int opcion = 0; \r\n        boolean repetir = true; \r\n\r\n        System.out.println("Bienvenido a Venca");\r\n        System.out.println("El programa gestiona las venta de móviles por catálogo.n"\r\n        \t\t+ "Se puede consultar catálogo, vender móviles, ver precios, cajas, beneficios de un móviln-----");\r\n\r\n        System.out.println("¿Con cuántos móviles quiere salir a la calle?");\r\n\r\n        //Se crea el array "catalogo" de tipo "Movil". Con la dimensión introducida por el usuario\r\n        Movil catalogo[] = new Movil[Leer.datoInt()];\r\n        //Se crea el objeto "gestion" de tipo "GestionMovil"\r\n        GestionMovil gestion = new GestionMovil();\r\n\r\n        System.out.println("Elija los moviles que pondrá a la venta hoy");\r\n\r\n        //Se rellena el array con los móviles (marca y precio)\r\n        for (int i = 0; i < catalogo.length; i++) { \r\n            System.out.println("Introduzca la marca del móvil " + (i + 1));\r\n            marca = Leer.dato();\r\n            System.out.println("Introduzca el precio del móvil " + (i + 1));\r\n            precio = Leer.datoFloat();\r\n            Movil movil = new Movil(precio, marca);\r\n            catalogo[i] = movil;\r\n        } \r\n\r\n        //Se repiteel programa al menos una vez\r\n        do { //Menú para gestionar el programa\r\n            System.out.println("Menú:n"\r\n            \t\t+ "1. Ver Catálogon"\r\n            \t\t+ "2. Ver precio de un móviln"\r\n            \t\t+ "3. Vender un móviln"\r\n            \t\t+ "4. Ver cajan"\r\n            \t\t+ "5. Ver beneficios de un móviln"\r\n            \t\t+ "6. Ver beneficios del dían"\r\n            \t\t+ "Otro número. Salir"); \r\n\r\n            opcion = Leer.datoInt(); \r\n            switch (opcion) {\r\n\t            case 1: //Se muestra el catálogo\r\n\t                gestion.mostrarMoviles(catalogo); \r\n\t                break;\r\n\t            case 2: //Se consulta el precio de un móvil\r\n\t                System.out.println("Introduce el número de movil del catálogo"); \r\n\t                gestion.verPrecio(catalogo, Leer.datoInt()); \r\n\t                break;\r\n\t            case 3: //Se compra un móvil\r\n\t                System.out.println("Introduce el número de movil del catálogo"); \r\n\t                caja = gestion.comprarMovil(catalogo, Leer.datoInt()); \r\n\t                break;\r\n\t            case 4: //Se muestra todas las ventas\r\n\t                System.out.println("La caja total es :" + caja + " €"); \r\n\t                break;\r\n\t            case 5: //Se muestran el importe de un móvil\r\n\t                System.out.println("Introduce el número de movil del cual quiere ver ganacias"); \r\n\t                gestion.verGanancias(catalogo, Leer.datoInt()); \r\n\t                break;\r\n\t            case 6: //Se muestran las ganancias netas\r\n\t                gestion.cerrarCaja(catalogo);\r\n\t                break;\r\n\t            default: //Se sale del programa\r\n\t                repetir= false; \r\n\t                break;\r\n            } \r\n        } while (repetir); //Se sale del programa si en el switch se introduce número diferente de entre 1-6\r\n        System.out.println("Hasta pronto");\r\n\r\n\t}\r\n\r\n}\r\n```\r\n\r\nEn dicha clase se crea el array que que contendrá los móviles con la dimensión seleccionada por el usuario. Se crea también la variable gestión de tipo "GestionMovil" para poder operar con el array de móviles. Un bucle que solicitará los datos de cada uno de los móviles al usuario de la aplicación. El usuario interactuará con la aplicación mediante un menú, para ello construido con un bucle tipo "switch" La clase **Movil.java** tiene como atributos:\r\n\r\n*   Precio\r\n*   Marca\r\n*   Cantidad de móviles vendidos\r\n*   Si se han vendido todos o no\r\n*   Beneficio de un móvil\r\n\r\n```\r\npackage ejerc3;\r\n/**\r\n * Movil genera objetos de tipo móvil cuyos atributos son:\r\n * Precio, Marca, total vendidos, vendido o disponible y beneficio\r\n * \r\n * @author ivan\r\n *\r\n */\r\npublic class Movil {\r\n\r\n    //Atributos \r\n    private double precio; \r\n    private String marca; \r\n    private double totalVendido; \r\n    //Se inicializa a no ha vendido.\r\n    //Sólo se modifica en el método "comprarMovil" mediante "setVendido(true)"\r\n    private boolean vendido=false;\r\n    private double beneficio=0.4;//Beneficio sobre las ventas\r\n\r\n    //Constructores \r\n    public Movil (){ } \r\n\r\n    /**\r\n     * Constructor de tipo Movil. Se rellena por el usuario\r\n     * @param precio\tRecibe un "double" introducido por el usuario\r\n     * @param marca\t\tRecibe un "string" introducido por el usuario\r\n     */\r\n    public Movil (double precio, String marca){ \r\n        this.precio = precio; \r\n        this.marca = marca; \r\n    }\r\n\r\n    /** \r\n     * Muestra todos los móviles, precios guardados y si se han vendido\r\n     *  \r\n     * @param movil Recibe un tipo móvil\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     */\r\n    public void mostrarMovil(Movil[] movil) { \r\n        System.out.println(""\r\n        \t\t+ "Marca "\t\t+ getMarca() + "n"\r\n        \t\t+ "Precio "\t\t+ getPrecio() + " €");\r\n        if(getVendido()) System.out.println("VENDIDO");\r\n        else System.out.println("NO VENDIDO");\r\n        System.out.println("------");\r\n    }\r\n\r\n    /**\r\n     * Muestra precio y marca de un móvil elegido por el usuario.\r\n     * Recibe dos parámetros\r\n     * \r\n     * @param movil\tRecibe un tipo Movil.\r\n     * @param num\tRecibe el identificador del móvil. Introducido por el usuario.\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     */\r\n    public void verPrecio(Movil[] movil) {\r\n        System.out.println(""\r\n        \t\t+ "Marca: "\t\t+ this.getMarca()+ "n"\r\n                + "Precio: "\t+ this.getPrecio() + " €"); \r\n        System.out.println("--------"); \t\r\n    }\r\n\r\n    //Getters and Setters\r\n    public double getMargen() { \r\n        return this.beneficio; \r\n    }\r\n    public void setMargen(double margen) { \r\n        this.beneficio = margen; \r\n    }\r\n    public double getPrecio() { \r\n        return this.precio; \r\n    } \r\n    public void setPrecio(double precio) { \r\n        this.precio = precio; \r\n    }\r\n    public String getMarca() { \r\n        return this.marca; \r\n    }\r\n    public void setMarca(String marca) { \r\n        this.marca = marca; \r\n    }\r\n    public double getTotalVendido() { \r\n        return this.totalVendido; \r\n    }\r\n    public void setTotalVendido(double totalVendido) { \r\n        this.totalVendido = totalVendido; \r\n    }\r\n    public boolean isVendido() { \r\n        return this.vendido; \r\n    }\r\n    public void setVendido(boolean vendido) { \r\n        this.vendido = vendido; \r\n    } \r\n    public boolean getVendido(){ \r\n        return this.vendido; \r\n    } \r\n\r\n}\r\n```\r\n\r\nConsta de dos constructores, uno vacío y el constructor que recibe el precio y la marca.\r\n\r\n*   Tiene dos métodos, ambos reciben como parámetro el array de móviles\r\n*   Un método que imprime las características del móvil\r\n*   Precio y marca de un móvil concreto\r\n\r\nLos gets y sets La clase **GestionMovil.java** tiene como atributos:\r\n\r\n*   Array de móviles\r\n*   Una variable doble que almacena las ventas\r\n\r\nCómo métodos:\r\n\r\n*   Array de móviles\r\n*   Ver precio de un móvil\r\n*   Comprar un móvil\r\n*   Ver ganancias de las ventas\r\n*   Cerrar la caja\r\n\r\n```\r\npackage ejerc3;\r\n\r\n/**\r\n * GestionMovil gestiona las operaciones que se pueden hacer con un conjunto de objetos de clase "movil"\r\n * \r\n * @author ivan\r\n * @version 1.0\r\n *\r\n */\r\npublic class GestionMovil {\r\n\r\n    // Atributos \r\n    private Movil moviles[]; \r\n    private double caja; \r\n\r\n    // Constructor \r\n    public GestionMovil() { }\r\n\r\n    // Métodos\r\n\r\n    /** \r\n     * Muestra todos los móviles, precios guardados y si se han vendido\r\n     *  \r\n     * @param movil Recibe un tipo móvil\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     */\r\n    public void mostrarMoviles(Movil[] movil) { \r\n        for (int i = 0; i < movil.length; i++) { \r\n        \tmovil[i].mostrarMovil(movil);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Muestra precio y marca de un móvil elegido por el usuario.\r\n     * Recibe dos parámetros\r\n     * \r\n     * @param movil\tRecibe un tipo Movil.\r\n     * @param num\tRecibe el identificador del móvil. Introducido por el usuario.\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     */\r\n    public void verPrecio(Movil[] movil, int num) { \r\n        System.out.println(""\r\n        \t\t+ "Marca: "\t\t+movil[num - 1].getMarca()+ "n"\r\n                + "Precio: "\t+movil[num - 1].getPrecio() + " €"); \r\n        System.out.println("--------"); \r\n    }\r\n\r\n    /**\r\n     * Se elige el móvil que se desea comprar. Se comprueba que no esté vendido anteriormente.\r\n     * \r\n     * @param movil\tRecibe un tipo Movil\r\n     * @param num\tRecibe el identificador del móvil. Introducido por el usuario.\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     * @see\t\t\t#getVendido()\r\n     * @return\t\tDevuelve tipo "double" en la variable caja. "caja" acumula las ventas de todos los móviles vendidos.\r\n     */\r\n    public double comprarMovil(Movil[] movil, int num) {\r\n        if (!movil[num - 1].getVendido()) { //Comprueba que no esté vendido\r\n            movil[num - 1].setVendido(true); //Modifica a verdadero booleano vendido \r\n            caja += movil[num - 1].getPrecio(); //Guarda(acumula) la venta\r\n        }\r\n        else { System.out.println("El móvil ya está vendido"); } \r\n        return caja; \r\n    } \r\n\r\n    /**\r\n     * Muestra las ganacias netas de un móvil concreto\r\n     * \r\n     * @param movil\tRecibe un tipo Movil\r\n     * @param num\tRecibe el identificador del móvil. Introducido por el usuario.\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     */\r\n    public void verGanancias(Movil[] movil, int num) {\r\n        double gananciasMovil = 0; \r\n        if (movil[num - 1].getVendido()) { //Comprueba que no esté vendido\r\n        \t//Se calcula el beneficio neto del móvil\r\n            gananciasMovil = movil[num - 1].getMargen() * movil[num - 1].getPrecio(); \r\n            System.out.println("Las ganancias de la venta de "\r\n                    + movil[num - 1].getMarca() + " es " + gananciasMovil);//Muestra la ganancia de un móvil concreto\r\n            System.out.println("------");\r\n        }\r\n        else { System.out.println("El móvil todavía no ha sido vendido"); }\r\n    }\r\n\r\n    /**\r\n     * Muestra las ganacias netas de todas la ventas realizadas durante el día\r\n     * \r\n     * @param movil\tRecibe un tipo Movil\r\n     * @author ivan <a href="http://ivanalbizu.eu" target="_blank">Iván González</a>\r\n     */\r\n    public void cerrarCaja(Movil[] movil) {\r\n        double gananciasDia = 0;\r\n        for (int i = 0; i < movil.length; i++) {\r\n            if (movil[i].getVendido()) {\r\n                gananciasDia += movil[i].getMargen() * movil[i].getPrecio(); \r\n            }\r\n        }\r\n        System.out.println("Las ganacias del día han sido " +gananciasDia+ " €"); \r\n    }\r\n\r\n    // Getters and setters \r\n    public Movil[] getMoviles() { \r\n        return moviles; \r\n    }\r\n    public void setMoviles(Movil[] moviles) {\r\n        this.moviles = moviles;\r\n    }\r\n}\r\n```\r\n\r\nEl método mostrar móvil void mostrarMoviles(...) recibe un array de móviles y muestra la lista de móviles con sus atributos. El método ver precio void verPrecio(...) recibe como parámetros el array de los móviles y un entero que es introducido por el usuario de la aplicación para devolver el precio de un móvil concreto. El método comprar móvil double comprarMovil(...) recibe los mismos parámetros que el método anterior. Primero comprueba que no esté vendido el móvil solicitado, caso de estar vendido se muestra el mensaje correspondiente. Segundo, se modifica el atributo booleano vendido a "true" para marcar que el móvil elegido está vendido. Por último, se obtiene el precio del movil y se guarda en la variable que acumula las ganacias "caja". El método ver ganancias void verGanancias(...) recibe como parámetros el array de móviles y un número introducido por el usuario para seleccionar un móvil. Se comprueba que el móvil esté vendido y luego se obtienen dos datos, el precio y su beneficio y se multiplican, mostrando por pantalla su resultado. El método cerrarCaja void cerrarCaja(...) recibe como parámetro el array de teléfonos, que es recorrido entero y guardado en la variable "gananciasDia" para aquellos móviles que fueron vendidos. Puedes descargar el código para probarlo en el siguiente enlace: [Descargar programa Java - Venta de móviles.](https://drive.google.com/open?id=0BzQS5pOyF_HjMDdUdXRwTDhZZ0U "Descargar programa java venta móviles") Nota final. Este ejercicio se ha desarrollado con fines didácticos, para adquirir destreza en el manejo de colecciones y métodos, por lo que fuera de este uso -aprendizaje- no tiene mucho sentido.'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Rest Android con Retrofit, Slim php y RedBean'\r\ndate: Sun, 19 Apr 2015 21:10:57 +0000\r\npublished: true\r\ntags: Android,Java, Php\r\n---\r\n\r\nRest Api con Retrofit, Slim php y RedBean. En esta ocasión voy a montar una aplicación Android que consume de base de datos MySQL usando Slim php y RedBean php. Las peticiones de la aplicación Android a la base de datos serán controladas con Retrofit.\r\n\r\n## Configuración de la base de datos y backend:\r\n\r\n*   Creamos una tabla llamada \"users\" que contendrá _id_, _name_, _mail_ y _password_.\r\n*   Descargamos [Slim php](http://www.slimframework.com/ \"Slim PHP framwork\") y [RedBean](http://www.redbeanphp.com/ \"RedBeanPHP\").\r\n\r\nLa estructura de directorios y archivos quedará así: [![rest-api-retrofit-android](storage/wp-content/uploads/2015/04/tree-rest-api.png)](http://ivanalbizu.eu/wp-content/uploads/2015/04/tree-rest-api.png) El único archivo que tenemos que crear es v1/api.php. En las primeras líneas añadimos las dependencias a SlimPHP y RedBeanPHP. El contenido será el siguiente:\r\n\r\n```\r\n<?php\r\n\r\n//Se cargan las librerías Slim php y Red Bean php\r\nrequire '../Slim/Slim.php';\r\nrequire '../rb.php';\r\n\r\n\\\\Slim\\\\Slim::registerAutoloader();\r\n\r\n$app = new \\\\Slim\\\\Slim();\r\n\r\n\r\n//Configuración con nuestra base de datos\r\n//R:: -> es la manera de comuncar con RedBean\r\nR::setup('mysql:host=localhost;dbname=namedatabase','user','password'); \r\n\r\n//Rutas y métodos a ejecutar\r\n$app->get('/users', 'getUsers');\r\n$app->get('/users/:id',  'getUser');\r\n$app->post('/users', 'addUser');\r\n$app->put('/users/:id', 'updateUser');\r\n$app->delete('/users/:id', 'deleteUser');\r\n\r\n//Se corre la base de datos\r\n$app->run();\r\n\r\nfunction getUsers() {\r\n\t$users = R::find('users');\r\n\t \r\n\t$app = \\\\Slim\\\\Slim::getInstance();\r\n\t \r\n\t$app->response()->header('Content-Type', 'application/json');\r\n\techo json_encode(R::exportAll($users));\r\n}\r\n\r\nfunction getUser($id) {\r\n\t$users = R::findOne('users', 'id=?', array($id));\r\n\r\n\t$app = \\\\Slim\\\\Slim::getInstance();\r\n\tif ($users) {\r\n\t\t$app->response()->header('Content-Type', 'application/json');\r\n\t\t$json_user = $users->getProperties();\r\n\t\techo json\\_encode($json\\_user);\r\n\t} else {\r\n\t\t$app->response()->status(404);\r\n\t}\r\n}\r\n\r\nfunction addUser() {\r\n\t$app = \\\\Slim\\\\Slim::getInstance();\r\n\t \r\n\t$request = $app->request();\r\n\t$body = $request->getBody(); \r\n\t$input = json_decode($body);\r\n \r\n\t$users = R::dispense('users');\r\n\t$users->id = (integer)$input->id;\r\n\t$users->name = (string)$input->name;\r\n\t$users->mail = (string)$input->mail;\r\n\t$users->password = (string)$input->password; \r\n\t\r\n\tR::store($users); \r\n\r\n\t$app->response()->status(201); \r\n\t$app->response()->header('Content-Type', 'application/json');     \r\n}\r\n\r\nfunction updateUser($id) {\r\n\t$app = \\\\Slim\\\\Slim::getInstance();\r\n\t \r\n\t$request = $app->request();\r\n\t \r\n\t$body = $request->getBody();\r\n\t$input = json_decode($body);\r\n\r\n\t$users = R::findOne('users', 'id = ?', array($id)); \r\n\t \r\n\tif ($users) { \r\n\t\t$users->name = (string)$input->name; \r\n\t\t$users->mail = (string)$input->mail;\r\n\t\t$users->password = (string)$input->password; \r\n\r\n\t\tR::store($users); \r\n\t\t$app->response()->header('Content-Type', 'application/json');\r\n\t} else { \r\n\t\t$app->response()->status(404); \r\n\t}\r\n}\r\n\r\nfunction deleteUser($id) {\r\n\t$app = \\\\Slim\\\\Slim::getInstance();\r\n\r\n\t$users = R::findOne('users', 'id = ?', array($id)); \r\n\t \r\n\tif ($users) { \r\n\t\tR::trash($users); \r\n\t\t$app->response()->status(204); \r\n\t} else { \r\n\t\t$app->response()->status(404); \r\n\t}\r\n}\r\n```\r\n\r\n## Proyecto Android\r\n\r\nImportamos [Retrofit](http://square.github.io/retrofit/ \"Retrofit: retrofit-1.9.0.jar\") y [Gson](https://code.google.com/p/google-gson/ \"Gson: gson-2.3.1.jar\") Sin entrar en detalle en todos los archivos, comentar que los principales serán:\r\n\r\n*   UsersAPI.java\r\n*   MainActivity.java\r\n*   EditUser.java\r\n\r\nUsersAPI.java se comunica con el Backend.\r\n\r\n```\r\npublic interface UsersAPI {\r\n\t\r\n\t@GET(\"/users\")\r\n\tvoid getUsers(Callback<List<User>> response);\r\n\t\r\n\t@GET(\"/users/{id}\")\r\n\tvoid getUser(@Path(\"id\") String id, Callback<User> response);\r\n\t\r\n\t@DELETE(\"/users/{id}\")\r\n\tvoid deleteUser(@Path(\"id\") String id, Callback<String> response);\r\n\t\r\n\t@POST(\"/users\")\r\n\tvoid createUser(@Body User user, Callback<User> response);\r\n\t\r\n\t@PUT(\"/users/{id}\")\r\n\tvoid updateUser(@Path(\"id\") String id, @Body User user, Callback<String> response);\r\n\r\n}\r\n```\r\n\r\nEn MainActivity.java tendremos tres métodos:\r\n\r\n*   getAllUser(String uri). Obtener todos los usuarios.\r\n*   delUser(String uri, String id). Borrar un usuario por su ID. (Usando @Path definido en UsersAPI.java)\r\n*   newUser(String uri, User user). Crear nuevo usuario. (Usando @Body)\r\n*   Un cuarto método, refreshListUser(), para cargar el ListView.\r\n\r\nEl código completo de esta clase:\r\n\r\n```\r\npublic class MainActivity extends Activity {\r\n\r\n\tpublic static final String BASE_URL = \"http://tudominio.com/v1/api.php/\";\r\n\tprivate List<User> userList;\r\n\t\r\n\tProgressBar progress;\r\n\t\r\n\tUser user;\r\n\tListView listView;\r\n\tButton btnCrearUsuario, btnBorrarUsuario;\r\n\tEditText name, mail, password, borrar;\r\n\t\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity_main);\r\n\t\t\r\n\t\tprogress = (ProgressBar)findViewById(R.id.progressBar1);\r\n\t\tbtnCrearUsuario =(Button)findViewById(R.id.button1);\r\n\t\tbtnBorrarUsuario =(Button)findViewById(R.id.button2);\r\n\t\t\r\n\t\tlistView = (ListView)findViewById(R.id.listView);\r\n\t\tname = (EditText)findViewById(R.id.editText1);\r\n\t\tmail = (EditText)findViewById(R.id.editText2);\r\n\t\tpassword = (EditText)findViewById(R.id.editText3);\r\n\t\tborrar = (EditText)findViewById(R.id.editText4);\r\n\t\t\r\n\t\tbtnCrearUsuario.setOnClickListener(new OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\tUser user = new User(\r\n\t\t\t\t\t\tname.getText().toString(),\r\n\t\t\t\t\t\tmail.getText().toString(), \r\n\t\t\t\t\t\tpassword.getText().toString());\r\n\t\t\t\tnewUser(BASE_URL, user);\r\n\t\t\t\tgetAllUser(BASE_URL);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tbtnBorrarUsuario.setOnClickListener(new OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\tdelUser(BASE_URL, borrar.getText().toString());\r\n\t\t\t\tgetAllUser(BASE_URL);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tlistView.setOnItemClickListener(new OnItemClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onItemClick(AdapterView<?> arg0, View arg1, int arg2,\r\n\t\t\t\t\tlong arg3) {\r\n\t\t\t\tUser user = (User) (arg0.getItemAtPosition(arg2));\r\n\t\t\t\tString id = String.valueOf(user.getId());\r\n\t\t\t\tIntent i = new Intent(getApplicationContext(), EditUserActivity.class);\r\n\t\t\t\ti.putExtra(\"id\", id);\r\n\t\t\t\tstartActivity(i);\r\n\t\t\t}\r\n\t\t});\r\n\t\t\r\n\t\tgetAllUser(BASE_URL);\r\n\t}\r\n\t\r\n\t\r\n\tprivate void getAllUser(String uri){\r\n\t\tRestAdapter adapter = new RestAdapter.Builder()\r\n\t\t\t.setEndpoint(uri)\r\n\t\t\t.build();\r\n\t\tUsersAPI api = adapter.create(UsersAPI.class);\r\n\t\t\r\n\t\tapi.getUsers(new Callback<List<User>>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void success(List<User> arg0, Response arg1) {\r\n\t\t\t\tuserList = arg0;\r\n\t\t\t\trefreshListUser();\r\n\t\t\t\tprogress.setVisibility(View.INVISIBLE);\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tpublic void failure(RetrofitError arg0) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Error con GET ALL: \"+arg0.getMessage(), Toast.LENGTH_LONG).show();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate void delUser(String uri, String id){\r\n\t\tRestAdapter adapter = new RestAdapter.Builder()\r\n\t\t\t.setEndpoint(uri)\r\n\t\t\t.build();\r\n\t\tUsersAPI api = adapter.create(UsersAPI.class);\r\n\t\t\r\n\t\tapi.deleteUser(id, new Callback<String>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void failure(RetrofitError arg0) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Error eliminando: \"+arg0.getMessage(), Toast.LENGTH_LONG).show();\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tpublic void success(String arg0, Response arg1) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Eliminado BIEN!!\", Toast.LENGTH_LONG).show();\t\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tprivate void newUser(String uri, User user){\r\n\t\tRestAdapter adapter = new RestAdapter.Builder()\r\n\t\t\t.setEndpoint(uri)\r\n\t\t\t.build();\r\n\t\t\r\n\t\tUsersAPI api = adapter.create(UsersAPI.class);\r\n\t\t\r\n\t\tapi.createUser(user, new Callback<User>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void failure(RetrofitError arg0) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Error al crear usuario: \"+arg0.getMessage(), Toast.LENGTH_LONG).show();\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tpublic void success(User arg0, Response arg1) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Éxito. Nuevo usuario creado\", Toast.LENGTH_LONG).show();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t\r\n\tprotected void refreshListUser(){\r\n\t\tUserAdapter adapter = new UserAdapter(userList,this);\r\n\t\tlistView.setAdapter(adapter);\r\n\t}\r\n}\r\n```\r\n\r\nEn la clase EditUserActivty.java obtendremos el usuario que se quiere editar, y se edita. Para ello tenemos dos métodos.\r\n\r\n*   getU(String uri, String id). Obtenemos el usuario por su ID. (Usando @Path de UsersAPI.java)\r\n*   upUser(String uri, String id, User user). Obtenemos el usuario por su ID y los nuevos datos del usuario modificados. (Usando @Path y @Body)\r\n\r\nEl código completo es:\r\n\r\n```\r\npublic class EditUserActivity extends Activity {\r\n\t\r\n\tpublic static final String BASE_URL = \"http://tudominio.com/v1/api.php/\";\r\n\t\r\n\tprivate TextView idUser;\r\n\tprivate EditText name,mail,password;\r\n\tprivate Button btn;\r\n\tprivate String idIntent;\r\n\t\r\n\t@Override\r\n\tprotected void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\tsetContentView(R.layout.activity\\_edit\\_user);\r\n\t\t\r\n\t\tidUser = (TextView)findViewById(R.id.textView1);\r\n\t\tname = (EditText)findViewById(R.id.editText1);\r\n\t\tmail = (EditText)findViewById(R.id.editText2);\r\n\t\tpassword = (EditText)findViewById(R.id.editText3);\r\n\t\tbtn = (Button)findViewById(R.id.button3);\r\n\r\n\t\tidIntent = getIntent().getExtras().getString(\"id\");\r\n\r\n\t\tgetU(BASE_URL,idIntent);\r\n\t\t\r\n\t\tbtn.setOnClickListener(new OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View v) {\r\n\t\t\t\tUser user = new User(\r\n\t\t\t\t\t\tname.getText().toString(),\r\n\t\t\t\t\t\tmail.getText().toString(),\r\n\t\t\t\t\t\tpassword.getText().toString());\r\n\t\t\t\tupUser(BASE_URL,idIntent,user);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate void getU(String uri, String id){\r\n\t\tRestAdapter adapter = new RestAdapter.Builder()\r\n\t\t\t.setEndpoint(uri)\r\n\t\t\t.build();\r\n\t\tUsersAPI api = adapter.create(UsersAPI.class);\r\n\t\t\r\n\t\tapi.getUser(id, new Callback<User>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void failure(RetrofitError arg0) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), arg0.getMessage(), Toast.LENGTH_LONG).show();\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tpublic void success(User user, Response arg1) {\r\n\t\t\t\tidUser.setText(String.valueOf(user.getId()));\r\n\t\t\t\tname.setText(user.getName());\r\n\t\t\t\tmail.setText(user.getMail());\r\n\t\t\t\tpassword.setText(user.getPassword());\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\tprivate void upUser(String uri, String id, User user){\r\n\t\tRestAdapter adapter = new RestAdapter.Builder()\r\n\t\t\t.setEndpoint(uri)\r\n\t\t\t.build();\r\n\t\tUsersAPI api = adapter.create(UsersAPI.class);\r\n\t\t\r\n\t\tapi.updateUser(id, user, new Callback<String>() {\r\n\t\t\t@Override\r\n\t\t\tpublic void failure(RetrofitError arg0) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Error actualizando: \"+arg0.getMessage(), Toast.LENGTH_LONG).show();\r\n\t\t\t}\r\n\t\t\t@Override\r\n\t\t\tpublic void success(String arg0, Response arg1) {\r\n\t\t\t\tToast.makeText(getApplicationContext(), \"Actualizado PERFECT!!\", Toast.LENGTH_LONG).show();\r\n\t\t\t\tstartActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n```\r\n\r\nEl código completo de [REST API Android](https://drive.google.com/open?id=0BzQS5pOyF_HjbVVqamNCTUNoRG8 \"Rest API retrofit, Slim, RedBean\")"},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Spinner enlazados en Android\'\r\ndate: Fri, 31 Oct 2014 16:09:58 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nSpinner enlazados en Android, en el que un segundo Spinner carga sus contenidos en función del ítem seleccionado del primer Spinner. Los pasos que he seguido para conseguirlo han sido:\r\n\r\n1.  Creación de arrays dentro del archivo strings.xml.\r\n2.  Creación de la vista en el archivo layout.xml\r\n3.  Declaración de variables.\r\n4.  Referenciado de variables del XML.\r\n5.  Construcción del "adaptador" para el primer Spinner.\r\n6.  Cargar el tipo de vista para el adaptador.\r\n7.  Aplicar el adaptador al Spinner de localidades.\r\n8.  Listener para saber que item ha sido seleccionado y poder usarlo en el método "onItemSelected".\r\n9.  Sobre escribir el método "onItemSelected" de la interfaz "OnItemSelectedListener".\r\n    1.  Se guarda en array de enteros los arrays de las provincias.\r\n    2.  Construcción del "adaptador" para el segundo Spinner.\r\n    3.  Se carga el tipo de vista para el adaptador.\r\n    4.  Se aplica el adaptador al Spinner de localidades.\r\n\r\nCreación de los arrays para los Spinner:\r\n\r\n```\r\n<string-array name="array_provincias">\r\n    <item>Sevilla</item>\r\n    <item>Málaga</item>\r\n</string-array>\r\n\r\n<string-array name="array_sevilla">\r\n    <item>Villanueva del Ariscal</item>\r\n    <item>Tomares</item>\r\n    <item>Mairena del Aljarafe</item>\r\n</string-array>\r\n\r\n<string-array name="array_malaga">\r\n    <item>Casares</item>\r\n    <item>Manilva</item>\r\n    <item>Estepona</item>\r\n</string-array>\r\n\r\nCreación de Spinner en la vista:\r\n\r\n<Spinner\r\n    android:id="@+id/spinnerProvincia"\r\n    android:layout_width="wrap_content"\r\n    android:layout_height="wrap_content"\r\n    android:layout_alignParentTop="true"\r\n    android:layout_centerHorizontal="true"\r\n    android:layout_marginTop="40dp" />\r\n\r\n<Spinner\r\n    android:id="@+id/spinnerLocalidad"\r\n    android:layout_width="wrap_content"\r\n    android:layout_height="wrap_content"\r\n    android:layout_below="@+id/spinnerProvincia"\r\n    android:layout_centerHorizontal="true"\r\n    android:layout_marginTop="66dp" />\r\n```\r\n\r\nDeclaración y referenciado de los Spinner:\r\n\r\n```\r\n//Declaración de variables\r\nprivate Spinner spinnerPro, spinnerLoc;\r\n\r\n@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n  super.onCreate(savedInstanceState);\r\n  setContentView(R.layout.activity_main);\r\n  \r\n  //Referenciado de variables del XML\r\n  spinnerPro = (Spinner) findViewById(R.id.spinnerProvincia);\r\n  spinnerLoc = (Spinner) findViewById(R.id.spinnerLocalidad);\r\n\r\n  /*------ Método OnCreate continua ------*/\r\n```\r\n\r\nAdaptador para primer Spinner:\r\n\r\n```\r\n@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n  /*------ Método continuado ------*/\r\n\r\n    //Construcción del "adaptador" para el primer Spinner\r\n  ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(\r\n    this, \r\n    R.array.array_provincias, //Se carga el array definido en el XML\r\n    android.R.layout.simple_spinner_item);\r\n  \r\n  //Se carga el tipo de vista para el adaptador\r\n  adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n  \r\n  //Se aplica el adaptador al Spinner de localidades\r\n  spinnerPro.setAdapter(adapter);\r\n  //Se aplica listener para saber que item ha sido seleccionado\r\n  //y poder usarlo en el método "onItemSelected"\r\n  spinnerPro.setOnItemSelectedListener(this);\r\n}\r\n```\r\n\r\nSegundo Spinner, enlazado:\r\n\r\n```\r\n//Sobre escrito el método "onItemSelected" de\r\n//la interfaz "OnItemSelectedListener"\r\n@Override\r\npublic void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n  //Se guarda en array de enteros los arrays de las provincias\r\n  int[] localdades = {R.array.array_sevilla,R.array.array_malaga};\r\n  \r\n  //Construcción del "adaptador" para el segundo Spinner\r\n  ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(\r\n    this,\r\n    localidades[position],//En función de la provincia, se carga el array que corresponda del XML\r\n    android.R.layout.simple_spinner_item);\r\n  \r\n  //Se carga el tipo de vista para el adaptador\r\n  adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n  \r\n  //Se aplica el adaptador al Spinner de localidades\r\n  spinnerLoc.setAdapter(adapter); \r\n}\r\n```\r\n\r\nHe creado un vídeo en el que realizo este ejemplo de Spinner enlazados en Android: Para descargar el código completo [Spinner enlazados en Android](https://drive.google.com/open?id=0BzQS5pOyF_HjSElVSTZuZlEzR00 "Spinner enlazadosen Android")'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Tabs en Android\'\r\ndate: Sun, 14 Dec 2014 10:35:52 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nCrear Tabs en Android es sencillo. Necesitaremos el archivo XML.\r\n\r\n*   La etiqueta **TabHost** contiene toda la información.\r\n*   La etiqueta **TabWidget** hace referencia al sistema de pestañas: al menú.\r\n*   Los contenidos de cada pestaña está dentro de **LinearLayout**.\r\n\r\nSu código:\r\n\r\n```\r\n<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"\r\n  xmlns:tools="http://schemas.android.com/tools"\r\n  android:layout_width="match_parent"\r\n  android:layout_height="match_parent"\r\n  tools:context="eu.ivanalbizu.tabapp.MainActivity" >\r\n\r\n  <TabHost\r\n    android:id="@android:id/tabhost"\r\n    android:layout_width="match_parent"\r\n    android:layout_height="match_parent"\r\n    android:layout_alignParentLeft="true"\r\n    android:layout_alignParentTop="true" >\r\n\r\n    <LinearLayout\r\n      android:layout_width="match_parent"\r\n      android:layout_height="match_parent"\r\n      android:orientation="vertical" >\r\n\r\n      <TabWidget\r\n        android:id="@android:id/tabs"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="wrap_content" >\r\n      </TabWidget>\r\n\r\n      <FrameLayout\r\n        android:id="@android:id/tabcontent"\r\n        android:layout_width="match_parent"\r\n        android:layout_height="match_parent" >\r\n\r\n        <LinearLayout\r\n          android:id="@+id/tab1"\r\n          android:layout_width="match_parent"\r\n          android:layout_height="match_parent"\r\n          android:orientation="horizontal" >\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n          android:id="@+id/tab2"\r\n          android:layout_width="match_parent"\r\n          android:layout_height="match_parent"\r\n          android:orientation="horizontal" >\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n          android:id="@+id/tab3"\r\n          android:layout_width="match_parent"\r\n          android:layout_height="match_parent"\r\n          android:orientation="horizontal" >\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n          android:id="@+id/tab4"\r\n          android:layout_width="match_parent"\r\n          android:layout_height="match_parent"\r\n          android:orientation="horizontal" >\r\n        </LinearLayout>\r\n      </FrameLayout>\r\n    </LinearLayout>\r\n  </TabHost>\r\n\r\n</RelativeLayout>\r\n```\r\n\r\nLa clase MainActivity.java, dentro de onCreate,  obtiene las referencias de cada elemento de la vista.\r\n\r\n*   Se obtiene la referencia al sistema de pestañas **TabHost tabs = (TabHost) findViewById(android.R.id.tabhost)**\r\n*   Llamamos al método **setup()** antes de empezar a añadir pestañas usando la ID.\r\n*   Indicamos una nueva pestaña **newTabSpec("Pestaña 1")**\r\n*   Asignamos la referencia **spec.setContent(R.id.tab1)** e indicamos el nombre **spec.setIndicator("Menú 1")**\r\n*   Asignamos la pestaña creada al sistema de pestañas **tabs.addTab(spec)**\r\n*   Establecemos la primera pestaña como predeterminada **tabs.setCurrentTab(0)**\r\n\r\nSu código:\r\n\r\n```\r\n@Override\r\nprotected void onCreate(Bundle savedInstanceState) {\r\n\tsuper.onCreate(savedInstanceState);\r\n\tsetContentView(R.layout.activity_main);\r\n\t\r\n\tTabHost.TabSpec spec;\r\n\tTabHost tabs = (TabHost) findViewById(android.R.id.tabhost);\r\n\ttabs.setup();\r\n\t\r\n\tspec = tabs.newTabSpec("Pestaña 1");\r\n\tspec.setContent(R.id.tab1);\r\n\tspec.setIndicator("Menú 1");\r\n\ttabs.addTab(spec);\r\n\t\r\n\tspec = tabs.newTabSpec("Pestaña 2");\r\n\tspec.setContent(R.id.tab2);\r\n\tspec.setIndicator("Menú 2");\r\n\ttabs.addTab(spec);\r\n\t\r\n\tspec = tabs.newTabSpec("Pestaña 3");\r\n\tspec.setContent(R.id.tab3);\r\n\tspec.setIndicator("Menú 3");\r\n\ttabs.addTab(spec);\r\n\t\r\n}\r\n```\r\n\r\nEl vídeo del ejemplo'},function(e,r,t){"use strict";t.r(r),r.default='---\r\ntitle: \'Uso de startActivityForResult\'\r\ndate: Thu, 23 Oct 2014 16:21:47 +0000\r\npublished: true\r\ntags: Android,Java\r\n---\r\n\r\nEn esta entrada voy a crear, mediante un ejemplo, un interfaz Android en la que se use startActivityForResult(). El método **startActivityForResult()** se emplea para lanzar una actividad y que ésta nos devuelva una información que será usada en la actividad "origen".\r\n\r\n1.  Para ello, en la actividad "origen" crearemos:\r\n    1.  Un método que lanzará un Intent al pulsar sobre un botón.\r\n    2.  Otro método que será el que espere el resultado del Intent.\r\n2.  En la actividad "destino" crearemos:\r\n    1.  Dos métodos, cada uno vinculado a su botón correspondiente, para devolver el Intent mediante setResult()\r\n\r\nEl código de la clase "origen" es el siguiente:\r\n\r\n```\r\npackage eu.ivanalbizu.condicionesregistro;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\npublic class MainActivity extends Activity {\r\n\r\n\t//Se declaran las variables\r\n\tprivate final static int NOMBRE = 0;//Variable usada para almacenar el "testigo"\r\n\tprivate TextView nombre;\r\n\t\r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_main);\r\n    \r\n    //Se referencia la variable mediante la ID del XML\r\n    nombre = (TextView) findViewById(R.id.tNombre);\r\n  }\r\n    \r\n  public void rellenarNombre(View v){\r\n    //Si no ha completado nombre se advierte mediante Toast\r\n    if (nombre.getText().toString().equals("")) {\r\n      Toast.makeText(this, "Debe indicar su nombre", Toast.LENGTH_SHORT).show();\r\n      System.out.println("campo vacio");\r\n    //Si ha introducido nombre se lanza Intent con testigo y pasando información extra\r\n    } else {\r\n      Intent intent = new Intent(MainActivity.this, CondicionActivity.class);\r\n        intent.putExtra("nombre", nombre.getText().toString());\r\n        startActivityForResult(intent, NOMBRE);\t\r\n    }\r\n  }\r\n    \r\n  //Se recibe la información de CondicionActivity.java\r\n  @Override\r\n  protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n    //Se no ha habido fallo:\r\n    if (requestCode == NOMBRE){\r\n      //Se procesa la devolución\r\n      switch (resultCode) {\r\n      case RESULT_OK:\r\n        Toast.makeText(this, "Aceptó las condiciones", Toast.LENGTH_SHORT).show();\r\n        break;\r\n      case RESULT_CANCELED:\r\n        Toast.makeText(this, "Rechazó las condiciones", Toast.LENGTH_SHORT).show();\r\n        break;\r\n      }\r\n    }\r\n  }\r\n    \r\n}\r\n```\r\n\r\nY el código de la clase "destino" es:\r\n\r\n```\r\npackage eu.ivanalbizu.condicionesregistro;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\npublic class CondicionActivity extends Activity {\r\n\r\n  //Se declaran las variables\r\n  private Button btnAceptar;\r\n  private Button btnRechazar;\r\n  private TextView catchExtra;\r\n  \r\n  @Override\r\n  protected void onCreate(Bundle savedInstanceState) {\r\n    super.onCreate(savedInstanceState);\r\n    setContentView(R.layout.activity_condicion);\r\n    \r\n    //Se referencian las variables mediante la ID del XML\r\n    btnAceptar = (Button) findViewById(R.id.buttonAceptar);\r\n    btnRechazar = (Button) findViewById(R.id.buttonRechazar);\r\n    catchExtra = (TextView) findViewById(R.id.tPersona);\r\n\r\n    //Del intent recibido se obtiene el contenido mediante: getStringExtra("nombre")\r\n    String datoUsuario = getIntent().getStringExtra("nombre");\r\n    catchExtra.setText("Hola "+datoUsuario);\r\n    \r\n    //Si se pulsa el botón aceptar se establece resultado OK\r\n    //Se manda a MainActivity.java al método onActivityResult(...)\r\n    btnAceptar.setOnClickListener(new View.OnClickListener() {\r\n      @Override\r\n      public void onClick(View v) {\r\n        Intent returnIntent = new Intent();\r\n        setResult(RESULT_OK,returnIntent);\r\n        finish();\r\n      }\r\n    });\r\n    \r\n    //Si se pulsa el botón cancelar se establece resultado CANCELED\r\n    //Se manda a MainActivity.java al método onActivityResult(...)\r\n    btnRechazar.setOnClickListener(new View.OnClickListener() {\r\n      @Override\r\n      public void onClick(View v) {\r\n        Intent returnIntent = new Intent();\r\n        setResult(RESULT_CANCELED,returnIntent);\r\n        finish();\r\n      }\r\n    });\r\n    \r\n  }\r\n}\r\n```\r\n\r\nEl código XML para las vistas no está incluido en la entrada, es muy simple, y se puede descargar el [ejemplo completo desde aquí](https://db.tt/z9PuhFkh "Ejemplo startActivityForResult")'},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Visualizar SQLite de app Android con Eclipse'\r\ndate: Tue, 13 Jan 2015 16:57:28 +0000\r\npublished: true\r\ntags: Android,Eclipse\r\n---\r\n\r\nMediante un plugin Jar y unos sencillos pasos se puede visualizar una base de datos SQLite Pasos:\r\n\r\n*   [Descargar plugin](https://drive.google.com/uc?export=download&id=0B62RQ5qnJbU1cHNLaVRIVnZCd2M \"Enlace a descarga delPlugin\")\r\n*   Ubicarlo en la carpeta de Eclipse: _eclipse/dropins_\r\n*   Reiniciar Eclipse\r\n*   En Eclipse pinchar en _Window - Show view - Others - Other - Questoid SQLite Manager_\r\n*   Si no se tiene activada la vista DDMS, se habilita _Window - Open perspective - Other - DDMS_\r\n*   Localizar la base de datos navegando por el File Explorer\r\n*   Una vez clickeado la base de datos, localizar y pulsar el botón azul en la parte superior derecha del File Explorer\r\n*   Se debería ver en un Frame de Eclipse (cerca del LogCat y Console) una nueva pestaña llamada Questoid SQLite Browser\r\n\r\nEspero que sirva."},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Visualizar SQLite de app Android con SQLite manager'\r\ndate: Wed, 14 Jan 2015 15:34:59 +0000\r\npublished: true\r\ntags: Android,Eclipse,Pildoritas\r\n---\r\n\r\nEn mi anterior entrada publiqué los pasos para poder [ver una base de datos SQLite](http://ivanalbizu.eu/visualizar-sqlite-de-app-android-con-eclipse/ \"Ver estructura de base de datos SQLite en Eclipse\") generada en un proyecto Android usando para ello un plugin en Eclipse. Otra manera de verla, y además poder realizar operaciones sobre la base de datos (tipo CRUD), es usando un plugin para Firefox llamada SQLite Manager. Los pasos para llevarlo a cabo.\r\n\r\n1.  Ver vista DDMS en Eclipse\r\n2.  Localizar pestaña File Explorer\r\n3.  Localizar y seleccionar la base de datos de nuestro proyecto (**data/data/nombre\\_de\\_paquete/databases/nuestra\\_base\\_datos**)\r\n4.  Exportar la base de datos (primer icono de la pestaña File Explorer -Pull a file from the device-)\r\n5.  Guardar donde queramos (sin olvidar extensión .sqlite)\r\n6.  Localizar e instalar en Firefox el complemento llamado SQLite Manager\r\n7.  Ejecutar el complemento\r\n8.  Abrir la base de datos. _Menú Base de datos - Conectar a base de datos_\r\n\r\nEspero que sea útil."},function(e,r,t){"use strict";t.r(r),r.default="---\r\ntitle: 'Wp Rest Api: habilitar filtro de Custom Fields'\r\ndate: Sun, 02 Oct 2016 16:04:38 +0000\r\npublished: true\r\ntags: AngularJS,Php,Pildoritas,Wordpress\r\n---\r\n\r\nUsando Wp Rest Api, Advanced Custom Fields y Angular he necesitado habilitar el filtrado por la URL de la petición de los nuevos campos creados. En mi Custom Post Type tenía creado varios campos y necesitaba que se mostrasen las entradas que cumpliesen ambas condiciones. En la primera función indico cuales son los campos que quiero añadir para filtrar. En la segunda realizo las operaciones que deben cumplir los campos\r\n\r\n```\r\nadd_filter( 'rest_query_vars', valid_vars_metaquery);\r\nfunction valid_vars_metaquery( $valid_vars ) {\r\n    return array_merge( $valid_vars, array( 'numero_habitaciones', 'numero_banos', 'meta_query' ) );\r\n}\r\n\r\nadd_filter( 'rest_sale_query', filter_num_hab_ban, 10, 2 );\r\nfunction filter_num_hab_ban( $args, $request ) {\r\n    $numero_habitaciones = $request->get_param( 'numero_habitaciones' );\r\n    $numero_banos = $request->get_param( 'numero_banos' );\r\n\r\n    if ( ! empty( $numero_habitaciones ) && ! empty( $numero_banos )) {\r\n        $args\\['meta_query'\\] = array(\r\n            array(\r\n                'key'     => 'numero_habitaciones',\r\n                'value'   => $numero_habitaciones,\r\n                'compare' => '=',\r\n            ),\r\n            array(\r\n                'key'     => 'numero_banos',\r\n                'value'   => $numero_banos,\r\n                'compare' => '=',\r\n            )\r\n        );\r\n    }\r\n\r\n    return $args;\r\n}\r\n```\r\n\r\nY la Url es la siguiente.\r\n\r\n```\r\nfunction getRelevantPostData(numero_habitaciones, numero_banos) {\r\n    return $http.get(URL_API.BASE_URL + '/wp/v2/sale?numero_habitaciones=' + numero_habitaciones + '&numero_banos=' + numero_banos).success(function(res){\r\n        return res;\r\n    });\r\n}\r\n```"},function(e,r,t){e.exports=t(169)},function(e,r,t){"use strict";t.r(r),function(e){t(77),t(62),t(63);var r=t(28),n=(t(31),t(179),t(5)),o=(t(67),t(88),t(37),t(38),t(92),t(69),t(91),t(183),t(195),t(197),t(0)),l=t(103),d=t(72),c=t(1),m=t(20),f=t(56);o.a.component(f.a.name,f.a),o.a.component("NLink",f.a),e.fetch||(e.fetch=l.a);var h,v,x=[],w=window.__NUXT__||{};Object.assign(o.a.config,{silent:!0,performance:!1});var y=o.a.config.errorHandler||console.error;function k(e,r,t){var n=function(component){var e=function(component,e){if(!component||!component.options||!component.options[e])return{};var option=component.options[e];if("function"==typeof option){for(var r=arguments.length,t=new Array(r>2?r-2:0),n=2;n<r;n++)t[n-2]=arguments[n];return option.apply(void 0,t)}return option}(component,"transition",r,t)||{};return"string"==typeof e?{name:e}:e};return e.map(function(e){var r=Object.assign({},n(e));if(t&&t.matched.length&&t.matched[0].components.default){var o=n(t.matched[0].components.default);Object.keys(o).filter(function(e){return o[e]&&e.toLowerCase().includes("leave")}).forEach(function(e){r[e]=o[e]})}return r})}function S(e,r,t){return _.apply(this,arguments)}function _(){return(_=Object(n.a)(regeneratorRuntime.mark(function e(r,t,n){var o,l,d,m,f=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this._pathChanged=!!h.nuxt.err||t.path!==r.path,this._queryChanged=JSON.stringify(r.query)!==JSON.stringify(t.query),this._diffQuery=this._queryChanged?Object(c.g)(r.query,t.query):[],this._pathChanged&&this.$loading.start&&!this.$loading.manual&&this.$loading.start(),e.prev=4,e.next=7,Object(c.n)(r);case 7:o=e.sent,!this._pathChanged&&this._queryChanged&&o.some(function(e){var r=e.options.watchQuery;return!0===r||!!Array.isArray(r)&&r.some(function(e){return f._diffQuery[e]})})&&this.$loading.start&&!this.$loading.manual&&this.$loading.start(),n(),e.next=23;break;case 12:if(e.prev=12,e.t0=e.catch(4),l=e.t0||{},d=l.statusCode||l.status||l.response&&l.response.status||500,m=l.message||"",!/^Loading( CSS)? chunk (\d)+ failed\./.test(m)){e.next=20;break}return window.location.reload(!0),e.abrupt("return");case 20:this.error({statusCode:d,message:m}),this.$nuxt.$emit("routeChanged",r,t,l),n();case 23:case"end":return e.stop()}},e,this,[[4,12]])}))).apply(this,arguments)}function A(e,r){return w.serverRendered&&r&&Object(c.a)(e,r),e._Ctor=e,e}function j(e){var path=Object(c.d)(e.options.base,e.options.mode);return Object(c.c)(e.match(path),function(){var e=Object(n.a)(regeneratorRuntime.mark(function e(r,t,n,o,l){var d;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("function"!=typeof r||r.options){e.next=4;break}return e.next=3,r();case 3:r=e.sent;case 4:return d=A(Object(c.o)(r),w.data?w.data[l]:null),n.components[o]=d,e.abrupt("return",d);case 7:case"end":return e.stop()}},e)}));return function(r,t,n,o,l){return e.apply(this,arguments)}}())}function E(e,r,t){var n=this,o=[],l=!1;if(void 0!==t&&(o=[],(t=Object(c.o)(t)).options.middleware&&(o=o.concat(t.options.middleware)),e.forEach(function(e){e.options.middleware&&(o=o.concat(e.options.middleware))})),o=o.map(function(e){return"function"==typeof e?e:("function"!=typeof d.a[e]&&(l=!0,n.error({statusCode:500,message:"Unknown middleware "+e})),d.a[e])}),!l)return Object(c.k)(o,r)}function C(e,r,t){return T.apply(this,arguments)}function T(){return(T=Object(n.a)(regeneratorRuntime.mark(function e(r,t,n){var o,l,d,f,v,w,y,S,_,A,j,C,T,z,I,L,P=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!1!==this._pathChanged||!1!==this._queryChanged){e.next=2;break}return e.abrupt("return",n());case 2:return r===t?x=[]:(o=[],x=Object(c.e)(t,o).map(function(e,i){return Object(c.b)(t.matched[o[i]].path)(t.params)})),l=!1,d=function(path){t.path===path.path&&P.$loading.finish&&P.$loading.finish(),t.path!==path.path&&P.$loading.pause&&P.$loading.pause(),l||(l=!0,n(path))},e.next=7,Object(c.p)(h,{route:r,from:t,next:d.bind(this)});case 7:if(this._dateLastError=h.nuxt.dateErr,this._hadError=!!h.nuxt.err,f=[],(v=Object(c.e)(r,f)).length){e.next=25;break}return e.next=14,E.call(this,v,h.context);case 14:if(!l){e.next=16;break}return e.abrupt("return");case 16:return e.next=18,this.loadLayout("function"==typeof m.a.layout?m.a.layout(h.context):m.a.layout);case 18:return w=e.sent,e.next=21,E.call(this,v,h.context,w);case 21:if(!l){e.next=23;break}return e.abrupt("return");case 23:return h.context.error({statusCode:404,message:"This page could not be found"}),e.abrupt("return",n());case 25:return v.forEach(function(e){e._Ctor&&e._Ctor.options&&(e.options.asyncData=e._Ctor.options.asyncData,e.options.fetch=e._Ctor.options.fetch)}),this.setTransitions(k(v,r,t)),e.prev=27,e.next=30,E.call(this,v,h.context);case 30:if(!l){e.next=32;break}return e.abrupt("return");case 32:if(!h.context._errored){e.next=34;break}return e.abrupt("return",n());case 34:return"function"==typeof(y=v[0].options.layout)&&(y=y(h.context)),e.next=38,this.loadLayout(y);case 38:return y=e.sent,e.next=41,E.call(this,v,h.context,y);case 41:if(!l){e.next=43;break}return e.abrupt("return");case 43:if(!h.context._errored){e.next=45;break}return e.abrupt("return",n());case 45:S=!0,e.prev=46,_=!0,A=!1,j=void 0,e.prev=50,C=v[Symbol.iterator]();case 52:if(_=(T=C.next()).done){e.next=64;break}if("function"==typeof(z=T.value).options.validate){e.next=56;break}return e.abrupt("continue",61);case 56:return e.next=58,z.options.validate(h.context);case 58:if(S=e.sent){e.next=61;break}return e.abrupt("break",64);case 61:_=!0,e.next=52;break;case 64:e.next=70;break;case 66:e.prev=66,e.t0=e.catch(50),A=!0,j=e.t0;case 70:e.prev=70,e.prev=71,_||null==C.return||C.return();case 73:if(e.prev=73,!A){e.next=76;break}throw j;case 76:return e.finish(73);case 77:return e.finish(70);case 78:e.next=84;break;case 80:return e.prev=80,e.t1=e.catch(46),this.error({statusCode:e.t1.statusCode||"500",message:e.t1.message}),e.abrupt("return",n());case 84:if(S){e.next=87;break}return this.error({statusCode:404,message:"This page could not be found"}),e.abrupt("return",n());case 87:return e.next=89,Promise.all(v.map(function(e,i){if(e._path=Object(c.b)(r.matched[f[i]].path)(r.params),e._dataRefresh=!1,P._pathChanged&&P._queryChanged||e._path!==x[i])e._dataRefresh=!0;else if(!P._pathChanged&&P._queryChanged){var t=e.options.watchQuery;!0===t?e._dataRefresh=!0:Array.isArray(t)&&(e._dataRefresh=t.some(function(e){return P._diffQuery[e]}))}if(!P._hadError&&P._isMounted&&!e._dataRefresh)return Promise.resolve();var n=[],o=e.options.asyncData&&"function"==typeof e.options.asyncData,l=!!e.options.fetch,d=o&&l?30:45;if(o){var m=Object(c.m)(e.options.asyncData,h.context).then(function(r){Object(c.a)(e,r),P.$loading.increase&&P.$loading.increase(d)});n.push(m)}if(P.$loading.manual=!1===e.options.loading,l){var p=e.options.fetch(h.context);p&&(p instanceof Promise||"function"==typeof p.then)||(p=Promise.resolve(p)),p.then(function(e){P.$loading.increase&&P.$loading.increase(d)}),n.push(p)}return Promise.all(n)}));case 89:l||(this.$loading.finish&&!this.$loading.manual&&this.$loading.finish(),n()),e.next=106;break;case 92:if(e.prev=92,e.t2=e.catch(27),"ERR_REDIRECT"!==(I=e.t2||{}).message){e.next=97;break}return e.abrupt("return",this.$nuxt.$emit("routeChanged",r,t,I));case 97:return x=[],Object(c.i)(I),"function"==typeof(L=m.a.layout)&&(L=L(h.context)),e.next=103,this.loadLayout(L);case 103:this.error(I),this.$nuxt.$emit("routeChanged",r,t,I),n();case 106:case"end":return e.stop()}},e,this,[[27,92],[46,80],[50,66,70,78],[71,,73,77]])}))).apply(this,arguments)}function z(e,t){Object(c.c)(e,function(e,t,n,l){return"object"!==Object(r.a)(e)||e.options||((e=o.a.extend(e))._Ctor=e,n.components[l]=e),e})}function I(e){this._hadError&&this._dateLastError===this.$options.nuxt.dateErr&&this.error();var r=this.$options.nuxt.err?m.a.layout:e.matched[0].components.default.options.layout;"function"==typeof r&&(r=r(h.context)),this.setLayout(r)}function L(e,r){var t=this;!1===this._pathChanged&&!1===this._queryChanged||o.a.nextTick(function(){var r=[],n=Object(c.f)(e,r),l=Object(c.e)(e,r);n.forEach(function(e,i){if(e&&e.constructor._dataRefresh&&l[i]===e.constructor&&!0!==e.$vnode.data.keepAlive&&"function"==typeof e.constructor.options.data){var r=e.constructor.options.data.call(e);for(var t in r)o.a.set(e.$data,t,r[t])}}),I.call(t,e)})}function P(e){window.onNuxtReadyCbs.forEach(function(r){"function"==typeof r&&r(e)}),"function"==typeof window._onNuxtLoaded&&window._onNuxtLoaded(e),v.afterEach(function(r,t){o.a.nextTick(function(){return e.$nuxt.$emit("routeChanged",r,t)})})}function R(){return(R=Object(n.a)(regeneratorRuntime.mark(function e(r){var t,n,l,d;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return h=r.app,v=r.router,r.store,e.next=5,Promise.all(j(v));case 5:if(t=e.sent,n=new o.a(h),l=function(){n.$mount("#__nuxt"),v.afterEach(z),v.afterEach(L.bind(n)),o.a.nextTick(function(){P(n)})},n.setTransitions=n.$options.nuxt.setTransitions.bind(n),t.length&&(n.setTransitions(k(t,v.currentRoute)),x=v.currentRoute.matched.map(function(e){return Object(c.b)(e.path)(v.currentRoute.params)})),n.$loading={},w.error&&n.error(w.error),v.beforeEach(S.bind(n)),v.beforeEach(C.bind(n)),!w.serverRendered){e.next=17;break}return l(),e.abrupt("return");case 17:d=function(){z(v.currentRoute,v.currentRoute),I.call(n,v.currentRoute),l()},C.call(n,v.currentRoute,v.currentRoute,function(path){if(path){var e=v.afterEach(function(r,t){e(),d()});v.push(path,void 0,function(e){e&&y(e)})}else d()});case 19:case"end":return e.stop()}},e)}))).apply(this,arguments)}Object(m.b)().then(function(e){return R.apply(this,arguments)}).catch(function(e){var r=new Error(e);r.message="[nuxt] Error while mounting app: "+r.message,y(r)})}.call(this,t(15))},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,r,t){"use strict";var n=t(52);t.n(n).a},function(e,r,t){(e.exports=t(29)(!1)).push([e.i,".__nuxt-error-page{padding:1rem;background:#f7f8fb;color:#47494e;text-align:center;display:flex;justify-content:center;align-items:center;flex-direction:column;font-family:sans-serif;font-weight:100!important;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;position:absolute;top:0;left:0;right:0;bottom:0}.__nuxt-error-page .error{max-width:450px}.__nuxt-error-page .title{font-size:1.5rem;margin-top:15px;color:#47494e;margin-bottom:8px}.__nuxt-error-page .description{color:#7f828b;line-height:21px;margin-bottom:10px}.__nuxt-error-page a{color:#7f828b!important;text-decoration:none}.__nuxt-error-page .logo{position:fixed;left:12px;bottom:12px}",""])},function(e,r,t){"use strict";var n=t(53);t.n(n).a},function(e,r,t){(e.exports=t(29)(!1)).push([e.i,".nuxt-progress{position:fixed;top:0;left:0;right:0;height:2px;width:0;opacity:1;transition:width .1s,opacity .4s;background-color:#fff;z-index:999999}.nuxt-progress.nuxt-progress-notransition{transition:none}.nuxt-progress-failed{background-color:red}",""])},,,function(e,r,t){var content=t(216);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,t(30).default)("088a1e8c",content,!0,{sourceMap:!1})},function(e,r,t){(e.exports=t(29)(!1)).push([e.i,'.hljs{display:block;overflow-x:auto;padding:.5em;color:#383a42;background:#fafafa}.hljs-comment,.hljs-quote{color:#a0a1a7;font-style:italic}.hljs-doctag,.hljs-formula,.hljs-keyword{color:#a626a4}.hljs-deletion,.hljs-name,.hljs-section,.hljs-selector-tag,.hljs-subst{color:#e45649}.hljs-literal{color:#0184bb}.hljs-addition,.hljs-attribute,.hljs-meta-string,.hljs-regexp,.hljs-string{color:#50a14f}.hljs-built_in,.hljs-class .hljs-title{color:#c18401}.hljs-attr,.hljs-number,.hljs-selector-attr,.hljs-selector-class,.hljs-selector-pseudo,.hljs-template-variable,.hljs-type,.hljs-variable{color:#986801}.hljs-bullet,.hljs-link,.hljs-meta,.hljs-selector-id,.hljs-symbol,.hljs-title{color:#4078f2}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}.hljs-link{text-decoration:underline}.m-none{margin:0}.p-none{padding:0}.m-t-none{margin-top:0}.p-t-none{padding-top:0}.m-r-none{margin-right:0}.p-r-none{padding-right:0}.m-b-none{margin-bottom:0}.p-b-none{padding-bottom:0}.m-l-none{margin-left:0}.p-l-none{padding-left:0}.m-xxs{margin:.125rem}.p-xxs{padding:.125rem}.m-t-xxs{margin-top:.125rem}.p-t-xxs{padding-top:.125rem}.m-r-xxs{margin-right:.125rem}.p-r-xxs{padding-right:.125rem}.m-b-xxs{margin-bottom:.125rem}.p-b-xxs{padding-bottom:.125rem}.m-l-xxs{margin-left:.125rem}.p-l-xxs{padding-left:.125rem}.m-xs{margin:.25rem}.p-xs{padding:.25rem}.m-t-xs{margin-top:.25rem}.p-t-xs{padding-top:.25rem}.m-r-xs{margin-right:.25rem}.p-r-xs{padding-right:.25rem}.m-b-xs{margin-bottom:.25rem}.p-b-xs{padding-bottom:.25rem}.m-l-xs{margin-left:.25rem}.p-l-xs{padding-left:.25rem}.m-sm{margin:.5rem}.p-sm{padding:.5rem}.m-t-sm{margin-top:.5rem}.p-t-sm{padding-top:.5rem}.m-r-sm{margin-right:.5rem}.p-r-sm{padding-right:.5rem}.m-b-sm{margin-bottom:.5rem}.p-b-sm{padding-bottom:.5rem}.m-l-sm{margin-left:.5rem}.p-l-sm{padding-left:.5rem}.m-md{margin:1rem}.p-md{padding:1rem}.m-t-md{margin-top:1rem}.p-t-md{padding-top:1rem}.m-r-md{margin-right:1rem}.p-r-md{padding-right:1rem}.m-b-md{margin-bottom:1rem}.p-b-md{padding-bottom:1rem}.m-l-md{margin-left:1rem}.p-l-md{padding-left:1rem}.m-lg{margin:2rem}.p-lg{padding:2rem}.m-t-lg{margin-top:2rem}.p-t-lg{padding-top:2rem}.m-r-lg{margin-right:2rem}.p-r-lg{padding-right:2rem}.m-b-lg{margin-bottom:2rem}.p-b-lg{padding-bottom:2rem}.m-l-lg{margin-left:2rem}.p-l-lg{padding-left:2rem}.m-xl{margin:4rem}.p-xl{padding:4rem}.m-t-xl{margin-top:4rem}.p-t-xl{padding-top:4rem}.m-r-xl{margin-right:4rem}.p-r-xl{padding-right:4rem}.m-b-xl{margin-bottom:4rem}.p-b-xl{padding-bottom:4rem}.m-l-xl{margin-left:4rem}.p-l-xl{padding-left:4rem}.m-xxl{margin:8rem}.p-xxl{padding:8rem}.m-t-xxl{margin-top:8rem}.p-t-xxl{padding-top:8rem}.m-r-xxl{margin-right:8rem}.p-r-xxl{padding-right:8rem}.m-b-xxl{margin-bottom:8rem}.p-b-xxl{padding-bottom:8rem}.m-l-xxl{margin-left:8rem}.p-l-xxl{padding-left:8rem}.hljs{background:none}.nirebu-title{font-family:capriola,sans-serif;-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;overflow:visible}.has-background-gradient{background-image:linear-gradient(180deg,#940dff,#6500e5)}.main{display:flex;min-height:100vh;flex-direction:column}.section{flex:1}blockquote{font-style:italic}\n\n/*! bulma.io v0.7.4 | MIT License | github.com/jgthms/bulma */@-webkit-keyframes spinAround{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes spinAround{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.breadcrumb,.button,.delete,.file,.is-unselectable,.modal-close,.pagination-ellipsis,.pagination-link,.pagination-next,.pagination-previous,.tabs{-webkit-touch-callout:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.navbar-link:not(.is-arrowless):after,.select:not(.is-multiple):not(.is-loading):after{border:3px solid transparent;border-radius:2px;border-right:0;border-top:0;content:" ";display:block;height:.625em;margin-top:-.4375em;pointer-events:none;position:absolute;top:50%;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);-webkit-transform-origin:center;transform-origin:center;width:.625em}.block:not(:last-child),.box:not(:last-child),.breadcrumb:not(:last-child),.content:not(:last-child),.highlight:not(:last-child),.level:not(:last-child),.list:not(:last-child),.message:not(:last-child),.notification:not(:last-child),.progress:not(:last-child),.subtitle:not(:last-child),.table-container:not(:last-child),.table:not(:last-child),.tabs:not(:last-child),.title:not(:last-child){margin-bottom:1.5rem}.delete,.modal-close{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(10,10,10,.2);border:none;border-radius:290486px;cursor:pointer;pointer-events:auto;display:inline-block;flex-grow:0;flex-shrink:0;font-size:0;height:20px;max-height:20px;max-width:20px;min-height:20px;min-width:20px;outline:none;position:relative;vertical-align:top;width:20px}.delete:after,.delete:before,.modal-close:after,.modal-close:before{background-color:#fff;content:"";display:block;left:50%;position:absolute;top:50%;-webkit-transform:translateX(-50%) translateY(-50%) rotate(45deg);transform:translateX(-50%) translateY(-50%) rotate(45deg);-webkit-transform-origin:center center;transform-origin:center center}.delete:before,.modal-close:before{height:2px;width:50%}.delete:after,.modal-close:after{height:50%;width:2px}.delete:focus,.delete:hover,.modal-close:focus,.modal-close:hover{background-color:rgba(10,10,10,.3)}.delete:active,.modal-close:active{background-color:rgba(10,10,10,.4)}.is-small.delete,.is-small.modal-close{height:16px;max-height:16px;max-width:16px;min-height:16px;min-width:16px;width:16px}.is-medium.delete,.is-medium.modal-close{height:24px;max-height:24px;max-width:24px;min-height:24px;min-width:24px;width:24px}.is-large.delete,.is-large.modal-close{height:32px;max-height:32px;max-width:32px;min-height:32px;min-width:32px;width:32px}.button.is-loading:after,.control.is-loading:after,.loader,.select.is-loading:after{-webkit-animation:spinAround .5s linear infinite;animation:spinAround .5s linear infinite;border-radius:290486px;border-color:transparent transparent #dbdbdb #dbdbdb;border-style:solid;border-width:2px;content:"";display:block;height:1em;position:relative;width:1em}.hero-video,.image.is-1by1 .has-ratio,.image.is-1by1 img,.image.is-1by2 .has-ratio,.image.is-1by2 img,.image.is-1by3 .has-ratio,.image.is-1by3 img,.image.is-2by1 .has-ratio,.image.is-2by1 img,.image.is-2by3 .has-ratio,.image.is-2by3 img,.image.is-3by1 .has-ratio,.image.is-3by1 img,.image.is-3by2 .has-ratio,.image.is-3by2 img,.image.is-3by4 .has-ratio,.image.is-3by4 img,.image.is-3by5 .has-ratio,.image.is-3by5 img,.image.is-4by3 .has-ratio,.image.is-4by3 img,.image.is-4by5 .has-ratio,.image.is-4by5 img,.image.is-5by3 .has-ratio,.image.is-5by3 img,.image.is-5by4 .has-ratio,.image.is-5by4 img,.image.is-9by16 .has-ratio,.image.is-9by16 img,.image.is-16by9 .has-ratio,.image.is-16by9 img,.image.is-square .has-ratio,.image.is-square img,.is-overlay,.modal,.modal-background{bottom:0;left:0;position:absolute;right:0;top:0}.button,.file-cta,.file-name,.input,.pagination-ellipsis,.pagination-link,.pagination-next,.pagination-previous,.select select,.textarea{-moz-appearance:none;-webkit-appearance:none;align-items:center;border:1px solid transparent;border-radius:4px;box-shadow:none;display:inline-flex;font-size:1rem;height:2.25em;justify-content:flex-start;line-height:1.5;padding:calc(.375em - 1px) calc(.625em - 1px);position:relative;vertical-align:top}.button:active,.button:focus,.file-cta:active,.file-cta:focus,.file-name:active,.file-name:focus,.input:active,.input:focus,.is-active.button,.is-active.file-cta,.is-active.file-name,.is-active.input,.is-active.pagination-ellipsis,.is-active.pagination-link,.is-active.pagination-next,.is-active.pagination-previous,.is-active.textarea,.is-focused.button,.is-focused.file-cta,.is-focused.file-name,.is-focused.input,.is-focused.pagination-ellipsis,.is-focused.pagination-link,.is-focused.pagination-next,.is-focused.pagination-previous,.is-focused.textarea,.pagination-ellipsis:active,.pagination-ellipsis:focus,.pagination-link:active,.pagination-link:focus,.pagination-next:active,.pagination-next:focus,.pagination-previous:active,.pagination-previous:focus,.select select.is-active,.select select.is-focused,.select select:active,.select select:focus,.textarea:active,.textarea:focus{outline:none}.button[disabled],.file-cta[disabled],.file-name[disabled],.input[disabled],.pagination-ellipsis[disabled],.pagination-link[disabled],.pagination-next[disabled],.pagination-previous[disabled],.select fieldset[disabled] select,.select select[disabled],.textarea[disabled],fieldset[disabled] .button,fieldset[disabled] .file-cta,fieldset[disabled] .file-name,fieldset[disabled] .input,fieldset[disabled] .pagination-ellipsis,fieldset[disabled] .pagination-link,fieldset[disabled] .pagination-next,fieldset[disabled] .pagination-previous,fieldset[disabled] .select select,fieldset[disabled] .textarea{cursor:not-allowed}\n\n/*! minireset.css v0.0.4 | MIT License | github.com/jgthms/minireset.css */blockquote,body,dd,dl,dt,fieldset,figure,h1,h2,h3,h4,h5,h6,hr,html,iframe,legend,li,ol,p,pre,textarea,ul{margin:0;padding:0}h1,h2,h3,h4,h5,h6{font-size:100%;font-weight:400}ul{list-style:none}button,input,select,textarea{margin:0}html{box-sizing:border-box}*,:after,:before{box-sizing:inherit}embed,iframe,img,object,video{height:auto;max-width:100%}audio{max-width:100%}iframe{border:0}table{border-collapse:collapse;border-spacing:0}td,th{padding:0;text-align:left}html{background-color:#fff;font-size:16px;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;min-width:300px;overflow-x:hidden;overflow-y:scroll;text-rendering:optimizeLegibility;-webkit-text-size-adjust:100%;-moz-text-size-adjust:100%;-ms-text-size-adjust:100%;text-size-adjust:100%}article,aside,figure,footer,header,hgroup,section{display:block}body,button,input,select,textarea{font-family:BlinkMacSystemFont,-apple-system,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Helvetica,Arial,sans-serif}code,pre{-moz-osx-font-smoothing:auto;-webkit-font-smoothing:auto;font-family:monospace}body{color:#4a4a4a;font-size:1rem;font-weight:400;line-height:1.5}a{color:#6500e5;cursor:pointer;text-decoration:none}a strong{color:currentColor}a:hover{color:#940dff}code{color:#ff3860;font-size:.875em;font-weight:400;padding:.25em .5em}code,hr{background-color:#f5f5f5}hr{border:none;display:block;height:2px;margin:1.5rem 0}img{height:auto;max-width:100%}input[type=checkbox],input[type=radio]{vertical-align:baseline}small{font-size:.875em}span{font-style:inherit;font-weight:inherit}strong{color:#363636;font-weight:700}fieldset{border:none}pre{-webkit-overflow-scrolling:touch;background-color:#f5f5f5;color:#4a4a4a;font-size:.875em;overflow-x:auto;padding:1.25rem 1.5rem;white-space:pre;word-wrap:normal}pre code{background-color:transparent;color:currentColor;font-size:1em;padding:0}table td,table th{text-align:left;vertical-align:top}table th{color:#363636}.is-clearfix:after{clear:both;content:" ";display:table}.is-pulled-left{float:left!important}.is-pulled-right{float:right!important}.is-clipped{overflow:hidden!important}.is-size-1{font-size:"none",0!important}.is-size-2{font-size:"xxs",.125!important}.is-size-3{font-size:"xs",.25!important}.is-size-4{font-size:"sm",.5!important}.is-size-5{font-size:"md",1!important}.is-size-6{font-size:"lg",2!important}.is-size-7{font-size:"xl",4!important}.is-size-8{font-size:"xxl",8!important}@media screen and (max-width:768px){.is-size-1-mobile{font-size:"none",0!important}.is-size-2-mobile{font-size:"xxs",.125!important}.is-size-3-mobile{font-size:"xs",.25!important}.is-size-4-mobile{font-size:"sm",.5!important}.is-size-5-mobile{font-size:"md",1!important}.is-size-6-mobile{font-size:"lg",2!important}.is-size-7-mobile{font-size:"xl",4!important}.is-size-8-mobile{font-size:"xxl",8!important}}@media print,screen and (min-width:769px){.is-size-1-tablet{font-size:"none",0!important}.is-size-2-tablet{font-size:"xxs",.125!important}.is-size-3-tablet{font-size:"xs",.25!important}.is-size-4-tablet{font-size:"sm",.5!important}.is-size-5-tablet{font-size:"md",1!important}.is-size-6-tablet{font-size:"lg",2!important}.is-size-7-tablet{font-size:"xl",4!important}.is-size-8-tablet{font-size:"xxl",8!important}}@media screen and (max-width:1087px){.is-size-1-touch{font-size:"none",0!important}.is-size-2-touch{font-size:"xxs",.125!important}.is-size-3-touch{font-size:"xs",.25!important}.is-size-4-touch{font-size:"sm",.5!important}.is-size-5-touch{font-size:"md",1!important}.is-size-6-touch{font-size:"lg",2!important}.is-size-7-touch{font-size:"xl",4!important}.is-size-8-touch{font-size:"xxl",8!important}}@media screen and (min-width:1088px){.is-size-1-desktop{font-size:"none",0!important}.is-size-2-desktop{font-size:"xxs",.125!important}.is-size-3-desktop{font-size:"xs",.25!important}.is-size-4-desktop{font-size:"sm",.5!important}.is-size-5-desktop{font-size:"md",1!important}.is-size-6-desktop{font-size:"lg",2!important}.is-size-7-desktop{font-size:"xl",4!important}.is-size-8-desktop{font-size:"xxl",8!important}}@media screen and (min-width:1280px){.is-size-1-widescreen{font-size:"none",0!important}.is-size-2-widescreen{font-size:"xxs",.125!important}.is-size-3-widescreen{font-size:"xs",.25!important}.is-size-4-widescreen{font-size:"sm",.5!important}.is-size-5-widescreen{font-size:"md",1!important}.is-size-6-widescreen{font-size:"lg",2!important}.is-size-7-widescreen{font-size:"xl",4!important}.is-size-8-widescreen{font-size:"xxl",8!important}}@media screen and (min-width:1472px){.is-size-1-fullhd{font-size:"none",0!important}.is-size-2-fullhd{font-size:"xxs",.125!important}.is-size-3-fullhd{font-size:"xs",.25!important}.is-size-4-fullhd{font-size:"sm",.5!important}.is-size-5-fullhd{font-size:"md",1!important}.is-size-6-fullhd{font-size:"lg",2!important}.is-size-7-fullhd{font-size:"xl",4!important}.is-size-8-fullhd{font-size:"xxl",8!important}}.has-text-centered{text-align:center!important}.has-text-justified{text-align:justify!important}.has-text-left{text-align:left!important}.has-text-right{text-align:right!important}@media screen and (max-width:768px){.has-text-centered-mobile{text-align:center!important}}@media print,screen and (min-width:769px){.has-text-centered-tablet{text-align:center!important}}@media screen and (min-width:769px) and (max-width:1087px){.has-text-centered-tablet-only{text-align:center!important}}@media screen and (max-width:1087px){.has-text-centered-touch{text-align:center!important}}@media screen and (min-width:1088px){.has-text-centered-desktop{text-align:center!important}}@media screen and (min-width:1088px) and (max-width:1279px){.has-text-centered-desktop-only{text-align:center!important}}@media screen and (min-width:1280px){.has-text-centered-widescreen{text-align:center!important}}@media screen and (min-width:1280px) and (max-width:1471px){.has-text-centered-widescreen-only{text-align:center!important}}@media screen and (min-width:1472px){.has-text-centered-fullhd{text-align:center!important}}@media screen and (max-width:768px){.has-text-justified-mobile{text-align:justify!important}}@media print,screen and (min-width:769px){.has-text-justified-tablet{text-align:justify!important}}@media screen and (min-width:769px) and (max-width:1087px){.has-text-justified-tablet-only{text-align:justify!important}}@media screen and (max-width:1087px){.has-text-justified-touch{text-align:justify!important}}@media screen and (min-width:1088px){.has-text-justified-desktop{text-align:justify!important}}@media screen and (min-width:1088px) and (max-width:1279px){.has-text-justified-desktop-only{text-align:justify!important}}@media screen and (min-width:1280px){.has-text-justified-widescreen{text-align:justify!important}}@media screen and (min-width:1280px) and (max-width:1471px){.has-text-justified-widescreen-only{text-align:justify!important}}@media screen and (min-width:1472px){.has-text-justified-fullhd{text-align:justify!important}}@media screen and (max-width:768px){.has-text-left-mobile{text-align:left!important}}@media print,screen and (min-width:769px){.has-text-left-tablet{text-align:left!important}}@media screen and (min-width:769px) and (max-width:1087px){.has-text-left-tablet-only{text-align:left!important}}@media screen and (max-width:1087px){.has-text-left-touch{text-align:left!important}}@media screen and (min-width:1088px){.has-text-left-desktop{text-align:left!important}}@media screen and (min-width:1088px) and (max-width:1279px){.has-text-left-desktop-only{text-align:left!important}}@media screen and (min-width:1280px){.has-text-left-widescreen{text-align:left!important}}@media screen and (min-width:1280px) and (max-width:1471px){.has-text-left-widescreen-only{text-align:left!important}}@media screen and (min-width:1472px){.has-text-left-fullhd{text-align:left!important}}@media screen and (max-width:768px){.has-text-right-mobile{text-align:right!important}}@media print,screen and (min-width:769px){.has-text-right-tablet{text-align:right!important}}@media screen and (min-width:769px) and (max-width:1087px){.has-text-right-tablet-only{text-align:right!important}}@media screen and (max-width:1087px){.has-text-right-touch{text-align:right!important}}@media screen and (min-width:1088px){.has-text-right-desktop{text-align:right!important}}@media screen and (min-width:1088px) and (max-width:1279px){.has-text-right-desktop-only{text-align:right!important}}@media screen and (min-width:1280px){.has-text-right-widescreen{text-align:right!important}}@media screen and (min-width:1280px) and (max-width:1471px){.has-text-right-widescreen-only{text-align:right!important}}@media screen and (min-width:1472px){.has-text-right-fullhd{text-align:right!important}}.is-capitalized{text-transform:capitalize!important}.is-lowercase{text-transform:lowercase!important}.is-uppercase{text-transform:uppercase!important}.is-italic{font-style:italic!important}.has-text-white{color:#fff!important}a.has-text-white:focus,a.has-text-white:hover{color:#e6e6e6!important}.has-background-white{background-color:#fff!important}.has-text-black{color:#0a0a0a!important}a.has-text-black:focus,a.has-text-black:hover{color:#000!important}.has-background-black{background-color:#0a0a0a!important}.has-text-light{color:#f5f5f5!important}a.has-text-light:focus,a.has-text-light:hover{color:#dbdbdb!important}.has-background-light{background-color:#f5f5f5!important}.has-text-dark{color:#363636!important}a.has-text-dark:focus,a.has-text-dark:hover{color:#1c1c1c!important}.has-background-dark{background-color:#363636!important}.has-text-primary{color:#6500e5!important}a.has-text-primary:focus,a.has-text-primary:hover{color:#4f00b2!important}.has-background-primary{background-color:#6500e5!important}.has-text-link{color:#6500e5!important}a.has-text-link:focus,a.has-text-link:hover{color:#4f00b2!important}.has-background-link{background-color:#6500e5!important}.has-text-info{color:#209cee!important}a.has-text-info:focus,a.has-text-info:hover{color:#0f81cc!important}.has-background-info{background-color:#209cee!important}.has-text-success{color:#23d160!important}a.has-text-success:focus,a.has-text-success:hover{color:#1ca64c!important}.has-background-success{background-color:#23d160!important}.has-text-warning{color:#ffdd57!important}a.has-text-warning:focus,a.has-text-warning:hover{color:#ffd324!important}.has-background-warning{background-color:#ffdd57!important}.has-text-danger{color:#ff3860!important}a.has-text-danger:focus,a.has-text-danger:hover{color:#ff0537!important}.has-background-danger{background-color:#ff3860!important}.has-text-black-bis{color:#121212!important}.has-background-black-bis{background-color:#121212!important}.has-text-black-ter{color:#242424!important}.has-background-black-ter{background-color:#242424!important}.has-text-grey-darker{color:#363636!important}.has-background-grey-darker{background-color:#363636!important}.has-text-grey-dark{color:#4a4a4a!important}.has-background-grey-dark{background-color:#4a4a4a!important}.has-text-grey{color:#7a7a7a!important}.has-background-grey{background-color:#7a7a7a!important}.has-text-grey-light{color:#b5b5b5!important}.has-background-grey-light{background-color:#b5b5b5!important}.has-text-grey-lighter{color:#dbdbdb!important}.has-background-grey-lighter{background-color:#dbdbdb!important}.has-text-white-ter{color:#f5f5f5!important}.has-background-white-ter{background-color:#f5f5f5!important}.has-text-white-bis{color:#fafafa!important}.has-background-white-bis{background-color:#fafafa!important}.has-text-weight-light{font-weight:300!important}.has-text-weight-normal{font-weight:400!important}.has-text-weight-semibold{font-weight:600!important}.has-text-weight-bold{font-weight:700!important}.is-family-primary,.is-family-sans-serif,.is-family-secondary{font-family:BlinkMacSystemFont,-apple-system,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Helvetica,Arial,sans-serif!important}.is-family-code,.is-family-monospace{font-family:monospace!important}.is-block{display:block!important}@media screen and (max-width:768px){.is-block-mobile{display:block!important}}@media print,screen and (min-width:769px){.is-block-tablet{display:block!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-block-tablet-only{display:block!important}}@media screen and (max-width:1087px){.is-block-touch{display:block!important}}@media screen and (min-width:1088px){.is-block-desktop{display:block!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-block-desktop-only{display:block!important}}@media screen and (min-width:1280px){.is-block-widescreen{display:block!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-block-widescreen-only{display:block!important}}@media screen and (min-width:1472px){.is-block-fullhd{display:block!important}}.is-flex{display:flex!important}@media screen and (max-width:768px){.is-flex-mobile{display:flex!important}}@media print,screen and (min-width:769px){.is-flex-tablet{display:flex!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-flex-tablet-only{display:flex!important}}@media screen and (max-width:1087px){.is-flex-touch{display:flex!important}}@media screen and (min-width:1088px){.is-flex-desktop{display:flex!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-flex-desktop-only{display:flex!important}}@media screen and (min-width:1280px){.is-flex-widescreen{display:flex!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-flex-widescreen-only{display:flex!important}}@media screen and (min-width:1472px){.is-flex-fullhd{display:flex!important}}.is-inline{display:inline!important}@media screen and (max-width:768px){.is-inline-mobile{display:inline!important}}@media print,screen and (min-width:769px){.is-inline-tablet{display:inline!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-inline-tablet-only{display:inline!important}}@media screen and (max-width:1087px){.is-inline-touch{display:inline!important}}@media screen and (min-width:1088px){.is-inline-desktop{display:inline!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-inline-desktop-only{display:inline!important}}@media screen and (min-width:1280px){.is-inline-widescreen{display:inline!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-inline-widescreen-only{display:inline!important}}@media screen and (min-width:1472px){.is-inline-fullhd{display:inline!important}}.is-inline-block{display:inline-block!important}@media screen and (max-width:768px){.is-inline-block-mobile{display:inline-block!important}}@media print,screen and (min-width:769px){.is-inline-block-tablet{display:inline-block!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-inline-block-tablet-only{display:inline-block!important}}@media screen and (max-width:1087px){.is-inline-block-touch{display:inline-block!important}}@media screen and (min-width:1088px){.is-inline-block-desktop{display:inline-block!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-inline-block-desktop-only{display:inline-block!important}}@media screen and (min-width:1280px){.is-inline-block-widescreen{display:inline-block!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-inline-block-widescreen-only{display:inline-block!important}}@media screen and (min-width:1472px){.is-inline-block-fullhd{display:inline-block!important}}.is-inline-flex{display:inline-flex!important}@media screen and (max-width:768px){.is-inline-flex-mobile{display:inline-flex!important}}@media print,screen and (min-width:769px){.is-inline-flex-tablet{display:inline-flex!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-inline-flex-tablet-only{display:inline-flex!important}}@media screen and (max-width:1087px){.is-inline-flex-touch{display:inline-flex!important}}@media screen and (min-width:1088px){.is-inline-flex-desktop{display:inline-flex!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-inline-flex-desktop-only{display:inline-flex!important}}@media screen and (min-width:1280px){.is-inline-flex-widescreen{display:inline-flex!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-inline-flex-widescreen-only{display:inline-flex!important}}@media screen and (min-width:1472px){.is-inline-flex-fullhd{display:inline-flex!important}}.is-hidden{display:none!important}.is-sr-only{border:none!important;clip:rect(0,0,0,0)!important;height:.01em!important;overflow:hidden!important;padding:0!important;position:absolute!important;white-space:nowrap!important;width:.01em!important}@media screen and (max-width:768px){.is-hidden-mobile{display:none!important}}@media print,screen and (min-width:769px){.is-hidden-tablet{display:none!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-hidden-tablet-only{display:none!important}}@media screen and (max-width:1087px){.is-hidden-touch{display:none!important}}@media screen and (min-width:1088px){.is-hidden-desktop{display:none!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-hidden-desktop-only{display:none!important}}@media screen and (min-width:1280px){.is-hidden-widescreen{display:none!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-hidden-widescreen-only{display:none!important}}@media screen and (min-width:1472px){.is-hidden-fullhd{display:none!important}}.is-invisible{visibility:hidden!important}@media screen and (max-width:768px){.is-invisible-mobile{visibility:hidden!important}}@media print,screen and (min-width:769px){.is-invisible-tablet{visibility:hidden!important}}@media screen and (min-width:769px) and (max-width:1087px){.is-invisible-tablet-only{visibility:hidden!important}}@media screen and (max-width:1087px){.is-invisible-touch{visibility:hidden!important}}@media screen and (min-width:1088px){.is-invisible-desktop{visibility:hidden!important}}@media screen and (min-width:1088px) and (max-width:1279px){.is-invisible-desktop-only{visibility:hidden!important}}@media screen and (min-width:1280px){.is-invisible-widescreen{visibility:hidden!important}}@media screen and (min-width:1280px) and (max-width:1471px){.is-invisible-widescreen-only{visibility:hidden!important}}@media screen and (min-width:1472px){.is-invisible-fullhd{visibility:hidden!important}}.is-marginless{margin:0!important}.is-paddingless{padding:0!important}.is-radiusless{border-radius:0!important}.is-shadowless{box-shadow:none!important}.box{background-color:#fff;border-radius:6px;box-shadow:0 2px 3px rgba(10,10,10,.1),0 0 0 1px rgba(10,10,10,.1);color:#4a4a4a;display:block;padding:1.25rem}a.box:focus,a.box:hover{box-shadow:0 2px 3px rgba(10,10,10,.1),0 0 0 1px #6500e5}a.box:active{box-shadow:inset 0 1px 2px rgba(10,10,10,.2),0 0 0 1px #6500e5}.button{background-color:#fff;border-color:#dbdbdb;border-width:1px;color:#363636;cursor:pointer;justify-content:center;padding:calc(.375em - 1px) .75em;text-align:center;white-space:nowrap}.button strong{color:inherit}.button .icon,.button .icon.is-large,.button .icon.is-medium,.button .icon.is-small{height:1.5em;width:1.5em}.button .icon:first-child:not(:last-child){margin-left:calc(-.375em - 1px);margin-right:.1875em}.button .icon:last-child:not(:first-child){margin-left:.1875em;margin-right:calc(-.375em - 1px)}.button .icon:first-child:last-child{margin-left:calc(-.375em - 1px);margin-right:calc(-.375em - 1px)}.button.is-hovered,.button:hover{border-color:#b5b5b5;color:#940dff}.button.is-focused,.button:focus{border-color:#3273dc;color:#363636}.button.is-focused:not(:active),.button:focus:not(:active){box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.button.is-active,.button:active{border-color:#4a4a4a;color:#363636}.button.is-text{background-color:transparent;border-color:transparent;color:#4a4a4a;text-decoration:underline}.button.is-text.is-focused,.button.is-text.is-hovered,.button.is-text:focus,.button.is-text:hover{background-color:#f5f5f5;color:#363636}.button.is-text.is-active,.button.is-text:active{background-color:#e8e8e8;color:#363636}.button.is-text[disabled],fieldset[disabled] .button.is-text{background-color:transparent;border-color:transparent;box-shadow:none}.button.is-white{background-color:#fff;border-color:transparent;color:#0a0a0a}.button.is-white.is-hovered,.button.is-white:hover{background-color:#f9f9f9;border-color:transparent;color:#0a0a0a}.button.is-white.is-focused,.button.is-white:focus{border-color:transparent;color:#0a0a0a}.button.is-white.is-focused:not(:active),.button.is-white:focus:not(:active){box-shadow:0 0 0 .125em hsla(0,0%,100%,.25)}.button.is-white.is-active,.button.is-white:active{background-color:#f2f2f2;border-color:transparent;color:#0a0a0a}.button.is-white[disabled],fieldset[disabled] .button.is-white{background-color:#fff;border-color:transparent;box-shadow:none}.button.is-white.is-inverted{background-color:#0a0a0a;color:#fff}.button.is-white.is-inverted:hover{background-color:#000}.button.is-white.is-inverted[disabled],fieldset[disabled] .button.is-white.is-inverted{background-color:#0a0a0a;border-color:transparent;box-shadow:none;color:#fff}.button.is-white.is-loading:after{border-color:transparent transparent #0a0a0a #0a0a0a!important}.button.is-white.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-white.is-outlined:focus,.button.is-white.is-outlined:hover{background-color:#fff;border-color:#fff;color:#0a0a0a}.button.is-white.is-outlined.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-white.is-outlined[disabled],fieldset[disabled] .button.is-white.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-white.is-inverted.is-outlined{background-color:transparent;border-color:#0a0a0a;color:#0a0a0a}.button.is-white.is-inverted.is-outlined:focus,.button.is-white.is-inverted.is-outlined:hover{background-color:#0a0a0a;color:#fff}.button.is-white.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-white.is-inverted.is-outlined{background-color:transparent;border-color:#0a0a0a;box-shadow:none;color:#0a0a0a}.button.is-black{background-color:#0a0a0a;border-color:transparent;color:#fff}.button.is-black.is-hovered,.button.is-black:hover{background-color:#040404;border-color:transparent;color:#fff}.button.is-black.is-focused,.button.is-black:focus{border-color:transparent;color:#fff}.button.is-black.is-focused:not(:active),.button.is-black:focus:not(:active){box-shadow:0 0 0 .125em rgba(10,10,10,.25)}.button.is-black.is-active,.button.is-black:active{background-color:#000;border-color:transparent;color:#fff}.button.is-black[disabled],fieldset[disabled] .button.is-black{background-color:#0a0a0a;border-color:transparent;box-shadow:none}.button.is-black.is-inverted{background-color:#fff;color:#0a0a0a}.button.is-black.is-inverted:hover{background-color:#f2f2f2}.button.is-black.is-inverted[disabled],fieldset[disabled] .button.is-black.is-inverted{background-color:#fff;border-color:transparent;box-shadow:none;color:#0a0a0a}.button.is-black.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-black.is-outlined{background-color:transparent;border-color:#0a0a0a;color:#0a0a0a}.button.is-black.is-outlined:focus,.button.is-black.is-outlined:hover{background-color:#0a0a0a;border-color:#0a0a0a;color:#fff}.button.is-black.is-outlined.is-loading:after{border-color:transparent transparent #0a0a0a #0a0a0a!important}.button.is-black.is-outlined[disabled],fieldset[disabled] .button.is-black.is-outlined{background-color:transparent;border-color:#0a0a0a;box-shadow:none;color:#0a0a0a}.button.is-black.is-inverted.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-black.is-inverted.is-outlined:focus,.button.is-black.is-inverted.is-outlined:hover{background-color:#fff;color:#0a0a0a}.button.is-black.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-black.is-inverted.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-light{background-color:#f5f5f5;border-color:transparent;color:#363636}.button.is-light.is-hovered,.button.is-light:hover{background-color:#eee;border-color:transparent;color:#363636}.button.is-light.is-focused,.button.is-light:focus{border-color:transparent;color:#363636}.button.is-light.is-focused:not(:active),.button.is-light:focus:not(:active){box-shadow:0 0 0 .125em hsla(0,0%,96.1%,.25)}.button.is-light.is-active,.button.is-light:active{background-color:#e8e8e8;border-color:transparent;color:#363636}.button.is-light[disabled],fieldset[disabled] .button.is-light{background-color:#f5f5f5;border-color:transparent;box-shadow:none}.button.is-light.is-inverted{background-color:#363636;color:#f5f5f5}.button.is-light.is-inverted:hover{background-color:#292929}.button.is-light.is-inverted[disabled],fieldset[disabled] .button.is-light.is-inverted{background-color:#363636;border-color:transparent;box-shadow:none;color:#f5f5f5}.button.is-light.is-loading:after{border-color:transparent transparent #363636 #363636!important}.button.is-light.is-outlined{background-color:transparent;border-color:#f5f5f5;color:#f5f5f5}.button.is-light.is-outlined:focus,.button.is-light.is-outlined:hover{background-color:#f5f5f5;border-color:#f5f5f5;color:#363636}.button.is-light.is-outlined.is-loading:after{border-color:transparent transparent #f5f5f5 #f5f5f5!important}.button.is-light.is-outlined[disabled],fieldset[disabled] .button.is-light.is-outlined{background-color:transparent;border-color:#f5f5f5;box-shadow:none;color:#f5f5f5}.button.is-light.is-inverted.is-outlined{background-color:transparent;border-color:#363636;color:#363636}.button.is-light.is-inverted.is-outlined:focus,.button.is-light.is-inverted.is-outlined:hover{background-color:#363636;color:#f5f5f5}.button.is-light.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-light.is-inverted.is-outlined{background-color:transparent;border-color:#363636;box-shadow:none;color:#363636}.button.is-dark{background-color:#363636;border-color:transparent;color:#f5f5f5}.button.is-dark.is-hovered,.button.is-dark:hover{background-color:#2f2f2f;border-color:transparent;color:#f5f5f5}.button.is-dark.is-focused,.button.is-dark:focus{border-color:transparent;color:#f5f5f5}.button.is-dark.is-focused:not(:active),.button.is-dark:focus:not(:active){box-shadow:0 0 0 .125em rgba(54,54,54,.25)}.button.is-dark.is-active,.button.is-dark:active{background-color:#292929;border-color:transparent;color:#f5f5f5}.button.is-dark[disabled],fieldset[disabled] .button.is-dark{background-color:#363636;border-color:transparent;box-shadow:none}.button.is-dark.is-inverted{background-color:#f5f5f5;color:#363636}.button.is-dark.is-inverted:hover{background-color:#e8e8e8}.button.is-dark.is-inverted[disabled],fieldset[disabled] .button.is-dark.is-inverted{background-color:#f5f5f5;border-color:transparent;box-shadow:none;color:#363636}.button.is-dark.is-loading:after{border-color:transparent transparent #f5f5f5 #f5f5f5!important}.button.is-dark.is-outlined{background-color:transparent;border-color:#363636;color:#363636}.button.is-dark.is-outlined:focus,.button.is-dark.is-outlined:hover{background-color:#363636;border-color:#363636;color:#f5f5f5}.button.is-dark.is-outlined.is-loading:after{border-color:transparent transparent #363636 #363636!important}.button.is-dark.is-outlined[disabled],fieldset[disabled] .button.is-dark.is-outlined{background-color:transparent;border-color:#363636;box-shadow:none;color:#363636}.button.is-dark.is-inverted.is-outlined{background-color:transparent;border-color:#f5f5f5;color:#f5f5f5}.button.is-dark.is-inverted.is-outlined:focus,.button.is-dark.is-inverted.is-outlined:hover{background-color:#f5f5f5;color:#363636}.button.is-dark.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-dark.is-inverted.is-outlined{background-color:transparent;border-color:#f5f5f5;box-shadow:none;color:#f5f5f5}.button.is-primary{background-color:#6500e5;border-color:transparent;color:#fff}.button.is-primary.is-hovered,.button.is-primary:hover{background-color:#5f00d8;border-color:transparent;color:#fff}.button.is-primary.is-focused,.button.is-primary:focus{border-color:transparent;color:#fff}.button.is-primary.is-focused:not(:active),.button.is-primary:focus:not(:active){box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.button.is-primary.is-active,.button.is-primary:active{background-color:#5a00cc;border-color:transparent;color:#fff}.button.is-primary[disabled],fieldset[disabled] .button.is-primary{background-color:#6500e5;border-color:transparent;box-shadow:none}.button.is-primary.is-inverted{background-color:#fff;color:#6500e5}.button.is-primary.is-inverted:hover{background-color:#f2f2f2}.button.is-primary.is-inverted[disabled],fieldset[disabled] .button.is-primary.is-inverted{background-color:#fff;border-color:transparent;box-shadow:none;color:#6500e5}.button.is-primary.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-primary.is-outlined{background-color:transparent;border-color:#6500e5;color:#6500e5}.button.is-primary.is-outlined:focus,.button.is-primary.is-outlined:hover{background-color:#6500e5;border-color:#6500e5;color:#fff}.button.is-primary.is-outlined.is-loading:after{border-color:transparent transparent #6500e5 #6500e5!important}.button.is-primary.is-outlined[disabled],fieldset[disabled] .button.is-primary.is-outlined{background-color:transparent;border-color:#6500e5;box-shadow:none;color:#6500e5}.button.is-primary.is-inverted.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-primary.is-inverted.is-outlined:focus,.button.is-primary.is-inverted.is-outlined:hover{background-color:#fff;color:#6500e5}.button.is-primary.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-primary.is-inverted.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-link{background-color:#6500e5;border-color:transparent;color:#fff}.button.is-link.is-hovered,.button.is-link:hover{background-color:#5f00d8;border-color:transparent;color:#fff}.button.is-link.is-focused,.button.is-link:focus{border-color:transparent;color:#fff}.button.is-link.is-focused:not(:active),.button.is-link:focus:not(:active){box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.button.is-link.is-active,.button.is-link:active{background-color:#5a00cc;border-color:transparent;color:#fff}.button.is-link[disabled],fieldset[disabled] .button.is-link{background-color:#6500e5;border-color:transparent;box-shadow:none}.button.is-link.is-inverted{background-color:#fff;color:#6500e5}.button.is-link.is-inverted:hover{background-color:#f2f2f2}.button.is-link.is-inverted[disabled],fieldset[disabled] .button.is-link.is-inverted{background-color:#fff;border-color:transparent;box-shadow:none;color:#6500e5}.button.is-link.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-link.is-outlined{background-color:transparent;border-color:#6500e5;color:#6500e5}.button.is-link.is-outlined:focus,.button.is-link.is-outlined:hover{background-color:#6500e5;border-color:#6500e5;color:#fff}.button.is-link.is-outlined.is-loading:after{border-color:transparent transparent #6500e5 #6500e5!important}.button.is-link.is-outlined[disabled],fieldset[disabled] .button.is-link.is-outlined{background-color:transparent;border-color:#6500e5;box-shadow:none;color:#6500e5}.button.is-link.is-inverted.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-link.is-inverted.is-outlined:focus,.button.is-link.is-inverted.is-outlined:hover{background-color:#fff;color:#6500e5}.button.is-link.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-link.is-inverted.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-info{background-color:#209cee;border-color:transparent;color:#fff}.button.is-info.is-hovered,.button.is-info:hover{background-color:#1496ed;border-color:transparent;color:#fff}.button.is-info.is-focused,.button.is-info:focus{border-color:transparent;color:#fff}.button.is-info.is-focused:not(:active),.button.is-info:focus:not(:active){box-shadow:0 0 0 .125em rgba(32,156,238,.25)}.button.is-info.is-active,.button.is-info:active{background-color:#118fe4;border-color:transparent;color:#fff}.button.is-info[disabled],fieldset[disabled] .button.is-info{background-color:#209cee;border-color:transparent;box-shadow:none}.button.is-info.is-inverted{background-color:#fff;color:#209cee}.button.is-info.is-inverted:hover{background-color:#f2f2f2}.button.is-info.is-inverted[disabled],fieldset[disabled] .button.is-info.is-inverted{background-color:#fff;border-color:transparent;box-shadow:none;color:#209cee}.button.is-info.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-info.is-outlined{background-color:transparent;border-color:#209cee;color:#209cee}.button.is-info.is-outlined:focus,.button.is-info.is-outlined:hover{background-color:#209cee;border-color:#209cee;color:#fff}.button.is-info.is-outlined.is-loading:after{border-color:transparent transparent #209cee #209cee!important}.button.is-info.is-outlined[disabled],fieldset[disabled] .button.is-info.is-outlined{background-color:transparent;border-color:#209cee;box-shadow:none;color:#209cee}.button.is-info.is-inverted.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-info.is-inverted.is-outlined:focus,.button.is-info.is-inverted.is-outlined:hover{background-color:#fff;color:#209cee}.button.is-info.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-info.is-inverted.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-success{background-color:#23d160;border-color:transparent;color:#fff}.button.is-success.is-hovered,.button.is-success:hover{background-color:#22c65b;border-color:transparent;color:#fff}.button.is-success.is-focused,.button.is-success:focus{border-color:transparent;color:#fff}.button.is-success.is-focused:not(:active),.button.is-success:focus:not(:active){box-shadow:0 0 0 .125em rgba(35,209,96,.25)}.button.is-success.is-active,.button.is-success:active{background-color:#20bc56;border-color:transparent;color:#fff}.button.is-success[disabled],fieldset[disabled] .button.is-success{background-color:#23d160;border-color:transparent;box-shadow:none}.button.is-success.is-inverted{background-color:#fff;color:#23d160}.button.is-success.is-inverted:hover{background-color:#f2f2f2}.button.is-success.is-inverted[disabled],fieldset[disabled] .button.is-success.is-inverted{background-color:#fff;border-color:transparent;box-shadow:none;color:#23d160}.button.is-success.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-success.is-outlined{background-color:transparent;border-color:#23d160;color:#23d160}.button.is-success.is-outlined:focus,.button.is-success.is-outlined:hover{background-color:#23d160;border-color:#23d160;color:#fff}.button.is-success.is-outlined.is-loading:after{border-color:transparent transparent #23d160 #23d160!important}.button.is-success.is-outlined[disabled],fieldset[disabled] .button.is-success.is-outlined{background-color:transparent;border-color:#23d160;box-shadow:none;color:#23d160}.button.is-success.is-inverted.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-success.is-inverted.is-outlined:focus,.button.is-success.is-inverted.is-outlined:hover{background-color:#fff;color:#23d160}.button.is-success.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-success.is-inverted.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-warning{background-color:#ffdd57;border-color:transparent;color:rgba(0,0,0,.7)}.button.is-warning.is-hovered,.button.is-warning:hover{background-color:#ffdb4a;border-color:transparent;color:rgba(0,0,0,.7)}.button.is-warning.is-focused,.button.is-warning:focus{border-color:transparent;color:rgba(0,0,0,.7)}.button.is-warning.is-focused:not(:active),.button.is-warning:focus:not(:active){box-shadow:0 0 0 .125em rgba(255,221,87,.25)}.button.is-warning.is-active,.button.is-warning:active{background-color:#ffd83d;border-color:transparent;color:rgba(0,0,0,.7)}.button.is-warning[disabled],fieldset[disabled] .button.is-warning{background-color:#ffdd57;border-color:transparent;box-shadow:none}.button.is-warning.is-inverted{color:#ffdd57}.button.is-warning.is-inverted,.button.is-warning.is-inverted:hover{background-color:rgba(0,0,0,.7)}.button.is-warning.is-inverted[disabled],fieldset[disabled] .button.is-warning.is-inverted{background-color:rgba(0,0,0,.7);border-color:transparent;box-shadow:none;color:#ffdd57}.button.is-warning.is-loading:after{border-color:transparent transparent rgba(0,0,0,.7) rgba(0,0,0,.7)!important}.button.is-warning.is-outlined{background-color:transparent;border-color:#ffdd57;color:#ffdd57}.button.is-warning.is-outlined:focus,.button.is-warning.is-outlined:hover{background-color:#ffdd57;border-color:#ffdd57;color:rgba(0,0,0,.7)}.button.is-warning.is-outlined.is-loading:after{border-color:transparent transparent #ffdd57 #ffdd57!important}.button.is-warning.is-outlined[disabled],fieldset[disabled] .button.is-warning.is-outlined{background-color:transparent;border-color:#ffdd57;box-shadow:none;color:#ffdd57}.button.is-warning.is-inverted.is-outlined{background-color:transparent;border-color:rgba(0,0,0,.7);color:rgba(0,0,0,.7)}.button.is-warning.is-inverted.is-outlined:focus,.button.is-warning.is-inverted.is-outlined:hover{background-color:rgba(0,0,0,.7);color:#ffdd57}.button.is-warning.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-warning.is-inverted.is-outlined{background-color:transparent;border-color:rgba(0,0,0,.7);box-shadow:none;color:rgba(0,0,0,.7)}.button.is-danger{background-color:#ff3860;border-color:transparent;color:#fff}.button.is-danger.is-hovered,.button.is-danger:hover{background-color:#ff2b56;border-color:transparent;color:#fff}.button.is-danger.is-focused,.button.is-danger:focus{border-color:transparent;color:#fff}.button.is-danger.is-focused:not(:active),.button.is-danger:focus:not(:active){box-shadow:0 0 0 .125em rgba(255,56,96,.25)}.button.is-danger.is-active,.button.is-danger:active{background-color:#ff1f4b;border-color:transparent;color:#fff}.button.is-danger[disabled],fieldset[disabled] .button.is-danger{background-color:#ff3860;border-color:transparent;box-shadow:none}.button.is-danger.is-inverted{background-color:#fff;color:#ff3860}.button.is-danger.is-inverted:hover{background-color:#f2f2f2}.button.is-danger.is-inverted[disabled],fieldset[disabled] .button.is-danger.is-inverted{background-color:#fff;border-color:transparent;box-shadow:none;color:#ff3860}.button.is-danger.is-loading:after{border-color:transparent transparent #fff #fff!important}.button.is-danger.is-outlined{background-color:transparent;border-color:#ff3860;color:#ff3860}.button.is-danger.is-outlined:focus,.button.is-danger.is-outlined:hover{background-color:#ff3860;border-color:#ff3860;color:#fff}.button.is-danger.is-outlined.is-loading:after{border-color:transparent transparent #ff3860 #ff3860!important}.button.is-danger.is-outlined[disabled],fieldset[disabled] .button.is-danger.is-outlined{background-color:transparent;border-color:#ff3860;box-shadow:none;color:#ff3860}.button.is-danger.is-inverted.is-outlined{background-color:transparent;border-color:#fff;color:#fff}.button.is-danger.is-inverted.is-outlined:focus,.button.is-danger.is-inverted.is-outlined:hover{background-color:#fff;color:#ff3860}.button.is-danger.is-inverted.is-outlined[disabled],fieldset[disabled] .button.is-danger.is-inverted.is-outlined{background-color:transparent;border-color:#fff;box-shadow:none;color:#fff}.button.is-small{border-radius:2px;font-size:.75rem}.button.is-normal{font-size:1rem}.button.is-medium{font-size:1.25rem}.button.is-large{font-size:1.5rem}.button[disabled],fieldset[disabled] .button{background-color:#fff;border-color:#dbdbdb;box-shadow:none;opacity:.5}.button.is-fullwidth{display:flex;width:100%}.button.is-loading{color:transparent!important;pointer-events:none}.button.is-loading:after{position:absolute;left:calc(50% - .5em);top:calc(50% - .5em);position:absolute!important}.button.is-static{background-color:#f5f5f5;border-color:#dbdbdb;color:#7a7a7a;box-shadow:none;pointer-events:none}.button.is-rounded{border-radius:290486px;padding-left:1em;padding-right:1em}.buttons{align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-start}.buttons .button{margin-bottom:.5rem}.buttons .button:not(:last-child):not(.is-fullwidth){margin-right:.5rem}.buttons:last-child{margin-bottom:-.5rem}.buttons:not(:last-child){margin-bottom:1rem}.buttons.are-small .button:not(.is-normal):not(.is-medium):not(.is-large){border-radius:2px;font-size:.75rem}.buttons.are-medium .button:not(.is-small):not(.is-normal):not(.is-large){font-size:1.25rem}.buttons.are-large .button:not(.is-small):not(.is-normal):not(.is-medium){font-size:1.5rem}.buttons.has-addons .button:not(:first-child){border-bottom-left-radius:0;border-top-left-radius:0}.buttons.has-addons .button:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0;margin-right:-1px}.buttons.has-addons .button:last-child{margin-right:0}.buttons.has-addons .button.is-hovered,.buttons.has-addons .button:hover{z-index:2}.buttons.has-addons .button.is-active,.buttons.has-addons .button.is-focused,.buttons.has-addons .button.is-selected,.buttons.has-addons .button:active,.buttons.has-addons .button:focus{z-index:3}.buttons.has-addons .button.is-active:hover,.buttons.has-addons .button.is-focused:hover,.buttons.has-addons .button.is-selected:hover,.buttons.has-addons .button:active:hover,.buttons.has-addons .button:focus:hover{z-index:4}.buttons.has-addons .button.is-expanded{flex-grow:1}.buttons.is-centered{justify-content:center}.buttons.is-right{justify-content:flex-end}.container{margin:0 auto;position:relative}@media screen and (min-width:1088px){.container{max-width:960px;width:960px}.container.is-fluid{margin-left:64px;margin-right:64px;max-width:none;width:auto}}@media screen and (max-width:1279px){.container.is-widescreen{max-width:1152px;width:auto}}@media screen and (max-width:1471px){.container.is-fullhd{max-width:1344px;width:auto}}@media screen and (min-width:1280px){.container{max-width:1152px;width:1152px}}@media screen and (min-width:1472px){.container{max-width:1344px;width:1344px}}.content li+li{margin-top:.25em}.content blockquote:not(:last-child),.content dl:not(:last-child),.content ol:not(:last-child),.content p:not(:last-child),.content pre:not(:last-child),.content table:not(:last-child),.content ul:not(:last-child){margin-bottom:1em}.content h1,.content h2,.content h3,.content h4,.content h5,.content h6{color:#363636;font-weight:600;line-height:1.125}.content h1{font-size:2em;margin-bottom:.5em}.content h1:not(:first-child){margin-top:1em}.content h2{font-size:1.75em;margin-bottom:.5714em}.content h2:not(:first-child){margin-top:1.1428em}.content h3{font-size:1.5em;margin-bottom:.6666em}.content h3:not(:first-child){margin-top:1.3333em}.content h4{font-size:1.25em;margin-bottom:.8em}.content h5{font-size:1.125em;margin-bottom:.8888em}.content h6{font-size:1em;margin-bottom:1em}.content blockquote{background-color:#f5f5f5;border-left:5px solid #dbdbdb;padding:1.25em 1.5em}.content ol{list-style-position:outside;margin-left:2em;margin-top:1em}.content ol:not([type]){list-style-type:decimal}.content ol:not([type]).is-lower-alpha{list-style-type:lower-alpha}.content ol:not([type]).is-lower-roman{list-style-type:lower-roman}.content ol:not([type]).is-upper-alpha{list-style-type:upper-alpha}.content ol:not([type]).is-upper-roman{list-style-type:upper-roman}.content ul{list-style:disc outside;margin-left:2em;margin-top:1em}.content ul ul{list-style-type:circle;margin-top:.5em}.content ul ul ul{list-style-type:square}.content dd{margin-left:2em}.content figure{margin-left:2em;margin-right:2em;text-align:center}.content figure:not(:first-child){margin-top:2em}.content figure:not(:last-child){margin-bottom:2em}.content figure img{display:inline-block}.content figure figcaption{font-style:italic}.content pre{-webkit-overflow-scrolling:touch;overflow-x:auto;padding:1.25em 1.5em;white-space:pre;word-wrap:normal}.content sub,.content sup{font-size:75%}.content table{width:100%}.content table td,.content table th{border:solid #dbdbdb;border-width:0 0 1px;padding:.5em .75em;vertical-align:top}.content table th{color:#363636;text-align:left}.content table thead td,.content table thead th{border-width:0 0 2px;color:#363636}.content table tfoot td,.content table tfoot th{border-width:2px 0 0;color:#363636}.content table tbody tr:last-child td,.content table tbody tr:last-child th{border-bottom-width:0}.content.is-small{font-size:.75rem}.content.is-medium{font-size:1.25rem}.content.is-large{font-size:1.5rem}.input,.textarea{background-color:#fff;border-color:#dbdbdb;color:#363636;box-shadow:inset 0 1px 2px rgba(10,10,10,.1);max-width:100%;width:100%}.input::-moz-placeholder,.textarea::-moz-placeholder{color:rgba(54,54,54,.3)}.input::-webkit-input-placeholder,.textarea::-webkit-input-placeholder{color:rgba(54,54,54,.3)}.input:-moz-placeholder,.textarea:-moz-placeholder{color:rgba(54,54,54,.3)}.input:-ms-input-placeholder,.textarea:-ms-input-placeholder{color:rgba(54,54,54,.3)}.input.is-hovered,.input:hover,.textarea.is-hovered,.textarea:hover{border-color:#b5b5b5}.input.is-active,.input.is-focused,.input:active,.input:focus,.textarea.is-active,.textarea.is-focused,.textarea:active,.textarea:focus{border-color:#6500e5;box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.input[disabled],.textarea[disabled],fieldset[disabled] .input,fieldset[disabled] .textarea{background-color:#f5f5f5;border-color:#f5f5f5;box-shadow:none;color:#7a7a7a}.input[disabled]::-moz-placeholder,.textarea[disabled]::-moz-placeholder,fieldset[disabled] .input::-moz-placeholder,fieldset[disabled] .textarea::-moz-placeholder{color:hsla(0,0%,47.8%,.3)}.input[disabled]::-webkit-input-placeholder,.textarea[disabled]::-webkit-input-placeholder,fieldset[disabled] .input::-webkit-input-placeholder,fieldset[disabled] .textarea::-webkit-input-placeholder{color:hsla(0,0%,47.8%,.3)}.input[disabled]:-moz-placeholder,.textarea[disabled]:-moz-placeholder,fieldset[disabled] .input:-moz-placeholder,fieldset[disabled] .textarea:-moz-placeholder{color:hsla(0,0%,47.8%,.3)}.input[disabled]:-ms-input-placeholder,.textarea[disabled]:-ms-input-placeholder,fieldset[disabled] .input:-ms-input-placeholder,fieldset[disabled] .textarea:-ms-input-placeholder{color:hsla(0,0%,47.8%,.3)}.input[readonly],.textarea[readonly]{box-shadow:none}.input.is-white,.textarea.is-white{border-color:#fff}.input.is-white.is-active,.input.is-white.is-focused,.input.is-white:active,.input.is-white:focus,.textarea.is-white.is-active,.textarea.is-white.is-focused,.textarea.is-white:active,.textarea.is-white:focus{box-shadow:0 0 0 .125em hsla(0,0%,100%,.25)}.input.is-black,.textarea.is-black{border-color:#0a0a0a}.input.is-black.is-active,.input.is-black.is-focused,.input.is-black:active,.input.is-black:focus,.textarea.is-black.is-active,.textarea.is-black.is-focused,.textarea.is-black:active,.textarea.is-black:focus{box-shadow:0 0 0 .125em rgba(10,10,10,.25)}.input.is-light,.textarea.is-light{border-color:#f5f5f5}.input.is-light.is-active,.input.is-light.is-focused,.input.is-light:active,.input.is-light:focus,.textarea.is-light.is-active,.textarea.is-light.is-focused,.textarea.is-light:active,.textarea.is-light:focus{box-shadow:0 0 0 .125em hsla(0,0%,96.1%,.25)}.input.is-dark,.textarea.is-dark{border-color:#363636}.input.is-dark.is-active,.input.is-dark.is-focused,.input.is-dark:active,.input.is-dark:focus,.textarea.is-dark.is-active,.textarea.is-dark.is-focused,.textarea.is-dark:active,.textarea.is-dark:focus{box-shadow:0 0 0 .125em rgba(54,54,54,.25)}.input.is-primary,.textarea.is-primary{border-color:#6500e5}.input.is-primary.is-active,.input.is-primary.is-focused,.input.is-primary:active,.input.is-primary:focus,.textarea.is-primary.is-active,.textarea.is-primary.is-focused,.textarea.is-primary:active,.textarea.is-primary:focus{box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.input.is-link,.textarea.is-link{border-color:#6500e5}.input.is-link.is-active,.input.is-link.is-focused,.input.is-link:active,.input.is-link:focus,.textarea.is-link.is-active,.textarea.is-link.is-focused,.textarea.is-link:active,.textarea.is-link:focus{box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.input.is-info,.textarea.is-info{border-color:#209cee}.input.is-info.is-active,.input.is-info.is-focused,.input.is-info:active,.input.is-info:focus,.textarea.is-info.is-active,.textarea.is-info.is-focused,.textarea.is-info:active,.textarea.is-info:focus{box-shadow:0 0 0 .125em rgba(32,156,238,.25)}.input.is-success,.textarea.is-success{border-color:#23d160}.input.is-success.is-active,.input.is-success.is-focused,.input.is-success:active,.input.is-success:focus,.textarea.is-success.is-active,.textarea.is-success.is-focused,.textarea.is-success:active,.textarea.is-success:focus{box-shadow:0 0 0 .125em rgba(35,209,96,.25)}.input.is-warning,.textarea.is-warning{border-color:#ffdd57}.input.is-warning.is-active,.input.is-warning.is-focused,.input.is-warning:active,.input.is-warning:focus,.textarea.is-warning.is-active,.textarea.is-warning.is-focused,.textarea.is-warning:active,.textarea.is-warning:focus{box-shadow:0 0 0 .125em rgba(255,221,87,.25)}.input.is-danger,.textarea.is-danger{border-color:#ff3860}.input.is-danger.is-active,.input.is-danger.is-focused,.input.is-danger:active,.input.is-danger:focus,.textarea.is-danger.is-active,.textarea.is-danger.is-focused,.textarea.is-danger:active,.textarea.is-danger:focus{box-shadow:0 0 0 .125em rgba(255,56,96,.25)}.input.is-small,.textarea.is-small{border-radius:2px;font-size:.75rem}.input.is-medium,.textarea.is-medium{font-size:1.25rem}.input.is-large,.textarea.is-large{font-size:1.5rem}.input.is-fullwidth,.textarea.is-fullwidth{display:block;width:100%}.input.is-inline,.textarea.is-inline{display:inline;width:auto}.input.is-rounded{border-radius:290486px;padding-left:1em;padding-right:1em}.input.is-static{background-color:transparent;border-color:transparent;box-shadow:none;padding-left:0;padding-right:0}.textarea{display:block;max-width:100%;min-width:100%;padding:.625em;resize:vertical}.textarea:not([rows]){max-height:600px;min-height:120px}.textarea[rows]{height:auto}.textarea.has-fixed-size{resize:none}.checkbox,.radio{cursor:pointer;display:inline-block;line-height:1.25;position:relative}.checkbox input,.radio input{cursor:pointer}.checkbox:hover,.radio:hover{color:#363636}.checkbox[disabled],.radio[disabled],fieldset[disabled] .checkbox,fieldset[disabled] .radio{color:#7a7a7a;cursor:not-allowed}.radio+.radio{margin-left:.5em}.select{display:inline-block;max-width:100%;position:relative;vertical-align:top}.select:not(.is-multiple){height:2.25em}.select:not(.is-multiple):not(.is-loading):after{border-color:#6500e5;right:1.125em;z-index:4}.select.is-rounded select{border-radius:290486px;padding-left:1em}.select select{background-color:#fff;border-color:#dbdbdb;color:#363636;cursor:pointer;display:block;font-size:1em;max-width:100%;outline:none}.select select::-moz-placeholder{color:rgba(54,54,54,.3)}.select select::-webkit-input-placeholder{color:rgba(54,54,54,.3)}.select select:-moz-placeholder{color:rgba(54,54,54,.3)}.select select:-ms-input-placeholder{color:rgba(54,54,54,.3)}.select select.is-hovered,.select select:hover{border-color:#b5b5b5}.select select.is-active,.select select.is-focused,.select select:active,.select select:focus{border-color:#6500e5;box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.select select[disabled],fieldset[disabled] .select select{background-color:#f5f5f5;border-color:#f5f5f5;box-shadow:none;color:#7a7a7a}.select select[disabled]::-moz-placeholder,fieldset[disabled] .select select::-moz-placeholder{color:hsla(0,0%,47.8%,.3)}.select select[disabled]::-webkit-input-placeholder,fieldset[disabled] .select select::-webkit-input-placeholder{color:hsla(0,0%,47.8%,.3)}.select select[disabled]:-moz-placeholder,fieldset[disabled] .select select:-moz-placeholder{color:hsla(0,0%,47.8%,.3)}.select select[disabled]:-ms-input-placeholder,fieldset[disabled] .select select:-ms-input-placeholder{color:hsla(0,0%,47.8%,.3)}.select select::-ms-expand{display:none}.select select[disabled]:hover,fieldset[disabled] .select select:hover{border-color:#f5f5f5}.select select:not([multiple]){padding-right:2.5em}.select select[multiple]{height:auto;padding:0}.select select[multiple] option{padding:.5em 1em}.select:not(.is-multiple):not(.is-loading):hover:after{border-color:#363636}.select.is-white:not(:hover):after,.select.is-white select{border-color:#fff}.select.is-white select.is-hovered,.select.is-white select:hover{border-color:#f2f2f2}.select.is-white select.is-active,.select.is-white select.is-focused,.select.is-white select:active,.select.is-white select:focus{box-shadow:0 0 0 .125em hsla(0,0%,100%,.25)}.select.is-black:not(:hover):after,.select.is-black select{border-color:#0a0a0a}.select.is-black select.is-hovered,.select.is-black select:hover{border-color:#000}.select.is-black select.is-active,.select.is-black select.is-focused,.select.is-black select:active,.select.is-black select:focus{box-shadow:0 0 0 .125em rgba(10,10,10,.25)}.select.is-light:not(:hover):after,.select.is-light select{border-color:#f5f5f5}.select.is-light select.is-hovered,.select.is-light select:hover{border-color:#e8e8e8}.select.is-light select.is-active,.select.is-light select.is-focused,.select.is-light select:active,.select.is-light select:focus{box-shadow:0 0 0 .125em hsla(0,0%,96.1%,.25)}.select.is-dark:not(:hover):after,.select.is-dark select{border-color:#363636}.select.is-dark select.is-hovered,.select.is-dark select:hover{border-color:#292929}.select.is-dark select.is-active,.select.is-dark select.is-focused,.select.is-dark select:active,.select.is-dark select:focus{box-shadow:0 0 0 .125em rgba(54,54,54,.25)}.select.is-primary:not(:hover):after,.select.is-primary select{border-color:#6500e5}.select.is-primary select.is-hovered,.select.is-primary select:hover{border-color:#5a00cc}.select.is-primary select.is-active,.select.is-primary select.is-focused,.select.is-primary select:active,.select.is-primary select:focus{box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.select.is-link:not(:hover):after,.select.is-link select{border-color:#6500e5}.select.is-link select.is-hovered,.select.is-link select:hover{border-color:#5a00cc}.select.is-link select.is-active,.select.is-link select.is-focused,.select.is-link select:active,.select.is-link select:focus{box-shadow:0 0 0 .125em rgba(101,0,229,.25)}.select.is-info:not(:hover):after,.select.is-info select{border-color:#209cee}.select.is-info select.is-hovered,.select.is-info select:hover{border-color:#118fe4}.select.is-info select.is-active,.select.is-info select.is-focused,.select.is-info select:active,.select.is-info select:focus{box-shadow:0 0 0 .125em rgba(32,156,238,.25)}.select.is-success:not(:hover):after,.select.is-success select{border-color:#23d160}.select.is-success select.is-hovered,.select.is-success select:hover{border-color:#20bc56}.select.is-success select.is-active,.select.is-success select.is-focused,.select.is-success select:active,.select.is-success select:focus{box-shadow:0 0 0 .125em rgba(35,209,96,.25)}.select.is-warning:not(:hover):after,.select.is-warning select{border-color:#ffdd57}.select.is-warning select.is-hovered,.select.is-warning select:hover{border-color:#ffd83d}.select.is-warning select.is-active,.select.is-warning select.is-focused,.select.is-warning select:active,.select.is-warning select:focus{box-shadow:0 0 0 .125em rgba(255,221,87,.25)}.select.is-danger:not(:hover):after,.select.is-danger select{border-color:#ff3860}.select.is-danger select.is-hovered,.select.is-danger select:hover{border-color:#ff1f4b}.select.is-danger select.is-active,.select.is-danger select.is-focused,.select.is-danger select:active,.select.is-danger select:focus{box-shadow:0 0 0 .125em rgba(255,56,96,.25)}.select.is-small{border-radius:2px;font-size:.75rem}.select.is-medium{font-size:1.25rem}.select.is-large{font-size:1.5rem}.select.is-disabled:after{border-color:#7a7a7a}.select.is-fullwidth,.select.is-fullwidth select{width:100%}.select.is-loading:after{margin-top:0;position:absolute;right:.625em;top:.625em;-webkit-transform:none;transform:none}.select.is-loading.is-small:after{font-size:.75rem}.select.is-loading.is-medium:after{font-size:1.25rem}.select.is-loading.is-large:after{font-size:1.5rem}.file{align-items:stretch;display:flex;justify-content:flex-start;position:relative}.file.is-white .file-cta{background-color:#fff;border-color:transparent;color:#0a0a0a}.file.is-white.is-hovered .file-cta,.file.is-white:hover .file-cta{background-color:#f9f9f9;border-color:transparent;color:#0a0a0a}.file.is-white.is-focused .file-cta,.file.is-white:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(0,0%,100%,.25);color:#0a0a0a}.file.is-white.is-active .file-cta,.file.is-white:active .file-cta{background-color:#f2f2f2;border-color:transparent;color:#0a0a0a}.file.is-black .file-cta{background-color:#0a0a0a;border-color:transparent;color:#fff}.file.is-black.is-hovered .file-cta,.file.is-black:hover .file-cta{background-color:#040404;border-color:transparent;color:#fff}.file.is-black.is-focused .file-cta,.file.is-black:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(10,10,10,.25);color:#fff}.file.is-black.is-active .file-cta,.file.is-black:active .file-cta{background-color:#000;border-color:transparent;color:#fff}.file.is-light .file-cta{background-color:#f5f5f5;border-color:transparent;color:#363636}.file.is-light.is-hovered .file-cta,.file.is-light:hover .file-cta{background-color:#eee;border-color:transparent;color:#363636}.file.is-light.is-focused .file-cta,.file.is-light:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em hsla(0,0%,96.1%,.25);color:#363636}.file.is-light.is-active .file-cta,.file.is-light:active .file-cta{background-color:#e8e8e8;border-color:transparent;color:#363636}.file.is-dark .file-cta{background-color:#363636;border-color:transparent;color:#f5f5f5}.file.is-dark.is-hovered .file-cta,.file.is-dark:hover .file-cta{background-color:#2f2f2f;border-color:transparent;color:#f5f5f5}.file.is-dark.is-focused .file-cta,.file.is-dark:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(54,54,54,.25);color:#f5f5f5}.file.is-dark.is-active .file-cta,.file.is-dark:active .file-cta{background-color:#292929;border-color:transparent;color:#f5f5f5}.file.is-primary .file-cta{background-color:#6500e5;border-color:transparent;color:#fff}.file.is-primary.is-hovered .file-cta,.file.is-primary:hover .file-cta{background-color:#5f00d8;border-color:transparent;color:#fff}.file.is-primary.is-focused .file-cta,.file.is-primary:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(101,0,229,.25);color:#fff}.file.is-primary.is-active .file-cta,.file.is-primary:active .file-cta{background-color:#5a00cc;border-color:transparent;color:#fff}.file.is-link .file-cta{background-color:#6500e5;border-color:transparent;color:#fff}.file.is-link.is-hovered .file-cta,.file.is-link:hover .file-cta{background-color:#5f00d8;border-color:transparent;color:#fff}.file.is-link.is-focused .file-cta,.file.is-link:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(101,0,229,.25);color:#fff}.file.is-link.is-active .file-cta,.file.is-link:active .file-cta{background-color:#5a00cc;border-color:transparent;color:#fff}.file.is-info .file-cta{background-color:#209cee;border-color:transparent;color:#fff}.file.is-info.is-hovered .file-cta,.file.is-info:hover .file-cta{background-color:#1496ed;border-color:transparent;color:#fff}.file.is-info.is-focused .file-cta,.file.is-info:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(32,156,238,.25);color:#fff}.file.is-info.is-active .file-cta,.file.is-info:active .file-cta{background-color:#118fe4;border-color:transparent;color:#fff}.file.is-success .file-cta{background-color:#23d160;border-color:transparent;color:#fff}.file.is-success.is-hovered .file-cta,.file.is-success:hover .file-cta{background-color:#22c65b;border-color:transparent;color:#fff}.file.is-success.is-focused .file-cta,.file.is-success:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(35,209,96,.25);color:#fff}.file.is-success.is-active .file-cta,.file.is-success:active .file-cta{background-color:#20bc56;border-color:transparent;color:#fff}.file.is-warning .file-cta{background-color:#ffdd57;border-color:transparent;color:rgba(0,0,0,.7)}.file.is-warning.is-hovered .file-cta,.file.is-warning:hover .file-cta{background-color:#ffdb4a;border-color:transparent;color:rgba(0,0,0,.7)}.file.is-warning.is-focused .file-cta,.file.is-warning:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(255,221,87,.25);color:rgba(0,0,0,.7)}.file.is-warning.is-active .file-cta,.file.is-warning:active .file-cta{background-color:#ffd83d;border-color:transparent;color:rgba(0,0,0,.7)}.file.is-danger .file-cta{background-color:#ff3860;border-color:transparent;color:#fff}.file.is-danger.is-hovered .file-cta,.file.is-danger:hover .file-cta{background-color:#ff2b56;border-color:transparent;color:#fff}.file.is-danger.is-focused .file-cta,.file.is-danger:focus .file-cta{border-color:transparent;box-shadow:0 0 .5em rgba(255,56,96,.25);color:#fff}.file.is-danger.is-active .file-cta,.file.is-danger:active .file-cta{background-color:#ff1f4b;border-color:transparent;color:#fff}.file.is-small{font-size:.75rem}.file.is-medium{font-size:1.25rem}.file.is-medium .file-icon .fa{font-size:21px}.file.is-large{font-size:1.5rem}.file.is-large .file-icon .fa{font-size:28px}.file.has-name .file-cta{border-bottom-right-radius:0;border-top-right-radius:0}.file.has-name .file-name{border-bottom-left-radius:0;border-top-left-radius:0}.file.has-name.is-empty .file-cta{border-radius:4px}.file.has-name.is-empty .file-name{display:none}.file.is-boxed .file-label{flex-direction:column}.file.is-boxed .file-cta{flex-direction:column;height:auto;padding:1em 3em}.file.is-boxed .file-name{border-width:0 1px 1px}.file.is-boxed .file-icon{height:1.5em;width:1.5em}.file.is-boxed .file-icon .fa{font-size:21px}.file.is-boxed.is-small .file-icon .fa{font-size:14px}.file.is-boxed.is-medium .file-icon .fa{font-size:28px}.file.is-boxed.is-large .file-icon .fa{font-size:35px}.file.is-boxed.has-name .file-cta{border-radius:4px 4px 0 0}.file.is-boxed.has-name .file-name{border-radius:0 0 4px 4px;border-width:0 1px 1px}.file.is-centered{justify-content:center}.file.is-fullwidth .file-label{width:100%}.file.is-fullwidth .file-name{flex-grow:1;max-width:none}.file.is-right{justify-content:flex-end}.file.is-right .file-cta{border-radius:0 4px 4px 0}.file.is-right .file-name{border-radius:4px 0 0 4px;border-width:1px 0 1px 1px;order:-1}.file-label{align-items:stretch;display:flex;cursor:pointer;justify-content:flex-start;overflow:hidden;position:relative}.file-label:hover .file-cta{background-color:#eee;color:#363636}.file-label:hover .file-name{border-color:#d5d5d5}.file-label:active .file-cta{background-color:#e8e8e8;color:#363636}.file-label:active .file-name{border-color:#cfcfcf}.file-input{height:100%;left:0;opacity:0;outline:none;position:absolute;top:0;width:100%}.file-cta,.file-name{border-color:#dbdbdb;border-radius:4px;font-size:1em;padding-left:1em;padding-right:1em;white-space:nowrap}.file-cta{background-color:#f5f5f5;color:#4a4a4a}.file-name{border:1px solid #dbdbdb;border-left-width:0;display:block;max-width:16em;overflow:hidden;text-align:left;text-overflow:ellipsis}.file-icon{align-items:center;display:flex;height:1em;justify-content:center;margin-right:.5em;width:1em}.file-icon .fa{font-size:14px}.label{color:#363636;display:block;font-size:1rem;font-weight:700}.label:not(:last-child){margin-bottom:.5em}.label.is-small{font-size:.75rem}.label.is-medium{font-size:1.25rem}.label.is-large{font-size:1.5rem}.help{display:block;font-size:.75rem;margin-top:.25rem}.help.is-white{color:#fff}.help.is-black{color:#0a0a0a}.help.is-light{color:#f5f5f5}.help.is-dark{color:#363636}.help.is-link,.help.is-primary{color:#6500e5}.help.is-info{color:#209cee}.help.is-success{color:#23d160}.help.is-warning{color:#ffdd57}.help.is-danger{color:#ff3860}.field:not(:last-child){margin-bottom:.75rem}.field.has-addons{display:flex;justify-content:flex-start}.field.has-addons .control:not(:last-child){margin-right:-1px}.field.has-addons .control:not(:first-child):not(:last-child) .button,.field.has-addons .control:not(:first-child):not(:last-child) .input,.field.has-addons .control:not(:first-child):not(:last-child) .select select{border-radius:0}.field.has-addons .control:first-child:not(:only-child) .button,.field.has-addons .control:first-child:not(:only-child) .input,.field.has-addons .control:first-child:not(:only-child) .select select{border-bottom-right-radius:0;border-top-right-radius:0}.field.has-addons .control:last-child:not(:only-child) .button,.field.has-addons .control:last-child:not(:only-child) .input,.field.has-addons .control:last-child:not(:only-child) .select select{border-bottom-left-radius:0;border-top-left-radius:0}.field.has-addons .control .button:not([disabled]).is-hovered,.field.has-addons .control .button:not([disabled]):hover,.field.has-addons .control .input:not([disabled]).is-hovered,.field.has-addons .control .input:not([disabled]):hover,.field.has-addons .control .select select:not([disabled]).is-hovered,.field.has-addons .control .select select:not([disabled]):hover{z-index:2}.field.has-addons .control .button:not([disabled]).is-active,.field.has-addons .control .button:not([disabled]).is-focused,.field.has-addons .control .button:not([disabled]):active,.field.has-addons .control .button:not([disabled]):focus,.field.has-addons .control .input:not([disabled]).is-active,.field.has-addons .control .input:not([disabled]).is-focused,.field.has-addons .control .input:not([disabled]):active,.field.has-addons .control .input:not([disabled]):focus,.field.has-addons .control .select select:not([disabled]).is-active,.field.has-addons .control .select select:not([disabled]).is-focused,.field.has-addons .control .select select:not([disabled]):active,.field.has-addons .control .select select:not([disabled]):focus{z-index:3}.field.has-addons .control .button:not([disabled]).is-active:hover,.field.has-addons .control .button:not([disabled]).is-focused:hover,.field.has-addons .control .button:not([disabled]):active:hover,.field.has-addons .control .button:not([disabled]):focus:hover,.field.has-addons .control .input:not([disabled]).is-active:hover,.field.has-addons .control .input:not([disabled]).is-focused:hover,.field.has-addons .control .input:not([disabled]):active:hover,.field.has-addons .control .input:not([disabled]):focus:hover,.field.has-addons .control .select select:not([disabled]).is-active:hover,.field.has-addons .control .select select:not([disabled]).is-focused:hover,.field.has-addons .control .select select:not([disabled]):active:hover,.field.has-addons .control .select select:not([disabled]):focus:hover{z-index:4}.field.has-addons .control.is-expanded{flex-grow:1}.field.has-addons.has-addons-centered{justify-content:center}.field.has-addons.has-addons-right{justify-content:flex-end}.field.has-addons.has-addons-fullwidth .control{flex-grow:1;flex-shrink:0}.field.is-grouped{display:flex;justify-content:flex-start}.field.is-grouped>.control{flex-shrink:0}.field.is-grouped>.control:not(:last-child){margin-bottom:0;margin-right:.75rem}.field.is-grouped>.control.is-expanded{flex-grow:1;flex-shrink:1}.field.is-grouped.is-grouped-centered{justify-content:center}.field.is-grouped.is-grouped-right{justify-content:flex-end}.field.is-grouped.is-grouped-multiline{flex-wrap:wrap}.field.is-grouped.is-grouped-multiline>.control:last-child,.field.is-grouped.is-grouped-multiline>.control:not(:last-child){margin-bottom:.75rem}.field.is-grouped.is-grouped-multiline:last-child{margin-bottom:-.75rem}.field.is-grouped.is-grouped-multiline:not(:last-child){margin-bottom:0}@media print,screen and (min-width:769px){.field.is-horizontal{display:flex}}.field-label .label{font-size:inherit}@media screen and (max-width:768px){.field-label{margin-bottom:.5rem}}@media print,screen and (min-width:769px){.field-label{flex-basis:0;flex-grow:1;flex-shrink:0;margin-right:1.5rem;text-align:right}.field-label.is-small{font-size:.75rem;padding-top:.375em}.field-label.is-normal{padding-top:.375em}.field-label.is-medium{font-size:1.25rem;padding-top:.375em}.field-label.is-large{font-size:1.5rem;padding-top:.375em}}.field-body .field .field{margin-bottom:0}@media print,screen and (min-width:769px){.field-body{display:flex;flex-basis:0;flex-grow:5;flex-shrink:1}.field-body .field{margin-bottom:0}.field-body>.field{flex-shrink:1}.field-body>.field:not(.is-narrow){flex-grow:1}.field-body>.field:not(:last-child){margin-right:.75rem}}.control{box-sizing:border-box;clear:both;font-size:1rem;position:relative;text-align:left}.control.has-icons-left .input:focus~.icon,.control.has-icons-left .select:focus~.icon,.control.has-icons-right .input:focus~.icon,.control.has-icons-right .select:focus~.icon{color:#7a7a7a}.control.has-icons-left .input.is-small~.icon,.control.has-icons-left .select.is-small~.icon,.control.has-icons-right .input.is-small~.icon,.control.has-icons-right .select.is-small~.icon{font-size:.75rem}.control.has-icons-left .input.is-medium~.icon,.control.has-icons-left .select.is-medium~.icon,.control.has-icons-right .input.is-medium~.icon,.control.has-icons-right .select.is-medium~.icon{font-size:1.25rem}.control.has-icons-left .input.is-large~.icon,.control.has-icons-left .select.is-large~.icon,.control.has-icons-right .input.is-large~.icon,.control.has-icons-right .select.is-large~.icon{font-size:1.5rem}.control.has-icons-left .icon,.control.has-icons-right .icon{color:#dbdbdb;height:2.25em;pointer-events:none;position:absolute;top:0;width:2.25em;z-index:4}.control.has-icons-left .input,.control.has-icons-left .select select{padding-left:2.25em}.control.has-icons-left .icon.is-left{left:0}.control.has-icons-right .input,.control.has-icons-right .select select{padding-right:2.25em}.control.has-icons-right .icon.is-right{right:0}.control.is-loading:after{position:absolute!important;right:.625em;top:.625em;z-index:4}.control.is-loading.is-small:after{font-size:.75rem}.control.is-loading.is-medium:after{font-size:1.25rem}.control.is-loading.is-large:after{font-size:1.5rem}.icon{align-items:center;display:inline-flex;justify-content:center;height:1.5rem;width:1.5rem}.icon.is-small{height:1rem;width:1rem}.icon.is-medium{height:2rem;width:2rem}.icon.is-large{height:3rem;width:3rem}.image{display:block;position:relative}.image img{display:block;height:auto;width:100%}.image img.is-rounded{border-radius:290486px}.image.is-1by1 .has-ratio,.image.is-1by1 img,.image.is-1by2 .has-ratio,.image.is-1by2 img,.image.is-1by3 .has-ratio,.image.is-1by3 img,.image.is-2by1 .has-ratio,.image.is-2by1 img,.image.is-2by3 .has-ratio,.image.is-2by3 img,.image.is-3by1 .has-ratio,.image.is-3by1 img,.image.is-3by2 .has-ratio,.image.is-3by2 img,.image.is-3by4 .has-ratio,.image.is-3by4 img,.image.is-3by5 .has-ratio,.image.is-3by5 img,.image.is-4by3 .has-ratio,.image.is-4by3 img,.image.is-4by5 .has-ratio,.image.is-4by5 img,.image.is-5by3 .has-ratio,.image.is-5by3 img,.image.is-5by4 .has-ratio,.image.is-5by4 img,.image.is-9by16 .has-ratio,.image.is-9by16 img,.image.is-16by9 .has-ratio,.image.is-16by9 img,.image.is-square .has-ratio,.image.is-square img{height:100%;width:100%}.image.is-1by1,.image.is-square{padding-top:100%}.image.is-5by4{padding-top:80%}.image.is-4by3{padding-top:75%}.image.is-3by2{padding-top:66.6666%}.image.is-5by3{padding-top:60%}.image.is-16by9{padding-top:56.25%}.image.is-2by1{padding-top:50%}.image.is-3by1{padding-top:33.3333%}.image.is-4by5{padding-top:125%}.image.is-3by4{padding-top:133.3333%}.image.is-2by3{padding-top:150%}.image.is-3by5{padding-top:166.6666%}.image.is-9by16{padding-top:177.7777%}.image.is-1by2{padding-top:200%}.image.is-1by3{padding-top:300%}.image.is-16x16{height:16px;width:16px}.image.is-24x24{height:24px;width:24px}.image.is-32x32{height:32px;width:32px}.image.is-48x48{height:48px;width:48px}.image.is-64x64{height:64px;width:64px}.image.is-96x96{height:96px;width:96px}.image.is-128x128{height:128px;width:128px}.notification{background-color:#f5f5f5;border-radius:4px;padding:1.25rem 2.5rem 1.25rem 1.5rem;position:relative}.notification a:not(.button):not(.dropdown-item){color:currentColor;text-decoration:underline}.notification strong{color:currentColor}.notification code,.notification pre{background:#fff}.notification pre code{background:transparent}.notification>.delete{position:absolute;right:.5rem;top:.5rem}.notification .content,.notification .subtitle,.notification .title{color:currentColor}.notification.is-white{background-color:#fff;color:#0a0a0a}.notification.is-black{background-color:#0a0a0a;color:#fff}.notification.is-light{background-color:#f5f5f5;color:#363636}.notification.is-dark{background-color:#363636;color:#f5f5f5}.notification.is-link,.notification.is-primary{background-color:#6500e5;color:#fff}.notification.is-info{background-color:#209cee;color:#fff}.notification.is-success{background-color:#23d160;color:#fff}.notification.is-warning{background-color:#ffdd57;color:rgba(0,0,0,.7)}.notification.is-danger{background-color:#ff3860;color:#fff}.progress{-moz-appearance:none;-webkit-appearance:none;border:none;border-radius:290486px;display:block;height:1rem;overflow:hidden;padding:0;width:100%}.progress::-webkit-progress-bar{background-color:#dbdbdb}.progress::-webkit-progress-value{background-color:#4a4a4a}.progress::-moz-progress-bar{background-color:#4a4a4a}.progress::-ms-fill{background-color:#4a4a4a;border:none}.progress:indeterminate{-webkit-animation-duration:1.5s;animation-duration:1.5s;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite;-webkit-animation-name:moveIndeterminate;animation-name:moveIndeterminate;-webkit-animation-timing-function:linear;animation-timing-function:linear;background-color:#dbdbdb;background-image:linear-gradient(90deg,#4a4a4a 30%,#dbdbdb 0);background-position:0 0;background-repeat:no-repeat;background-size:150% 150%}.progress:indeterminate::-webkit-progress-bar{background-color:transparent}.progress:indeterminate::-moz-progress-bar{background-color:transparent}.progress.is-white::-webkit-progress-value{background-color:#fff}.progress.is-white::-moz-progress-bar{background-color:#fff}.progress.is-white::-ms-fill{background-color:#fff}.progress.is-white:indeterminate{background-image:linear-gradient(90deg,#fff 30%,#dbdbdb 0)}.progress.is-black::-webkit-progress-value{background-color:#0a0a0a}.progress.is-black::-moz-progress-bar{background-color:#0a0a0a}.progress.is-black::-ms-fill{background-color:#0a0a0a}.progress.is-black:indeterminate{background-image:linear-gradient(90deg,#0a0a0a 30%,#dbdbdb 0)}.progress.is-light::-webkit-progress-value{background-color:#f5f5f5}.progress.is-light::-moz-progress-bar{background-color:#f5f5f5}.progress.is-light::-ms-fill{background-color:#f5f5f5}.progress.is-light:indeterminate{background-image:linear-gradient(90deg,#f5f5f5 30%,#dbdbdb 0)}.progress.is-dark::-webkit-progress-value{background-color:#363636}.progress.is-dark::-moz-progress-bar{background-color:#363636}.progress.is-dark::-ms-fill{background-color:#363636}.progress.is-dark:indeterminate{background-image:linear-gradient(90deg,#363636 30%,#dbdbdb 0)}.progress.is-primary::-webkit-progress-value{background-color:#6500e5}.progress.is-primary::-moz-progress-bar{background-color:#6500e5}.progress.is-primary::-ms-fill{background-color:#6500e5}.progress.is-primary:indeterminate{background-image:linear-gradient(90deg,#6500e5 30%,#dbdbdb 0)}.progress.is-link::-webkit-progress-value{background-color:#6500e5}.progress.is-link::-moz-progress-bar{background-color:#6500e5}.progress.is-link::-ms-fill{background-color:#6500e5}.progress.is-link:indeterminate{background-image:linear-gradient(90deg,#6500e5 30%,#dbdbdb 0)}.progress.is-info::-webkit-progress-value{background-color:#209cee}.progress.is-info::-moz-progress-bar{background-color:#209cee}.progress.is-info::-ms-fill{background-color:#209cee}.progress.is-info:indeterminate{background-image:linear-gradient(90deg,#209cee 30%,#dbdbdb 0)}.progress.is-success::-webkit-progress-value{background-color:#23d160}.progress.is-success::-moz-progress-bar{background-color:#23d160}.progress.is-success::-ms-fill{background-color:#23d160}.progress.is-success:indeterminate{background-image:linear-gradient(90deg,#23d160 30%,#dbdbdb 0)}.progress.is-warning::-webkit-progress-value{background-color:#ffdd57}.progress.is-warning::-moz-progress-bar{background-color:#ffdd57}.progress.is-warning::-ms-fill{background-color:#ffdd57}.progress.is-warning:indeterminate{background-image:linear-gradient(90deg,#ffdd57 30%,#dbdbdb 0)}.progress.is-danger::-webkit-progress-value{background-color:#ff3860}.progress.is-danger::-moz-progress-bar{background-color:#ff3860}.progress.is-danger::-ms-fill{background-color:#ff3860}.progress.is-danger:indeterminate{background-image:linear-gradient(90deg,#ff3860 30%,#dbdbdb 0)}.progress.is-small{height:.75rem}.progress.is-medium{height:1.25rem}.progress.is-large{height:1.5rem}@-webkit-keyframes moveIndeterminate{0%{background-position:200% 0}to{background-position:-200% 0}}@keyframes moveIndeterminate{0%{background-position:200% 0}to{background-position:-200% 0}}.table{background-color:#fff;color:#363636}.table td,.table th{border:solid #dbdbdb;border-width:0 0 1px;padding:.5em .75em;vertical-align:top}.table td.is-white,.table th.is-white{background-color:#fff;border-color:#fff;color:#0a0a0a}.table td.is-black,.table th.is-black{background-color:#0a0a0a;border-color:#0a0a0a;color:#fff}.table td.is-light,.table th.is-light{background-color:#f5f5f5;border-color:#f5f5f5;color:#363636}.table td.is-dark,.table th.is-dark{background-color:#363636;border-color:#363636;color:#f5f5f5}.table td.is-link,.table td.is-primary,.table th.is-link,.table th.is-primary{background-color:#6500e5;border-color:#6500e5;color:#fff}.table td.is-info,.table th.is-info{background-color:#209cee;border-color:#209cee;color:#fff}.table td.is-success,.table th.is-success{background-color:#23d160;border-color:#23d160;color:#fff}.table td.is-warning,.table th.is-warning{background-color:#ffdd57;border-color:#ffdd57;color:rgba(0,0,0,.7)}.table td.is-danger,.table th.is-danger{background-color:#ff3860;border-color:#ff3860;color:#fff}.table td.is-narrow,.table th.is-narrow{white-space:nowrap;width:1%}.table td.is-selected,.table th.is-selected{background-color:#6500e5;color:#fff}.table td.is-selected a,.table td.is-selected strong,.table th.is-selected a,.table th.is-selected strong{color:currentColor}.table th{color:#363636;text-align:left}.table tr.is-selected{background-color:#6500e5;color:#fff}.table tr.is-selected a,.table tr.is-selected strong{color:currentColor}.table tr.is-selected td,.table tr.is-selected th{border-color:#fff;color:currentColor}.table thead{background-color:transparent}.table thead td,.table thead th{border-width:0 0 2px;color:#363636}.table tfoot{background-color:transparent}.table tfoot td,.table tfoot th{border-width:2px 0 0;color:#363636}.table tbody{background-color:transparent}.table tbody tr:last-child td,.table tbody tr:last-child th{border-bottom-width:0}.table.is-bordered td,.table.is-bordered th{border-width:1px}.table.is-bordered tr:last-child td,.table.is-bordered tr:last-child th{border-bottom-width:1px}.table.is-fullwidth{width:100%}.table.is-hoverable.is-striped tbody tr:not(.is-selected):hover,.table.is-hoverable tbody tr:not(.is-selected):hover{background-color:#fafafa}.table.is-hoverable.is-striped tbody tr:not(.is-selected):hover:nth-child(2n){background-color:#f5f5f5}.table.is-narrow td,.table.is-narrow th{padding:.25em .5em}.table.is-striped tbody tr:not(.is-selected):nth-child(2n){background-color:#fafafa}.table-container{-webkit-overflow-scrolling:touch;overflow:auto;overflow-y:hidden;max-width:100%}.tags{align-items:center;display:flex;flex-wrap:wrap;justify-content:flex-start}.tags .tag{margin-bottom:.5rem}.tags .tag:not(:last-child){margin-right:.5rem}.tags:last-child{margin-bottom:-.5rem}.tags:not(:last-child){margin-bottom:1rem}.tags.are-medium .tag:not(.is-normal):not(.is-large){font-size:1rem}.tags.are-large .tag:not(.is-normal):not(.is-medium){font-size:1.25rem}.tags.is-centered{justify-content:center}.tags.is-centered .tag{margin-right:.25rem;margin-left:.25rem}.tags.is-right{justify-content:flex-end}.tags.is-right .tag:not(:first-child){margin-left:.5rem}.tags.has-addons .tag,.tags.is-right .tag:not(:last-child){margin-right:0}.tags.has-addons .tag:not(:first-child){margin-left:0;border-bottom-left-radius:0;border-top-left-radius:0}.tags.has-addons .tag:not(:last-child){border-bottom-right-radius:0;border-top-right-radius:0}.tag:not(body){align-items:center;background-color:#f5f5f5;border-radius:4px;color:#4a4a4a;display:inline-flex;font-size:.75rem;height:2em;justify-content:center;line-height:1.5;padding-left:.75em;padding-right:.75em;white-space:nowrap}.tag:not(body) .delete{margin-left:.25rem;margin-right:-.375rem}.tag:not(body).is-white{background-color:#fff;color:#0a0a0a}.tag:not(body).is-black{background-color:#0a0a0a;color:#fff}.tag:not(body).is-light{background-color:#f5f5f5;color:#363636}.tag:not(body).is-dark{background-color:#363636;color:#f5f5f5}.tag:not(body).is-link,.tag:not(body).is-primary{background-color:#6500e5;color:#fff}.tag:not(body).is-info{background-color:#209cee;color:#fff}.tag:not(body).is-success{background-color:#23d160;color:#fff}.tag:not(body).is-warning{background-color:#ffdd57;color:rgba(0,0,0,.7)}.tag:not(body).is-danger{background-color:#ff3860;color:#fff}.tag:not(body).is-normal{font-size:.75rem}.tag:not(body).is-medium{font-size:1rem}.tag:not(body).is-large{font-size:1.25rem}.tag:not(body) .icon:first-child:not(:last-child){margin-left:-.375em;margin-right:.1875em}.tag:not(body) .icon:last-child:not(:first-child){margin-left:.1875em;margin-right:-.375em}.tag:not(body) .icon:first-child:last-child{margin-left:-.375em;margin-right:-.375em}.tag:not(body).is-delete{margin-left:1px;padding:0;position:relative;width:2em}.tag:not(body).is-delete:after,.tag:not(body).is-delete:before{background-color:currentColor;content:"";display:block;left:50%;position:absolute;top:50%;-webkit-transform:translateX(-50%) translateY(-50%) rotate(45deg);transform:translateX(-50%) translateY(-50%) rotate(45deg);-webkit-transform-origin:center center;transform-origin:center center}.tag:not(body).is-delete:before{height:1px;width:50%}.tag:not(body).is-delete:after{height:50%;width:1px}.tag:not(body).is-delete:focus,.tag:not(body).is-delete:hover{background-color:#e8e8e8}.tag:not(body).is-delete:active{background-color:#dbdbdb}.tag:not(body).is-rounded{border-radius:290486px}a.tag:hover{text-decoration:underline}.subtitle,.title{word-break:break-word}.subtitle em,.subtitle span,.title em,.title span{font-weight:inherit}.subtitle sub,.subtitle sup,.title sub,.title sup{font-size:.75em}.subtitle .tag,.title .tag{vertical-align:middle}.title{color:#363636;font-size:2rem;font-weight:600;line-height:1.125}.title strong{color:inherit;font-weight:inherit}.title+.highlight{margin-top:-.75rem}.title:not(.is-spaced)+.subtitle{margin-top:-1.25rem}.title.is-1{font-size:"none",0}.title.is-2{font-size:"xxs",.125}.title.is-3{font-size:"xs",.25}.title.is-4{font-size:"sm",.5}.title.is-5{font-size:"md",1}.title.is-6{font-size:"lg",2}.title.is-7{font-size:"xl",4}.title.is-8{font-size:"xxl",8}.subtitle{color:#4a4a4a;font-size:1.25rem;font-weight:400;line-height:1.25}.subtitle strong{color:#363636;font-weight:600}.subtitle:not(.is-spaced)+.title{margin-top:-1.25rem}.subtitle.is-1{font-size:"none",0}.subtitle.is-2{font-size:"xxs",.125}.subtitle.is-3{font-size:"xs",.25}.subtitle.is-4{font-size:"sm",.5}.subtitle.is-5{font-size:"md",1}.subtitle.is-6{font-size:"lg",2}.subtitle.is-7{font-size:"xl",4}.subtitle.is-8{font-size:"xxl",8}.heading{display:block;font-size:11px;letter-spacing:1px;margin-bottom:5px;text-transform:uppercase}.highlight{font-weight:400;max-width:100%;overflow:hidden;padding:0}.highlight pre{overflow:auto;max-width:100%}.number{align-items:center;background-color:#f5f5f5;border-radius:290486px;display:inline-flex;font-size:1.25rem;height:2em;justify-content:center;margin-right:1.5rem;min-width:2.5em;padding:.25rem .5rem;text-align:center;vertical-align:top}.breadcrumb{font-size:1rem;white-space:nowrap}.breadcrumb a{align-items:center;color:#6500e5;display:flex;justify-content:center;padding:0 .75em}.breadcrumb a:hover{color:#940dff}.breadcrumb li{align-items:center;display:flex}.breadcrumb li:first-child a{padding-left:0}.breadcrumb li.is-active a{color:#363636;cursor:default;pointer-events:none}.breadcrumb li+li:before{color:#b5b5b5;content:"\\0002f"}.breadcrumb ol,.breadcrumb ul{align-items:flex-start;display:flex;flex-wrap:wrap;justify-content:flex-start}.breadcrumb .icon:first-child{margin-right:.5em}.breadcrumb .icon:last-child{margin-left:.5em}.breadcrumb.is-centered ol,.breadcrumb.is-centered ul{justify-content:center}.breadcrumb.is-right ol,.breadcrumb.is-right ul{justify-content:flex-end}.breadcrumb.is-small{font-size:.75rem}.breadcrumb.is-medium{font-size:1.25rem}.breadcrumb.is-large{font-size:1.5rem}.breadcrumb.has-arrow-separator li+li:before{content:"\\02192"}.breadcrumb.has-bullet-separator li+li:before{content:"\\02022"}.breadcrumb.has-dot-separator li+li:before{content:"\\000b7"}.breadcrumb.has-succeeds-separator li+li:before{content:"\\0227B"}.card{background-color:#fff;box-shadow:0 2px 3px rgba(10,10,10,.1),0 0 0 1px rgba(10,10,10,.1);color:#4a4a4a;max-width:100%;position:relative}.card-header{background-color:transparent;align-items:stretch;box-shadow:0 1px 2px rgba(10,10,10,.1);display:flex}.card-header-title{align-items:center;color:#363636;display:flex;flex-grow:1;font-weight:700;padding:.75rem}.card-header-icon,.card-header-title.is-centered{justify-content:center}.card-header-icon{align-items:center;cursor:pointer;display:flex;padding:.75rem}.card-image{display:block;position:relative}.card-content{padding:1.5rem}.card-content,.card-footer{background-color:transparent}.card-footer{border-top:1px solid #dbdbdb;align-items:stretch;display:flex}.card-footer-item{align-items:center;display:flex;flex-basis:0;flex-grow:1;flex-shrink:0;justify-content:center;padding:.75rem}.card-footer-item:not(:last-child){border-right:1px solid #dbdbdb}.card .media:not(:last-child){margin-bottom:.75rem}.dropdown{display:inline-flex;position:relative;vertical-align:top}.dropdown.is-active .dropdown-menu,.dropdown.is-hoverable:hover .dropdown-menu{display:block}.dropdown.is-right .dropdown-menu{left:auto;right:0}.dropdown.is-up .dropdown-menu{bottom:100%;padding-bottom:4px;padding-top:0;top:auto}.dropdown-menu{display:none;left:0;min-width:12rem;padding-top:4px;position:absolute;top:100%;z-index:20}.dropdown-content{background-color:#fff;border-radius:4px;box-shadow:0 2px 3px rgba(10,10,10,.1),0 0 0 1px rgba(10,10,10,.1);padding-bottom:.5rem;padding-top:.5rem}.dropdown-item{color:#4a4a4a;display:block;font-size:.875rem;line-height:1.5;padding:.375rem 1rem;position:relative}a.dropdown-item,button.dropdown-item{padding-right:3rem;text-align:left;white-space:nowrap;width:100%}a.dropdown-item:hover,button.dropdown-item:hover{background-color:#f5f5f5;color:#0a0a0a}a.dropdown-item.is-active,button.dropdown-item.is-active{background-color:#6500e5;color:#fff}.dropdown-divider{background-color:#dbdbdb;border:none;display:block;height:1px;margin:.5rem 0}.level{align-items:center;justify-content:space-between}.level code{border-radius:4px}.level img{display:inline-block;vertical-align:top}.level.is-mobile,.level.is-mobile .level-left,.level.is-mobile .level-right{display:flex}.level.is-mobile .level-left+.level-right{margin-top:0}.level.is-mobile .level-item:not(:last-child){margin-bottom:0;margin-right:.75rem}.level.is-mobile .level-item:not(.is-narrow){flex-grow:1}@media print,screen and (min-width:769px){.level{display:flex}.level>.level-item:not(.is-narrow){flex-grow:1}}.level-item{align-items:center;display:flex;flex-basis:auto;flex-grow:0;flex-shrink:0;justify-content:center}.level-item .subtitle,.level-item .title{margin-bottom:0}@media screen and (max-width:768px){.level-item:not(:last-child){margin-bottom:.75rem}}.level-left,.level-right{flex-basis:auto;flex-grow:0;flex-shrink:0}.level-left .level-item.is-flexible,.level-right .level-item.is-flexible{flex-grow:1}@media print,screen and (min-width:769px){.level-left .level-item:not(:last-child),.level-right .level-item:not(:last-child){margin-right:.75rem}}.level-left{align-items:center;justify-content:flex-start}@media screen and (max-width:768px){.level-left+.level-right{margin-top:1.5rem}}@media print,screen and (min-width:769px){.level-left{display:flex}}.level-right{align-items:center;justify-content:flex-end}@media print,screen and (min-width:769px){.level-right{display:flex}}.list{background-color:#fff;border-radius:4px;box-shadow:0 2px 3px rgba(10,10,10,.1),0 0 0 1px rgba(10,10,10,.1)}.list-item{display:block;padding:.5em 1em}.list-item:not(a){color:#4a4a4a}.list-item:first-child,.list-item:last-child{border-top-left-radius:4px;border-top-right-radius:4px}.list-item:not(:last-child){border-bottom:1px solid #dbdbdb}.list-item.is-active{background-color:#6500e5;color:#fff}a.list-item{background-color:#f5f5f5;cursor:pointer}.media{align-items:flex-start;display:flex;text-align:left}.media .content:not(:last-child){margin-bottom:.75rem}.media .media{border-top:1px solid hsla(0,0%,85.9%,.5);display:flex;padding-top:.75rem}.media .media .content:not(:last-child),.media .media .control:not(:last-child){margin-bottom:.5rem}.media .media .media{padding-top:.5rem}.media .media .media+.media{margin-top:.5rem}.media+.media{border-top:1px solid hsla(0,0%,85.9%,.5);margin-top:1rem;padding-top:1rem}.media.is-large+.media{margin-top:1.5rem;padding-top:1.5rem}.media-left,.media-right{flex-basis:auto;flex-grow:0;flex-shrink:0}.media-left{margin-right:1rem}.media-right{margin-left:1rem}.media-content{flex-basis:auto;flex-grow:1;flex-shrink:1;text-align:left}@media screen and (max-width:768px){.media-content{overflow-x:auto}}.menu{font-size:1rem}.menu.is-small{font-size:.75rem}.menu.is-medium{font-size:1.25rem}.menu.is-large{font-size:1.5rem}.menu-list{line-height:1.25}.menu-list a{border-radius:2px;color:#4a4a4a;display:block;padding:.5em .75em}.menu-list a:hover{background-color:#f5f5f5;color:#363636}.menu-list a.is-active{background-color:#6500e5;color:#fff}.menu-list li ul{border-left:1px solid #dbdbdb;margin:.75em;padding-left:.75em}.menu-label{color:#7a7a7a;font-size:.75em;letter-spacing:.1em;text-transform:uppercase}.menu-label:not(:first-child){margin-top:1em}.menu-label:not(:last-child){margin-bottom:1em}.message{background-color:#f5f5f5;border-radius:4px;font-size:1rem}.message strong{color:currentColor}.message a:not(.button):not(.tag):not(.dropdown-item){color:currentColor;text-decoration:underline}.message.is-small{font-size:.75rem}.message.is-medium{font-size:1.25rem}.message.is-large{font-size:1.5rem}.message.is-white{background-color:#fff}.message.is-white .message-header{background-color:#fff;color:#0a0a0a}.message.is-white .message-body{border-color:#fff;color:#4d4d4d}.message.is-black{background-color:#fafafa}.message.is-black .message-header{background-color:#0a0a0a;color:#fff}.message.is-black .message-body{border-color:#0a0a0a;color:#090909}.message.is-light{background-color:#fafafa}.message.is-light .message-header{background-color:#f5f5f5;color:#363636}.message.is-light .message-body{border-color:#f5f5f5;color:#505050}.message.is-dark{background-color:#fafafa}.message.is-dark .message-header{background-color:#363636;color:#f5f5f5}.message.is-dark .message-body{border-color:#363636;color:#2a2a2a}.message.is-primary{background-color:#f9f5ff}.message.is-primary .message-header{background-color:#6500e5;color:#fff}.message.is-primary .message-body{border-color:#6500e5;color:#5603bf}.message.is-link{background-color:#f9f5ff}.message.is-link .message-header{background-color:#6500e5;color:#fff}.message.is-link .message-body{border-color:#6500e5;color:#5603bf}.message.is-info{background-color:#f6fbfe}.message.is-info .message-header{background-color:#209cee;color:#fff}.message.is-info .message-body{border-color:#209cee;color:#12537e}.message.is-success{background-color:#f6fef9}.message.is-success .message-header{background-color:#23d160;color:#fff}.message.is-success .message-body{border-color:#23d160;color:#0e301a}.message.is-warning{background-color:#fffdf5}.message.is-warning .message-header{background-color:#ffdd57;color:rgba(0,0,0,.7)}.message.is-warning .message-body{border-color:#ffdd57;color:#3b3108}.message.is-danger{background-color:#fff5f7}.message.is-danger .message-header{background-color:#ff3860;color:#fff}.message.is-danger .message-body{border-color:#ff3860;color:#cd0930}.message-header{align-items:center;background-color:#4a4a4a;border-radius:4px 4px 0 0;color:#fff;display:flex;font-weight:700;justify-content:space-between;line-height:1.25;padding:.75em 1em;position:relative}.message-header .delete{flex-grow:0;flex-shrink:0;margin-left:.75em}.message-header+.message-body{border-width:0;border-top-left-radius:0;border-top-right-radius:0}.message-body{border-radius:4px;border:solid #dbdbdb;border-width:0 0 0 4px;color:#4a4a4a;padding:1.25em 1.5em}.message-body code,.message-body pre{background-color:#fff}.message-body pre code{background-color:transparent}.modal{align-items:center;display:none;flex-direction:column;justify-content:center;overflow:hidden;position:fixed;z-index:40}.modal.is-active{display:flex}.modal-background{background-color:rgba(10,10,10,.86)}.modal-card,.modal-content{margin:0 20px;max-height:calc(100vh - 160px);overflow:auto;position:relative;width:100%}@media print,screen and (min-width:769px){.modal-card,.modal-content{margin:0 auto;max-height:calc(100vh - 40px);width:640px}}.modal-close{background:none;height:40px;position:fixed;right:20px;top:20px;width:40px}.modal-card{display:flex;flex-direction:column;max-height:calc(100vh - 40px);overflow:hidden;-ms-overflow-y:visible}.modal-card-foot,.modal-card-head{align-items:center;background-color:#f5f5f5;display:flex;flex-shrink:0;justify-content:flex-start;padding:20px;position:relative}.modal-card-head{border-bottom:1px solid #dbdbdb;border-top-left-radius:6px;border-top-right-radius:6px}.modal-card-title{color:#363636;flex-grow:1;flex-shrink:0;font-size:1.5rem;line-height:1}.modal-card-foot{border-bottom-left-radius:6px;border-bottom-right-radius:6px;border-top:1px solid #dbdbdb}.modal-card-foot .button:not(:last-child){margin-right:10px}.modal-card-body{-webkit-overflow-scrolling:touch;background-color:#fff;flex-grow:1;flex-shrink:1;overflow:auto;padding:20px}.navbar{background-color:#fff;min-height:3.25rem;position:relative;z-index:30}.navbar.is-white{background-color:#fff;color:#0a0a0a}.navbar.is-white .navbar-brand .navbar-link,.navbar.is-white .navbar-brand>.navbar-item{color:#0a0a0a}.navbar.is-white .navbar-brand .navbar-link.is-active,.navbar.is-white .navbar-brand .navbar-link:hover,.navbar.is-white .navbar-brand>a.navbar-item.is-active,.navbar.is-white .navbar-brand>a.navbar-item:hover{background-color:#f2f2f2;color:#0a0a0a}.navbar.is-white .navbar-brand .navbar-link:after{border-color:#0a0a0a}.navbar.is-white .navbar-burger{color:#0a0a0a}@media screen and (min-width:1088px){.navbar.is-white .navbar-end .navbar-link,.navbar.is-white .navbar-end>.navbar-item,.navbar.is-white .navbar-start .navbar-link,.navbar.is-white .navbar-start>.navbar-item{color:#0a0a0a}.navbar.is-white .navbar-end .navbar-link.is-active,.navbar.is-white .navbar-end .navbar-link:hover,.navbar.is-white .navbar-end>a.navbar-item.is-active,.navbar.is-white .navbar-end>a.navbar-item:hover,.navbar.is-white .navbar-start .navbar-link.is-active,.navbar.is-white .navbar-start .navbar-link:hover,.navbar.is-white .navbar-start>a.navbar-item.is-active,.navbar.is-white .navbar-start>a.navbar-item:hover{background-color:#f2f2f2;color:#0a0a0a}.navbar.is-white .navbar-end .navbar-link:after,.navbar.is-white .navbar-start .navbar-link:after{border-color:#0a0a0a}.navbar.is-white .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-white .navbar-item.has-dropdown:hover .navbar-link{background-color:#f2f2f2;color:#0a0a0a}.navbar.is-white .navbar-dropdown a.navbar-item.is-active{background-color:#fff;color:#0a0a0a}}.navbar.is-black{background-color:#0a0a0a;color:#fff}.navbar.is-black .navbar-brand .navbar-link,.navbar.is-black .navbar-brand>.navbar-item{color:#fff}.navbar.is-black .navbar-brand .navbar-link.is-active,.navbar.is-black .navbar-brand .navbar-link:hover,.navbar.is-black .navbar-brand>a.navbar-item.is-active,.navbar.is-black .navbar-brand>a.navbar-item:hover{background-color:#000;color:#fff}.navbar.is-black .navbar-brand .navbar-link:after{border-color:#fff}.navbar.is-black .navbar-burger{color:#fff}@media screen and (min-width:1088px){.navbar.is-black .navbar-end .navbar-link,.navbar.is-black .navbar-end>.navbar-item,.navbar.is-black .navbar-start .navbar-link,.navbar.is-black .navbar-start>.navbar-item{color:#fff}.navbar.is-black .navbar-end .navbar-link.is-active,.navbar.is-black .navbar-end .navbar-link:hover,.navbar.is-black .navbar-end>a.navbar-item.is-active,.navbar.is-black .navbar-end>a.navbar-item:hover,.navbar.is-black .navbar-start .navbar-link.is-active,.navbar.is-black .navbar-start .navbar-link:hover,.navbar.is-black .navbar-start>a.navbar-item.is-active,.navbar.is-black .navbar-start>a.navbar-item:hover{background-color:#000;color:#fff}.navbar.is-black .navbar-end .navbar-link:after,.navbar.is-black .navbar-start .navbar-link:after{border-color:#fff}.navbar.is-black .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-black .navbar-item.has-dropdown:hover .navbar-link{background-color:#000;color:#fff}.navbar.is-black .navbar-dropdown a.navbar-item.is-active{background-color:#0a0a0a;color:#fff}}.navbar.is-light{background-color:#f5f5f5;color:#363636}.navbar.is-light .navbar-brand .navbar-link,.navbar.is-light .navbar-brand>.navbar-item{color:#363636}.navbar.is-light .navbar-brand .navbar-link.is-active,.navbar.is-light .navbar-brand .navbar-link:hover,.navbar.is-light .navbar-brand>a.navbar-item.is-active,.navbar.is-light .navbar-brand>a.navbar-item:hover{background-color:#e8e8e8;color:#363636}.navbar.is-light .navbar-brand .navbar-link:after{border-color:#363636}.navbar.is-light .navbar-burger{color:#363636}@media screen and (min-width:1088px){.navbar.is-light .navbar-end .navbar-link,.navbar.is-light .navbar-end>.navbar-item,.navbar.is-light .navbar-start .navbar-link,.navbar.is-light .navbar-start>.navbar-item{color:#363636}.navbar.is-light .navbar-end .navbar-link.is-active,.navbar.is-light .navbar-end .navbar-link:hover,.navbar.is-light .navbar-end>a.navbar-item.is-active,.navbar.is-light .navbar-end>a.navbar-item:hover,.navbar.is-light .navbar-start .navbar-link.is-active,.navbar.is-light .navbar-start .navbar-link:hover,.navbar.is-light .navbar-start>a.navbar-item.is-active,.navbar.is-light .navbar-start>a.navbar-item:hover{background-color:#e8e8e8;color:#363636}.navbar.is-light .navbar-end .navbar-link:after,.navbar.is-light .navbar-start .navbar-link:after{border-color:#363636}.navbar.is-light .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-light .navbar-item.has-dropdown:hover .navbar-link{background-color:#e8e8e8;color:#363636}.navbar.is-light .navbar-dropdown a.navbar-item.is-active{background-color:#f5f5f5;color:#363636}}.navbar.is-dark{background-color:#363636;color:#f5f5f5}.navbar.is-dark .navbar-brand .navbar-link,.navbar.is-dark .navbar-brand>.navbar-item{color:#f5f5f5}.navbar.is-dark .navbar-brand .navbar-link.is-active,.navbar.is-dark .navbar-brand .navbar-link:hover,.navbar.is-dark .navbar-brand>a.navbar-item.is-active,.navbar.is-dark .navbar-brand>a.navbar-item:hover{background-color:#292929;color:#f5f5f5}.navbar.is-dark .navbar-brand .navbar-link:after{border-color:#f5f5f5}.navbar.is-dark .navbar-burger{color:#f5f5f5}@media screen and (min-width:1088px){.navbar.is-dark .navbar-end .navbar-link,.navbar.is-dark .navbar-end>.navbar-item,.navbar.is-dark .navbar-start .navbar-link,.navbar.is-dark .navbar-start>.navbar-item{color:#f5f5f5}.navbar.is-dark .navbar-end .navbar-link.is-active,.navbar.is-dark .navbar-end .navbar-link:hover,.navbar.is-dark .navbar-end>a.navbar-item.is-active,.navbar.is-dark .navbar-end>a.navbar-item:hover,.navbar.is-dark .navbar-start .navbar-link.is-active,.navbar.is-dark .navbar-start .navbar-link:hover,.navbar.is-dark .navbar-start>a.navbar-item.is-active,.navbar.is-dark .navbar-start>a.navbar-item:hover{background-color:#292929;color:#f5f5f5}.navbar.is-dark .navbar-end .navbar-link:after,.navbar.is-dark .navbar-start .navbar-link:after{border-color:#f5f5f5}.navbar.is-dark .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-dark .navbar-item.has-dropdown:hover .navbar-link{background-color:#292929;color:#f5f5f5}.navbar.is-dark .navbar-dropdown a.navbar-item.is-active{background-color:#363636;color:#f5f5f5}}.navbar.is-primary{background-color:#6500e5;color:#fff}.navbar.is-primary .navbar-brand .navbar-link,.navbar.is-primary .navbar-brand>.navbar-item{color:#fff}.navbar.is-primary .navbar-brand .navbar-link.is-active,.navbar.is-primary .navbar-brand .navbar-link:hover,.navbar.is-primary .navbar-brand>a.navbar-item.is-active,.navbar.is-primary .navbar-brand>a.navbar-item:hover{background-color:#5a00cc;color:#fff}.navbar.is-primary .navbar-brand .navbar-link:after{border-color:#fff}.navbar.is-primary .navbar-burger{color:#fff}@media screen and (min-width:1088px){.navbar.is-primary .navbar-end .navbar-link,.navbar.is-primary .navbar-end>.navbar-item,.navbar.is-primary .navbar-start .navbar-link,.navbar.is-primary .navbar-start>.navbar-item{color:#fff}.navbar.is-primary .navbar-end .navbar-link.is-active,.navbar.is-primary .navbar-end .navbar-link:hover,.navbar.is-primary .navbar-end>a.navbar-item.is-active,.navbar.is-primary .navbar-end>a.navbar-item:hover,.navbar.is-primary .navbar-start .navbar-link.is-active,.navbar.is-primary .navbar-start .navbar-link:hover,.navbar.is-primary .navbar-start>a.navbar-item.is-active,.navbar.is-primary .navbar-start>a.navbar-item:hover{background-color:#5a00cc;color:#fff}.navbar.is-primary .navbar-end .navbar-link:after,.navbar.is-primary .navbar-start .navbar-link:after{border-color:#fff}.navbar.is-primary .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-primary .navbar-item.has-dropdown:hover .navbar-link{background-color:#5a00cc;color:#fff}.navbar.is-primary .navbar-dropdown a.navbar-item.is-active{background-color:#6500e5;color:#fff}}.navbar.is-link{background-color:#6500e5;color:#fff}.navbar.is-link .navbar-brand .navbar-link,.navbar.is-link .navbar-brand>.navbar-item{color:#fff}.navbar.is-link .navbar-brand .navbar-link.is-active,.navbar.is-link .navbar-brand .navbar-link:hover,.navbar.is-link .navbar-brand>a.navbar-item.is-active,.navbar.is-link .navbar-brand>a.navbar-item:hover{background-color:#5a00cc;color:#fff}.navbar.is-link .navbar-brand .navbar-link:after{border-color:#fff}.navbar.is-link .navbar-burger{color:#fff}@media screen and (min-width:1088px){.navbar.is-link .navbar-end .navbar-link,.navbar.is-link .navbar-end>.navbar-item,.navbar.is-link .navbar-start .navbar-link,.navbar.is-link .navbar-start>.navbar-item{color:#fff}.navbar.is-link .navbar-end .navbar-link.is-active,.navbar.is-link .navbar-end .navbar-link:hover,.navbar.is-link .navbar-end>a.navbar-item.is-active,.navbar.is-link .navbar-end>a.navbar-item:hover,.navbar.is-link .navbar-start .navbar-link.is-active,.navbar.is-link .navbar-start .navbar-link:hover,.navbar.is-link .navbar-start>a.navbar-item.is-active,.navbar.is-link .navbar-start>a.navbar-item:hover{background-color:#5a00cc;color:#fff}.navbar.is-link .navbar-end .navbar-link:after,.navbar.is-link .navbar-start .navbar-link:after{border-color:#fff}.navbar.is-link .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-link .navbar-item.has-dropdown:hover .navbar-link{background-color:#5a00cc;color:#fff}.navbar.is-link .navbar-dropdown a.navbar-item.is-active{background-color:#6500e5;color:#fff}}.navbar.is-info{background-color:#209cee;color:#fff}.navbar.is-info .navbar-brand .navbar-link,.navbar.is-info .navbar-brand>.navbar-item{color:#fff}.navbar.is-info .navbar-brand .navbar-link.is-active,.navbar.is-info .navbar-brand .navbar-link:hover,.navbar.is-info .navbar-brand>a.navbar-item.is-active,.navbar.is-info .navbar-brand>a.navbar-item:hover{background-color:#118fe4;color:#fff}.navbar.is-info .navbar-brand .navbar-link:after{border-color:#fff}.navbar.is-info .navbar-burger{color:#fff}@media screen and (min-width:1088px){.navbar.is-info .navbar-end .navbar-link,.navbar.is-info .navbar-end>.navbar-item,.navbar.is-info .navbar-start .navbar-link,.navbar.is-info .navbar-start>.navbar-item{color:#fff}.navbar.is-info .navbar-end .navbar-link.is-active,.navbar.is-info .navbar-end .navbar-link:hover,.navbar.is-info .navbar-end>a.navbar-item.is-active,.navbar.is-info .navbar-end>a.navbar-item:hover,.navbar.is-info .navbar-start .navbar-link.is-active,.navbar.is-info .navbar-start .navbar-link:hover,.navbar.is-info .navbar-start>a.navbar-item.is-active,.navbar.is-info .navbar-start>a.navbar-item:hover{background-color:#118fe4;color:#fff}.navbar.is-info .navbar-end .navbar-link:after,.navbar.is-info .navbar-start .navbar-link:after{border-color:#fff}.navbar.is-info .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-info .navbar-item.has-dropdown:hover .navbar-link{background-color:#118fe4;color:#fff}.navbar.is-info .navbar-dropdown a.navbar-item.is-active{background-color:#209cee;color:#fff}}.navbar.is-success{background-color:#23d160;color:#fff}.navbar.is-success .navbar-brand .navbar-link,.navbar.is-success .navbar-brand>.navbar-item{color:#fff}.navbar.is-success .navbar-brand .navbar-link.is-active,.navbar.is-success .navbar-brand .navbar-link:hover,.navbar.is-success .navbar-brand>a.navbar-item.is-active,.navbar.is-success .navbar-brand>a.navbar-item:hover{background-color:#20bc56;color:#fff}.navbar.is-success .navbar-brand .navbar-link:after{border-color:#fff}.navbar.is-success .navbar-burger{color:#fff}@media screen and (min-width:1088px){.navbar.is-success .navbar-end .navbar-link,.navbar.is-success .navbar-end>.navbar-item,.navbar.is-success .navbar-start .navbar-link,.navbar.is-success .navbar-start>.navbar-item{color:#fff}.navbar.is-success .navbar-end .navbar-link.is-active,.navbar.is-success .navbar-end .navbar-link:hover,.navbar.is-success .navbar-end>a.navbar-item.is-active,.navbar.is-success .navbar-end>a.navbar-item:hover,.navbar.is-success .navbar-start .navbar-link.is-active,.navbar.is-success .navbar-start .navbar-link:hover,.navbar.is-success .navbar-start>a.navbar-item.is-active,.navbar.is-success .navbar-start>a.navbar-item:hover{background-color:#20bc56;color:#fff}.navbar.is-success .navbar-end .navbar-link:after,.navbar.is-success .navbar-start .navbar-link:after{border-color:#fff}.navbar.is-success .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-success .navbar-item.has-dropdown:hover .navbar-link{background-color:#20bc56;color:#fff}.navbar.is-success .navbar-dropdown a.navbar-item.is-active{background-color:#23d160;color:#fff}}.navbar.is-warning{background-color:#ffdd57}.navbar.is-warning,.navbar.is-warning .navbar-brand .navbar-link,.navbar.is-warning .navbar-brand>.navbar-item{color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-brand .navbar-link.is-active,.navbar.is-warning .navbar-brand .navbar-link:hover,.navbar.is-warning .navbar-brand>a.navbar-item.is-active,.navbar.is-warning .navbar-brand>a.navbar-item:hover{background-color:#ffd83d;color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-brand .navbar-link:after{border-color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-burger{color:rgba(0,0,0,.7)}@media screen and (min-width:1088px){.navbar.is-warning .navbar-end .navbar-link,.navbar.is-warning .navbar-end>.navbar-item,.navbar.is-warning .navbar-start .navbar-link,.navbar.is-warning .navbar-start>.navbar-item{color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-end .navbar-link.is-active,.navbar.is-warning .navbar-end .navbar-link:hover,.navbar.is-warning .navbar-end>a.navbar-item.is-active,.navbar.is-warning .navbar-end>a.navbar-item:hover,.navbar.is-warning .navbar-start .navbar-link.is-active,.navbar.is-warning .navbar-start .navbar-link:hover,.navbar.is-warning .navbar-start>a.navbar-item.is-active,.navbar.is-warning .navbar-start>a.navbar-item:hover{background-color:#ffd83d;color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-end .navbar-link:after,.navbar.is-warning .navbar-start .navbar-link:after{border-color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-warning .navbar-item.has-dropdown:hover .navbar-link{background-color:#ffd83d;color:rgba(0,0,0,.7)}.navbar.is-warning .navbar-dropdown a.navbar-item.is-active{background-color:#ffdd57;color:rgba(0,0,0,.7)}}.navbar.is-danger{background-color:#ff3860;color:#fff}.navbar.is-danger .navbar-brand .navbar-link,.navbar.is-danger .navbar-brand>.navbar-item{color:#fff}.navbar.is-danger .navbar-brand .navbar-link.is-active,.navbar.is-danger .navbar-brand .navbar-link:hover,.navbar.is-danger .navbar-brand>a.navbar-item.is-active,.navbar.is-danger .navbar-brand>a.navbar-item:hover{background-color:#ff1f4b;color:#fff}.navbar.is-danger .navbar-brand .navbar-link:after{border-color:#fff}.navbar.is-danger .navbar-burger{color:#fff}@media screen and (min-width:1088px){.navbar.is-danger .navbar-end .navbar-link,.navbar.is-danger .navbar-end>.navbar-item,.navbar.is-danger .navbar-start .navbar-link,.navbar.is-danger .navbar-start>.navbar-item{color:#fff}.navbar.is-danger .navbar-end .navbar-link.is-active,.navbar.is-danger .navbar-end .navbar-link:hover,.navbar.is-danger .navbar-end>a.navbar-item.is-active,.navbar.is-danger .navbar-end>a.navbar-item:hover,.navbar.is-danger .navbar-start .navbar-link.is-active,.navbar.is-danger .navbar-start .navbar-link:hover,.navbar.is-danger .navbar-start>a.navbar-item.is-active,.navbar.is-danger .navbar-start>a.navbar-item:hover{background-color:#ff1f4b;color:#fff}.navbar.is-danger .navbar-end .navbar-link:after,.navbar.is-danger .navbar-start .navbar-link:after{border-color:#fff}.navbar.is-danger .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-danger .navbar-item.has-dropdown:hover .navbar-link{background-color:#ff1f4b;color:#fff}.navbar.is-danger .navbar-dropdown a.navbar-item.is-active{background-color:#ff3860;color:#fff}}.navbar>.container{align-items:stretch;display:flex;min-height:3.25rem;width:100%}.navbar.has-shadow{box-shadow:0 2px 0 0 #f5f5f5}.navbar.is-fixed-bottom,.navbar.is-fixed-top{left:0;position:fixed;right:0;z-index:30}.navbar.is-fixed-bottom{bottom:0}.navbar.is-fixed-bottom.has-shadow{box-shadow:0 -2px 0 0 #f5f5f5}.navbar.is-fixed-top{top:0}body.has-navbar-fixed-top,html.has-navbar-fixed-top{padding-top:3.25rem}body.has-navbar-fixed-bottom,html.has-navbar-fixed-bottom{padding-bottom:3.25rem}.navbar-brand,.navbar-tabs{align-items:stretch;display:flex;flex-shrink:0;min-height:3.25rem}.navbar-brand a.navbar-item:hover{background-color:transparent}.navbar-tabs{-webkit-overflow-scrolling:touch;max-width:100vw;overflow-x:auto;overflow-y:hidden}.navbar-burger{color:#4a4a4a;cursor:pointer;display:block;height:3.25rem;position:relative;width:3.25rem;margin-left:auto}.navbar-burger span{background-color:currentColor;display:block;height:1px;left:calc(50% - 8px);position:absolute;-webkit-transform-origin:center;transform-origin:center;transition-duration:86ms;transition-property:background-color,opacity,-webkit-transform;transition-property:background-color,opacity,transform;transition-property:background-color,opacity,transform,-webkit-transform;transition-timing-function:ease-out;width:16px}.navbar-burger span:first-child{top:calc(50% - 6px)}.navbar-burger span:nth-child(2){top:calc(50% - 1px)}.navbar-burger span:nth-child(3){top:calc(50% + 4px)}.navbar-burger:hover{background-color:rgba(0,0,0,.05)}.navbar-burger.is-active span:first-child{-webkit-transform:translateY(5px) rotate(45deg);transform:translateY(5px) rotate(45deg)}.navbar-burger.is-active span:nth-child(2){opacity:0}.navbar-burger.is-active span:nth-child(3){-webkit-transform:translateY(-5px) rotate(-45deg);transform:translateY(-5px) rotate(-45deg)}.navbar-menu{display:none}.navbar-item,.navbar-link{color:#4a4a4a;display:block;line-height:1.5;padding:.5rem .75rem;position:relative}.navbar-item .icon:only-child,.navbar-link .icon:only-child{margin-left:-.25rem;margin-right:-.25rem}.navbar-link,a.navbar-item{cursor:pointer}.navbar-link.is-active,.navbar-link:hover,a.navbar-item.is-active,a.navbar-item:hover{background-color:#fafafa;color:#6500e5}.navbar-item{display:block;flex-grow:0;flex-shrink:0}.navbar-item img{max-height:1.75rem}.navbar-item.has-dropdown{padding:0}.navbar-item.is-expanded{flex-grow:1;flex-shrink:1}.navbar-item.is-tab{border-bottom:1px solid transparent;min-height:3.25rem;padding-bottom:calc(.5rem - 1px)}.navbar-item.is-tab:hover{background-color:transparent;border-bottom-color:#6500e5}.navbar-item.is-tab.is-active{background-color:transparent;border-bottom:3px solid #6500e5;color:#6500e5;padding-bottom:calc(.5rem - 3px)}.navbar-content{flex-grow:1;flex-shrink:1}.navbar-link:not(.is-arrowless){padding-right:2.5em}.navbar-link:not(.is-arrowless):after{border-color:#6500e5;margin-top:-.375em;right:1.125em}.navbar-dropdown{font-size:.875rem;padding-bottom:.5rem;padding-top:.5rem}.navbar-dropdown .navbar-item{padding-left:1.5rem;padding-right:1.5rem}.navbar-divider{background-color:#f5f5f5;border:none;display:none;height:2px;margin:.5rem 0}@media screen and (max-width:1087px){.navbar>.container{display:block}.navbar-brand .navbar-item,.navbar-tabs .navbar-item{align-items:center;display:flex}.navbar-link:after{display:none}.navbar-menu{background-color:#fff;box-shadow:0 8px 16px rgba(10,10,10,.1);padding:.5rem 0}.navbar-menu.is-active{display:block}.navbar.is-fixed-bottom-touch,.navbar.is-fixed-top-touch{left:0;position:fixed;right:0;z-index:30}.navbar.is-fixed-bottom-touch{bottom:0}.navbar.is-fixed-bottom-touch.has-shadow{box-shadow:0 -2px 3px rgba(10,10,10,.1)}.navbar.is-fixed-top-touch{top:0}.navbar.is-fixed-top-touch .navbar-menu,.navbar.is-fixed-top .navbar-menu{-webkit-overflow-scrolling:touch;max-height:calc(100vh - 3.25rem);overflow:auto}body.has-navbar-fixed-top-touch,html.has-navbar-fixed-top-touch{padding-top:3.25rem}body.has-navbar-fixed-bottom-touch,html.has-navbar-fixed-bottom-touch{padding-bottom:3.25rem}}@media screen and (min-width:1088px){.navbar,.navbar-end,.navbar-menu,.navbar-start{align-items:stretch;display:flex}.navbar{min-height:3.25rem}.navbar.is-spaced{padding:1rem 2rem}.navbar.is-spaced .navbar-end,.navbar.is-spaced .navbar-start{align-items:center}.navbar.is-spaced .navbar-link,.navbar.is-spaced a.navbar-item{border-radius:4px}.navbar.is-transparent .navbar-item.has-dropdown.is-active .navbar-link,.navbar.is-transparent .navbar-item.has-dropdown.is-hoverable:hover .navbar-link,.navbar.is-transparent .navbar-link.is-active,.navbar.is-transparent .navbar-link:hover,.navbar.is-transparent a.navbar-item.is-active,.navbar.is-transparent a.navbar-item:hover{background-color:transparent!important}.navbar.is-transparent .navbar-dropdown a.navbar-item:hover{background-color:#f5f5f5;color:#0a0a0a}.navbar.is-transparent .navbar-dropdown a.navbar-item.is-active{background-color:#f5f5f5;color:#6500e5}.navbar-burger{display:none}.navbar-item,.navbar-link{align-items:center;display:flex}.navbar-item{display:flex}.navbar-item.has-dropdown{align-items:stretch}.navbar-item.has-dropdown-up .navbar-link:after{-webkit-transform:rotate(135deg) translate(.25em,-.25em);transform:rotate(135deg) translate(.25em,-.25em)}.navbar-item.has-dropdown-up .navbar-dropdown{border-bottom:2px solid #dbdbdb;border-radius:6px 6px 0 0;border-top:none;bottom:100%;box-shadow:0 -8px 8px rgba(10,10,10,.1);top:auto}.navbar-item.is-active .navbar-dropdown,.navbar-item.is-hoverable:hover .navbar-dropdown{display:block}.navbar-item.is-active .navbar-dropdown.is-boxed,.navbar-item.is-hoverable:hover .navbar-dropdown.is-boxed,.navbar.is-spaced .navbar-item.is-active .navbar-dropdown,.navbar.is-spaced .navbar-item.is-hoverable:hover .navbar-dropdown{opacity:1;pointer-events:auto;-webkit-transform:translateY(0);transform:translateY(0)}.navbar-menu{flex-grow:1;flex-shrink:0}.navbar-start{justify-content:flex-start;margin-right:auto}.navbar-end{justify-content:flex-end;margin-left:auto}.navbar-dropdown{background-color:#fff;border-bottom-left-radius:6px;border-bottom-right-radius:6px;border-top:2px solid #dbdbdb;box-shadow:0 8px 8px rgba(10,10,10,.1);display:none;font-size:.875rem;left:0;min-width:100%;position:absolute;top:100%;z-index:20}.navbar-dropdown .navbar-item{padding:.375rem 1rem;white-space:nowrap}.navbar-dropdown a.navbar-item{padding-right:3rem}.navbar-dropdown a.navbar-item:hover{background-color:#f5f5f5;color:#0a0a0a}.navbar-dropdown a.navbar-item.is-active{background-color:#f5f5f5;color:#6500e5}.navbar-dropdown.is-boxed,.navbar.is-spaced .navbar-dropdown{border-radius:6px;border-top:none;box-shadow:0 8px 8px rgba(10,10,10,.1),0 0 0 1px rgba(10,10,10,.1);display:block;opacity:0;pointer-events:none;top:calc(100% + -4px);-webkit-transform:translateY(-5px);transform:translateY(-5px);transition-duration:86ms;transition-property:opacity,-webkit-transform;transition-property:opacity,transform;transition-property:opacity,transform,-webkit-transform}.navbar-dropdown.is-right{left:auto;right:0}.navbar-divider{display:block}.container>.navbar .navbar-brand,.navbar>.container .navbar-brand{margin-left:-.75rem}.container>.navbar .navbar-menu,.navbar>.container .navbar-menu{margin-right:-.75rem}.navbar.is-fixed-bottom-desktop,.navbar.is-fixed-top-desktop{left:0;position:fixed;right:0;z-index:30}.navbar.is-fixed-bottom-desktop{bottom:0}.navbar.is-fixed-bottom-desktop.has-shadow{box-shadow:0 -2px 3px rgba(10,10,10,.1)}.navbar.is-fixed-top-desktop{top:0}body.has-navbar-fixed-top-desktop,html.has-navbar-fixed-top-desktop{padding-top:3.25rem}body.has-navbar-fixed-bottom-desktop,html.has-navbar-fixed-bottom-desktop{padding-bottom:3.25rem}body.has-spaced-navbar-fixed-top,html.has-spaced-navbar-fixed-top{padding-top:5.25rem}body.has-spaced-navbar-fixed-bottom,html.has-spaced-navbar-fixed-bottom{padding-bottom:5.25rem}.navbar-link.is-active,a.navbar-item.is-active{color:#0a0a0a}.navbar-link.is-active:not(:hover),a.navbar-item.is-active:not(:hover){background-color:transparent}.navbar-item.has-dropdown.is-active .navbar-link,.navbar-item.has-dropdown:hover .navbar-link{background-color:#fafafa}}.hero.is-fullheight-with-navbar{min-height:calc(100vh - 3.25rem)}.pagination{font-size:1rem;margin:-.25rem}.pagination.is-small{font-size:.75rem}.pagination.is-medium{font-size:1.25rem}.pagination.is-large{font-size:1.5rem}.pagination.is-rounded .pagination-next,.pagination.is-rounded .pagination-previous{padding-left:1em;padding-right:1em;border-radius:290486px}.pagination.is-rounded .pagination-link{border-radius:290486px}.pagination,.pagination-list{align-items:center;display:flex;justify-content:center;text-align:center}.pagination-ellipsis,.pagination-link,.pagination-next,.pagination-previous{font-size:1em;padding-left:.5em;padding-right:.5em;justify-content:center;margin:.25rem;text-align:center}.pagination-link,.pagination-next,.pagination-previous{border-color:#dbdbdb;color:#363636;min-width:2.25em}.pagination-link:hover,.pagination-next:hover,.pagination-previous:hover{border-color:#b5b5b5;color:#940dff}.pagination-link:focus,.pagination-next:focus,.pagination-previous:focus{border-color:#3273dc}.pagination-link:active,.pagination-next:active,.pagination-previous:active{box-shadow:inset 0 1px 2px rgba(10,10,10,.2)}.pagination-link[disabled],.pagination-next[disabled],.pagination-previous[disabled]{background-color:#dbdbdb;border-color:#dbdbdb;box-shadow:none;color:#7a7a7a;opacity:.5}.pagination-next,.pagination-previous{padding-left:.75em;padding-right:.75em;white-space:nowrap}.pagination-link.is-current{background-color:#6500e5;border-color:#6500e5;color:#fff}.pagination-ellipsis{color:#b5b5b5;pointer-events:none}.pagination-list{flex-wrap:wrap}@media screen and (max-width:768px){.pagination{flex-wrap:wrap}.pagination-list li,.pagination-next,.pagination-previous{flex-grow:1;flex-shrink:1}}@media print,screen and (min-width:769px){.pagination-list{flex-grow:1;flex-shrink:1;justify-content:flex-start;order:1}.pagination-previous{order:2}.pagination-next{order:3}.pagination{justify-content:space-between}.pagination.is-centered .pagination-previous{order:1}.pagination.is-centered .pagination-list{justify-content:center;order:2}.pagination.is-centered .pagination-next{order:3}.pagination.is-right .pagination-previous{order:1}.pagination.is-right .pagination-next{order:2}.pagination.is-right .pagination-list{justify-content:flex-end;order:3}}.panel{font-size:1rem}.panel:not(:last-child){margin-bottom:1.5rem}.panel-block,.panel-heading,.panel-tabs{border-bottom:1px solid #dbdbdb;border-left:1px solid #dbdbdb;border-right:1px solid #dbdbdb}.panel-block:first-child,.panel-heading:first-child,.panel-tabs:first-child{border-top:1px solid #dbdbdb}.panel-heading{background-color:#f5f5f5;border-radius:4px 4px 0 0;color:#363636;font-size:1.25em;font-weight:300;line-height:1.25;padding:.5em .75em}.panel-tabs{align-items:flex-end;display:flex;font-size:.875em;justify-content:center}.panel-tabs a{border-bottom:1px solid #dbdbdb;margin-bottom:-1px;padding:.5em}.panel-tabs a.is-active{border-bottom-color:#4a4a4a;color:#363636}.panel-list a{color:#4a4a4a}.panel-list a:hover{color:#6500e5}.panel-block{align-items:center;color:#363636;display:flex;justify-content:flex-start;padding:.5em .75em}.panel-block input[type=checkbox]{margin-right:.75em}.panel-block>.control{flex-grow:1;flex-shrink:1;width:100%}.panel-block.is-wrapped{flex-wrap:wrap}.panel-block.is-active{border-left-color:#6500e5;color:#363636}.panel-block.is-active .panel-icon{color:#6500e5}a.panel-block,label.panel-block{cursor:pointer}a.panel-block:hover,label.panel-block:hover{background-color:#f5f5f5}.panel-icon{display:inline-block;font-size:14px;height:1em;line-height:1em;text-align:center;vertical-align:top;width:1em;color:#7a7a7a;margin-right:.75em}.panel-icon .fa{font-size:inherit;line-height:inherit}.tabs{-webkit-overflow-scrolling:touch;align-items:stretch;display:flex;font-size:1rem;justify-content:space-between;overflow:hidden;overflow-x:auto;white-space:nowrap}.tabs a{align-items:center;border-bottom:1px solid #dbdbdb;color:#4a4a4a;display:flex;justify-content:center;margin-bottom:-1px;padding:.5em 1em;vertical-align:top}.tabs a:hover{border-bottom-color:#363636;color:#363636}.tabs li{display:block}.tabs li.is-active a{border-bottom-color:#6500e5;color:#6500e5}.tabs ul{align-items:center;border-bottom:1px solid #dbdbdb;display:flex;flex-grow:1;flex-shrink:0;justify-content:flex-start}.tabs ul.is-center,.tabs ul.is-left{padding-right:.75em}.tabs ul.is-center{flex:none;justify-content:center;padding-left:.75em}.tabs ul.is-right{justify-content:flex-end;padding-left:.75em}.tabs .icon:first-child{margin-right:.5em}.tabs .icon:last-child{margin-left:.5em}.tabs.is-centered ul{justify-content:center}.tabs.is-right ul{justify-content:flex-end}.tabs.is-boxed a{border:1px solid transparent;border-radius:4px 4px 0 0}.tabs.is-boxed a:hover{background-color:#f5f5f5;border-bottom-color:#dbdbdb}.tabs.is-boxed li.is-active a{background-color:#fff;border-color:#dbdbdb;border-bottom-color:transparent!important}.tabs.is-fullwidth li{flex-grow:1;flex-shrink:0}.tabs.is-toggle a{border:1px solid #dbdbdb;margin-bottom:0;position:relative}.tabs.is-toggle a:hover{background-color:#f5f5f5;border-color:#b5b5b5;z-index:2}.tabs.is-toggle li+li{margin-left:-1px}.tabs.is-toggle li:first-child a{border-radius:4px 0 0 4px}.tabs.is-toggle li:last-child a{border-radius:0 4px 4px 0}.tabs.is-toggle li.is-active a{background-color:#6500e5;border-color:#6500e5;color:#fff;z-index:1}.tabs.is-toggle ul{border-bottom:none}.tabs.is-toggle.is-toggle-rounded li:first-child a{border-bottom-left-radius:290486px;border-top-left-radius:290486px;padding-left:1.25em}.tabs.is-toggle.is-toggle-rounded li:last-child a{border-bottom-right-radius:290486px;border-top-right-radius:290486px;padding-right:1.25em}.tabs.is-small{font-size:.75rem}.tabs.is-medium{font-size:1.25rem}.tabs.is-large{font-size:1.5rem}.column{display:block;flex-basis:0;flex-grow:1;flex-shrink:1;padding:.75rem}.columns.is-mobile>.column.is-narrow{flex:none}.columns.is-mobile>.column.is-full{flex:none;width:100%}.columns.is-mobile>.column.is-three-quarters{flex:none;width:75%}.columns.is-mobile>.column.is-two-thirds{flex:none;width:66.6666%}.columns.is-mobile>.column.is-half{flex:none;width:50%}.columns.is-mobile>.column.is-one-third{flex:none;width:33.3333%}.columns.is-mobile>.column.is-one-quarter{flex:none;width:25%}.columns.is-mobile>.column.is-one-fifth{flex:none;width:20%}.columns.is-mobile>.column.is-two-fifths{flex:none;width:40%}.columns.is-mobile>.column.is-three-fifths{flex:none;width:60%}.columns.is-mobile>.column.is-four-fifths{flex:none;width:80%}.columns.is-mobile>.column.is-offset-three-quarters{margin-left:75%}.columns.is-mobile>.column.is-offset-two-thirds{margin-left:66.6666%}.columns.is-mobile>.column.is-offset-half{margin-left:50%}.columns.is-mobile>.column.is-offset-one-third{margin-left:33.3333%}.columns.is-mobile>.column.is-offset-one-quarter{margin-left:25%}.columns.is-mobile>.column.is-offset-one-fifth{margin-left:20%}.columns.is-mobile>.column.is-offset-two-fifths{margin-left:40%}.columns.is-mobile>.column.is-offset-three-fifths{margin-left:60%}.columns.is-mobile>.column.is-offset-four-fifths{margin-left:80%}.columns.is-mobile>.column.is-1{flex:none;width:8.33333%}.columns.is-mobile>.column.is-offset-1{margin-left:8.33333%}.columns.is-mobile>.column.is-2{flex:none;width:16.66667%}.columns.is-mobile>.column.is-offset-2{margin-left:16.66667%}.columns.is-mobile>.column.is-3{flex:none;width:25%}.columns.is-mobile>.column.is-offset-3{margin-left:25%}.columns.is-mobile>.column.is-4{flex:none;width:33.33333%}.columns.is-mobile>.column.is-offset-4{margin-left:33.33333%}.columns.is-mobile>.column.is-5{flex:none;width:41.66667%}.columns.is-mobile>.column.is-offset-5{margin-left:41.66667%}.columns.is-mobile>.column.is-6{flex:none;width:50%}.columns.is-mobile>.column.is-offset-6{margin-left:50%}.columns.is-mobile>.column.is-7{flex:none;width:58.33333%}.columns.is-mobile>.column.is-offset-7{margin-left:58.33333%}.columns.is-mobile>.column.is-8{flex:none;width:66.66667%}.columns.is-mobile>.column.is-offset-8{margin-left:66.66667%}.columns.is-mobile>.column.is-9{flex:none;width:75%}.columns.is-mobile>.column.is-offset-9{margin-left:75%}.columns.is-mobile>.column.is-10{flex:none;width:83.33333%}.columns.is-mobile>.column.is-offset-10{margin-left:83.33333%}.columns.is-mobile>.column.is-11{flex:none;width:91.66667%}.columns.is-mobile>.column.is-offset-11{margin-left:91.66667%}.columns.is-mobile>.column.is-12{flex:none;width:100%}.columns.is-mobile>.column.is-offset-12{margin-left:100%}@media screen and (max-width:768px){.column.is-narrow-mobile{flex:none}.column.is-full-mobile{flex:none;width:100%}.column.is-three-quarters-mobile{flex:none;width:75%}.column.is-two-thirds-mobile{flex:none;width:66.6666%}.column.is-half-mobile{flex:none;width:50%}.column.is-one-third-mobile{flex:none;width:33.3333%}.column.is-one-quarter-mobile{flex:none;width:25%}.column.is-one-fifth-mobile{flex:none;width:20%}.column.is-two-fifths-mobile{flex:none;width:40%}.column.is-three-fifths-mobile{flex:none;width:60%}.column.is-four-fifths-mobile{flex:none;width:80%}.column.is-offset-three-quarters-mobile{margin-left:75%}.column.is-offset-two-thirds-mobile{margin-left:66.6666%}.column.is-offset-half-mobile{margin-left:50%}.column.is-offset-one-third-mobile{margin-left:33.3333%}.column.is-offset-one-quarter-mobile{margin-left:25%}.column.is-offset-one-fifth-mobile{margin-left:20%}.column.is-offset-two-fifths-mobile{margin-left:40%}.column.is-offset-three-fifths-mobile{margin-left:60%}.column.is-offset-four-fifths-mobile{margin-left:80%}.column.is-1-mobile{flex:none;width:8.33333%}.column.is-offset-1-mobile{margin-left:8.33333%}.column.is-2-mobile{flex:none;width:16.66667%}.column.is-offset-2-mobile{margin-left:16.66667%}.column.is-3-mobile{flex:none;width:25%}.column.is-offset-3-mobile{margin-left:25%}.column.is-4-mobile{flex:none;width:33.33333%}.column.is-offset-4-mobile{margin-left:33.33333%}.column.is-5-mobile{flex:none;width:41.66667%}.column.is-offset-5-mobile{margin-left:41.66667%}.column.is-6-mobile{flex:none;width:50%}.column.is-offset-6-mobile{margin-left:50%}.column.is-7-mobile{flex:none;width:58.33333%}.column.is-offset-7-mobile{margin-left:58.33333%}.column.is-8-mobile{flex:none;width:66.66667%}.column.is-offset-8-mobile{margin-left:66.66667%}.column.is-9-mobile{flex:none;width:75%}.column.is-offset-9-mobile{margin-left:75%}.column.is-10-mobile{flex:none;width:83.33333%}.column.is-offset-10-mobile{margin-left:83.33333%}.column.is-11-mobile{flex:none;width:91.66667%}.column.is-offset-11-mobile{margin-left:91.66667%}.column.is-12-mobile{flex:none;width:100%}.column.is-offset-12-mobile{margin-left:100%}}@media print,screen and (min-width:769px){.column.is-narrow,.column.is-narrow-tablet{flex:none}.column.is-full,.column.is-full-tablet{flex:none;width:100%}.column.is-three-quarters,.column.is-three-quarters-tablet{flex:none;width:75%}.column.is-two-thirds,.column.is-two-thirds-tablet{flex:none;width:66.6666%}.column.is-half,.column.is-half-tablet{flex:none;width:50%}.column.is-one-third,.column.is-one-third-tablet{flex:none;width:33.3333%}.column.is-one-quarter,.column.is-one-quarter-tablet{flex:none;width:25%}.column.is-one-fifth,.column.is-one-fifth-tablet{flex:none;width:20%}.column.is-two-fifths,.column.is-two-fifths-tablet{flex:none;width:40%}.column.is-three-fifths,.column.is-three-fifths-tablet{flex:none;width:60%}.column.is-four-fifths,.column.is-four-fifths-tablet{flex:none;width:80%}.column.is-offset-three-quarters,.column.is-offset-three-quarters-tablet{margin-left:75%}.column.is-offset-two-thirds,.column.is-offset-two-thirds-tablet{margin-left:66.6666%}.column.is-offset-half,.column.is-offset-half-tablet{margin-left:50%}.column.is-offset-one-third,.column.is-offset-one-third-tablet{margin-left:33.3333%}.column.is-offset-one-quarter,.column.is-offset-one-quarter-tablet{margin-left:25%}.column.is-offset-one-fifth,.column.is-offset-one-fifth-tablet{margin-left:20%}.column.is-offset-two-fifths,.column.is-offset-two-fifths-tablet{margin-left:40%}.column.is-offset-three-fifths,.column.is-offset-three-fifths-tablet{margin-left:60%}.column.is-offset-four-fifths,.column.is-offset-four-fifths-tablet{margin-left:80%}.column.is-1,.column.is-1-tablet{flex:none;width:8.33333%}.column.is-offset-1,.column.is-offset-1-tablet{margin-left:8.33333%}.column.is-2,.column.is-2-tablet{flex:none;width:16.66667%}.column.is-offset-2,.column.is-offset-2-tablet{margin-left:16.66667%}.column.is-3,.column.is-3-tablet{flex:none;width:25%}.column.is-offset-3,.column.is-offset-3-tablet{margin-left:25%}.column.is-4,.column.is-4-tablet{flex:none;width:33.33333%}.column.is-offset-4,.column.is-offset-4-tablet{margin-left:33.33333%}.column.is-5,.column.is-5-tablet{flex:none;width:41.66667%}.column.is-offset-5,.column.is-offset-5-tablet{margin-left:41.66667%}.column.is-6,.column.is-6-tablet{flex:none;width:50%}.column.is-offset-6,.column.is-offset-6-tablet{margin-left:50%}.column.is-7,.column.is-7-tablet{flex:none;width:58.33333%}.column.is-offset-7,.column.is-offset-7-tablet{margin-left:58.33333%}.column.is-8,.column.is-8-tablet{flex:none;width:66.66667%}.column.is-offset-8,.column.is-offset-8-tablet{margin-left:66.66667%}.column.is-9,.column.is-9-tablet{flex:none;width:75%}.column.is-offset-9,.column.is-offset-9-tablet{margin-left:75%}.column.is-10,.column.is-10-tablet{flex:none;width:83.33333%}.column.is-offset-10,.column.is-offset-10-tablet{margin-left:83.33333%}.column.is-11,.column.is-11-tablet{flex:none;width:91.66667%}.column.is-offset-11,.column.is-offset-11-tablet{margin-left:91.66667%}.column.is-12,.column.is-12-tablet{flex:none;width:100%}.column.is-offset-12,.column.is-offset-12-tablet{margin-left:100%}}@media screen and (max-width:1087px){.column.is-narrow-touch{flex:none}.column.is-full-touch{flex:none;width:100%}.column.is-three-quarters-touch{flex:none;width:75%}.column.is-two-thirds-touch{flex:none;width:66.6666%}.column.is-half-touch{flex:none;width:50%}.column.is-one-third-touch{flex:none;width:33.3333%}.column.is-one-quarter-touch{flex:none;width:25%}.column.is-one-fifth-touch{flex:none;width:20%}.column.is-two-fifths-touch{flex:none;width:40%}.column.is-three-fifths-touch{flex:none;width:60%}.column.is-four-fifths-touch{flex:none;width:80%}.column.is-offset-three-quarters-touch{margin-left:75%}.column.is-offset-two-thirds-touch{margin-left:66.6666%}.column.is-offset-half-touch{margin-left:50%}.column.is-offset-one-third-touch{margin-left:33.3333%}.column.is-offset-one-quarter-touch{margin-left:25%}.column.is-offset-one-fifth-touch{margin-left:20%}.column.is-offset-two-fifths-touch{margin-left:40%}.column.is-offset-three-fifths-touch{margin-left:60%}.column.is-offset-four-fifths-touch{margin-left:80%}.column.is-1-touch{flex:none;width:8.33333%}.column.is-offset-1-touch{margin-left:8.33333%}.column.is-2-touch{flex:none;width:16.66667%}.column.is-offset-2-touch{margin-left:16.66667%}.column.is-3-touch{flex:none;width:25%}.column.is-offset-3-touch{margin-left:25%}.column.is-4-touch{flex:none;width:33.33333%}.column.is-offset-4-touch{margin-left:33.33333%}.column.is-5-touch{flex:none;width:41.66667%}.column.is-offset-5-touch{margin-left:41.66667%}.column.is-6-touch{flex:none;width:50%}.column.is-offset-6-touch{margin-left:50%}.column.is-7-touch{flex:none;width:58.33333%}.column.is-offset-7-touch{margin-left:58.33333%}.column.is-8-touch{flex:none;width:66.66667%}.column.is-offset-8-touch{margin-left:66.66667%}.column.is-9-touch{flex:none;width:75%}.column.is-offset-9-touch{margin-left:75%}.column.is-10-touch{flex:none;width:83.33333%}.column.is-offset-10-touch{margin-left:83.33333%}.column.is-11-touch{flex:none;width:91.66667%}.column.is-offset-11-touch{margin-left:91.66667%}.column.is-12-touch{flex:none;width:100%}.column.is-offset-12-touch{margin-left:100%}}@media screen and (min-width:1088px){.column.is-narrow-desktop{flex:none}.column.is-full-desktop{flex:none;width:100%}.column.is-three-quarters-desktop{flex:none;width:75%}.column.is-two-thirds-desktop{flex:none;width:66.6666%}.column.is-half-desktop{flex:none;width:50%}.column.is-one-third-desktop{flex:none;width:33.3333%}.column.is-one-quarter-desktop{flex:none;width:25%}.column.is-one-fifth-desktop{flex:none;width:20%}.column.is-two-fifths-desktop{flex:none;width:40%}.column.is-three-fifths-desktop{flex:none;width:60%}.column.is-four-fifths-desktop{flex:none;width:80%}.column.is-offset-three-quarters-desktop{margin-left:75%}.column.is-offset-two-thirds-desktop{margin-left:66.6666%}.column.is-offset-half-desktop{margin-left:50%}.column.is-offset-one-third-desktop{margin-left:33.3333%}.column.is-offset-one-quarter-desktop{margin-left:25%}.column.is-offset-one-fifth-desktop{margin-left:20%}.column.is-offset-two-fifths-desktop{margin-left:40%}.column.is-offset-three-fifths-desktop{margin-left:60%}.column.is-offset-four-fifths-desktop{margin-left:80%}.column.is-1-desktop{flex:none;width:8.33333%}.column.is-offset-1-desktop{margin-left:8.33333%}.column.is-2-desktop{flex:none;width:16.66667%}.column.is-offset-2-desktop{margin-left:16.66667%}.column.is-3-desktop{flex:none;width:25%}.column.is-offset-3-desktop{margin-left:25%}.column.is-4-desktop{flex:none;width:33.33333%}.column.is-offset-4-desktop{margin-left:33.33333%}.column.is-5-desktop{flex:none;width:41.66667%}.column.is-offset-5-desktop{margin-left:41.66667%}.column.is-6-desktop{flex:none;width:50%}.column.is-offset-6-desktop{margin-left:50%}.column.is-7-desktop{flex:none;width:58.33333%}.column.is-offset-7-desktop{margin-left:58.33333%}.column.is-8-desktop{flex:none;width:66.66667%}.column.is-offset-8-desktop{margin-left:66.66667%}.column.is-9-desktop{flex:none;width:75%}.column.is-offset-9-desktop{margin-left:75%}.column.is-10-desktop{flex:none;width:83.33333%}.column.is-offset-10-desktop{margin-left:83.33333%}.column.is-11-desktop{flex:none;width:91.66667%}.column.is-offset-11-desktop{margin-left:91.66667%}.column.is-12-desktop{flex:none;width:100%}.column.is-offset-12-desktop{margin-left:100%}}@media screen and (min-width:1280px){.column.is-narrow-widescreen{flex:none}.column.is-full-widescreen{flex:none;width:100%}.column.is-three-quarters-widescreen{flex:none;width:75%}.column.is-two-thirds-widescreen{flex:none;width:66.6666%}.column.is-half-widescreen{flex:none;width:50%}.column.is-one-third-widescreen{flex:none;width:33.3333%}.column.is-one-quarter-widescreen{flex:none;width:25%}.column.is-one-fifth-widescreen{flex:none;width:20%}.column.is-two-fifths-widescreen{flex:none;width:40%}.column.is-three-fifths-widescreen{flex:none;width:60%}.column.is-four-fifths-widescreen{flex:none;width:80%}.column.is-offset-three-quarters-widescreen{margin-left:75%}.column.is-offset-two-thirds-widescreen{margin-left:66.6666%}.column.is-offset-half-widescreen{margin-left:50%}.column.is-offset-one-third-widescreen{margin-left:33.3333%}.column.is-offset-one-quarter-widescreen{margin-left:25%}.column.is-offset-one-fifth-widescreen{margin-left:20%}.column.is-offset-two-fifths-widescreen{margin-left:40%}.column.is-offset-three-fifths-widescreen{margin-left:60%}.column.is-offset-four-fifths-widescreen{margin-left:80%}.column.is-1-widescreen{flex:none;width:8.33333%}.column.is-offset-1-widescreen{margin-left:8.33333%}.column.is-2-widescreen{flex:none;width:16.66667%}.column.is-offset-2-widescreen{margin-left:16.66667%}.column.is-3-widescreen{flex:none;width:25%}.column.is-offset-3-widescreen{margin-left:25%}.column.is-4-widescreen{flex:none;width:33.33333%}.column.is-offset-4-widescreen{margin-left:33.33333%}.column.is-5-widescreen{flex:none;width:41.66667%}.column.is-offset-5-widescreen{margin-left:41.66667%}.column.is-6-widescreen{flex:none;width:50%}.column.is-offset-6-widescreen{margin-left:50%}.column.is-7-widescreen{flex:none;width:58.33333%}.column.is-offset-7-widescreen{margin-left:58.33333%}.column.is-8-widescreen{flex:none;width:66.66667%}.column.is-offset-8-widescreen{margin-left:66.66667%}.column.is-9-widescreen{flex:none;width:75%}.column.is-offset-9-widescreen{margin-left:75%}.column.is-10-widescreen{flex:none;width:83.33333%}.column.is-offset-10-widescreen{margin-left:83.33333%}.column.is-11-widescreen{flex:none;width:91.66667%}.column.is-offset-11-widescreen{margin-left:91.66667%}.column.is-12-widescreen{flex:none;width:100%}.column.is-offset-12-widescreen{margin-left:100%}}@media screen and (min-width:1472px){.column.is-narrow-fullhd{flex:none}.column.is-full-fullhd{flex:none;width:100%}.column.is-three-quarters-fullhd{flex:none;width:75%}.column.is-two-thirds-fullhd{flex:none;width:66.6666%}.column.is-half-fullhd{flex:none;width:50%}.column.is-one-third-fullhd{flex:none;width:33.3333%}.column.is-one-quarter-fullhd{flex:none;width:25%}.column.is-one-fifth-fullhd{flex:none;width:20%}.column.is-two-fifths-fullhd{flex:none;width:40%}.column.is-three-fifths-fullhd{flex:none;width:60%}.column.is-four-fifths-fullhd{flex:none;width:80%}.column.is-offset-three-quarters-fullhd{margin-left:75%}.column.is-offset-two-thirds-fullhd{margin-left:66.6666%}.column.is-offset-half-fullhd{margin-left:50%}.column.is-offset-one-third-fullhd{margin-left:33.3333%}.column.is-offset-one-quarter-fullhd{margin-left:25%}.column.is-offset-one-fifth-fullhd{margin-left:20%}.column.is-offset-two-fifths-fullhd{margin-left:40%}.column.is-offset-three-fifths-fullhd{margin-left:60%}.column.is-offset-four-fifths-fullhd{margin-left:80%}.column.is-1-fullhd{flex:none;width:8.33333%}.column.is-offset-1-fullhd{margin-left:8.33333%}.column.is-2-fullhd{flex:none;width:16.66667%}.column.is-offset-2-fullhd{margin-left:16.66667%}.column.is-3-fullhd{flex:none;width:25%}.column.is-offset-3-fullhd{margin-left:25%}.column.is-4-fullhd{flex:none;width:33.33333%}.column.is-offset-4-fullhd{margin-left:33.33333%}.column.is-5-fullhd{flex:none;width:41.66667%}.column.is-offset-5-fullhd{margin-left:41.66667%}.column.is-6-fullhd{flex:none;width:50%}.column.is-offset-6-fullhd{margin-left:50%}.column.is-7-fullhd{flex:none;width:58.33333%}.column.is-offset-7-fullhd{margin-left:58.33333%}.column.is-8-fullhd{flex:none;width:66.66667%}.column.is-offset-8-fullhd{margin-left:66.66667%}.column.is-9-fullhd{flex:none;width:75%}.column.is-offset-9-fullhd{margin-left:75%}.column.is-10-fullhd{flex:none;width:83.33333%}.column.is-offset-10-fullhd{margin-left:83.33333%}.column.is-11-fullhd{flex:none;width:91.66667%}.column.is-offset-11-fullhd{margin-left:91.66667%}.column.is-12-fullhd{flex:none;width:100%}.column.is-offset-12-fullhd{margin-left:100%}}.columns{margin-left:-.75rem;margin-right:-.75rem;margin-top:-.75rem}.columns:last-child{margin-bottom:-.75rem}.columns:not(:last-child){margin-bottom:.75rem}.columns.is-centered{justify-content:center}.columns.is-gapless{margin-left:0;margin-right:0;margin-top:0}.columns.is-gapless>.column{margin:0;padding:0!important}.columns.is-gapless:not(:last-child){margin-bottom:1.5rem}.columns.is-gapless:last-child{margin-bottom:0}.columns.is-mobile{display:flex}.columns.is-multiline{flex-wrap:wrap}.columns.is-vcentered{align-items:center}@media print,screen and (min-width:769px){.columns:not(.is-desktop){display:flex}}@media screen and (min-width:1088px){.columns.is-desktop{display:flex}}.columns.is-variable{--columnGap:0.75rem;margin-left:calc(-1*var(--columnGap));margin-right:calc(-1*var(--columnGap))}.columns.is-variable .column{padding-left:var(--columnGap);padding-right:var(--columnGap)}.columns.is-variable.is-0{--columnGap:0rem}@media screen and (max-width:768px){.columns.is-variable.is-0-mobile{--columnGap:0rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-0-tablet{--columnGap:0rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-0-tablet-only{--columnGap:0rem}}@media screen and (max-width:1087px){.columns.is-variable.is-0-touch{--columnGap:0rem}}@media screen and (min-width:1088px){.columns.is-variable.is-0-desktop{--columnGap:0rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-0-desktop-only{--columnGap:0rem}}@media screen and (min-width:1280px){.columns.is-variable.is-0-widescreen{--columnGap:0rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-0-widescreen-only{--columnGap:0rem}}@media screen and (min-width:1472px){.columns.is-variable.is-0-fullhd{--columnGap:0rem}}.columns.is-variable.is-1{--columnGap:0.25rem}@media screen and (max-width:768px){.columns.is-variable.is-1-mobile{--columnGap:0.25rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-1-tablet{--columnGap:0.25rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-1-tablet-only{--columnGap:0.25rem}}@media screen and (max-width:1087px){.columns.is-variable.is-1-touch{--columnGap:0.25rem}}@media screen and (min-width:1088px){.columns.is-variable.is-1-desktop{--columnGap:0.25rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-1-desktop-only{--columnGap:0.25rem}}@media screen and (min-width:1280px){.columns.is-variable.is-1-widescreen{--columnGap:0.25rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-1-widescreen-only{--columnGap:0.25rem}}@media screen and (min-width:1472px){.columns.is-variable.is-1-fullhd{--columnGap:0.25rem}}.columns.is-variable.is-2{--columnGap:0.5rem}@media screen and (max-width:768px){.columns.is-variable.is-2-mobile{--columnGap:0.5rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-2-tablet{--columnGap:0.5rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-2-tablet-only{--columnGap:0.5rem}}@media screen and (max-width:1087px){.columns.is-variable.is-2-touch{--columnGap:0.5rem}}@media screen and (min-width:1088px){.columns.is-variable.is-2-desktop{--columnGap:0.5rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-2-desktop-only{--columnGap:0.5rem}}@media screen and (min-width:1280px){.columns.is-variable.is-2-widescreen{--columnGap:0.5rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-2-widescreen-only{--columnGap:0.5rem}}@media screen and (min-width:1472px){.columns.is-variable.is-2-fullhd{--columnGap:0.5rem}}.columns.is-variable.is-3{--columnGap:0.75rem}@media screen and (max-width:768px){.columns.is-variable.is-3-mobile{--columnGap:0.75rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-3-tablet{--columnGap:0.75rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-3-tablet-only{--columnGap:0.75rem}}@media screen and (max-width:1087px){.columns.is-variable.is-3-touch{--columnGap:0.75rem}}@media screen and (min-width:1088px){.columns.is-variable.is-3-desktop{--columnGap:0.75rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-3-desktop-only{--columnGap:0.75rem}}@media screen and (min-width:1280px){.columns.is-variable.is-3-widescreen{--columnGap:0.75rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-3-widescreen-only{--columnGap:0.75rem}}@media screen and (min-width:1472px){.columns.is-variable.is-3-fullhd{--columnGap:0.75rem}}.columns.is-variable.is-4{--columnGap:1rem}@media screen and (max-width:768px){.columns.is-variable.is-4-mobile{--columnGap:1rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-4-tablet{--columnGap:1rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-4-tablet-only{--columnGap:1rem}}@media screen and (max-width:1087px){.columns.is-variable.is-4-touch{--columnGap:1rem}}@media screen and (min-width:1088px){.columns.is-variable.is-4-desktop{--columnGap:1rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-4-desktop-only{--columnGap:1rem}}@media screen and (min-width:1280px){.columns.is-variable.is-4-widescreen{--columnGap:1rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-4-widescreen-only{--columnGap:1rem}}@media screen and (min-width:1472px){.columns.is-variable.is-4-fullhd{--columnGap:1rem}}.columns.is-variable.is-5{--columnGap:1.25rem}@media screen and (max-width:768px){.columns.is-variable.is-5-mobile{--columnGap:1.25rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-5-tablet{--columnGap:1.25rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-5-tablet-only{--columnGap:1.25rem}}@media screen and (max-width:1087px){.columns.is-variable.is-5-touch{--columnGap:1.25rem}}@media screen and (min-width:1088px){.columns.is-variable.is-5-desktop{--columnGap:1.25rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-5-desktop-only{--columnGap:1.25rem}}@media screen and (min-width:1280px){.columns.is-variable.is-5-widescreen{--columnGap:1.25rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-5-widescreen-only{--columnGap:1.25rem}}@media screen and (min-width:1472px){.columns.is-variable.is-5-fullhd{--columnGap:1.25rem}}.columns.is-variable.is-6{--columnGap:1.5rem}@media screen and (max-width:768px){.columns.is-variable.is-6-mobile{--columnGap:1.5rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-6-tablet{--columnGap:1.5rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-6-tablet-only{--columnGap:1.5rem}}@media screen and (max-width:1087px){.columns.is-variable.is-6-touch{--columnGap:1.5rem}}@media screen and (min-width:1088px){.columns.is-variable.is-6-desktop{--columnGap:1.5rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-6-desktop-only{--columnGap:1.5rem}}@media screen and (min-width:1280px){.columns.is-variable.is-6-widescreen{--columnGap:1.5rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-6-widescreen-only{--columnGap:1.5rem}}@media screen and (min-width:1472px){.columns.is-variable.is-6-fullhd{--columnGap:1.5rem}}.columns.is-variable.is-7{--columnGap:1.75rem}@media screen and (max-width:768px){.columns.is-variable.is-7-mobile{--columnGap:1.75rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-7-tablet{--columnGap:1.75rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-7-tablet-only{--columnGap:1.75rem}}@media screen and (max-width:1087px){.columns.is-variable.is-7-touch{--columnGap:1.75rem}}@media screen and (min-width:1088px){.columns.is-variable.is-7-desktop{--columnGap:1.75rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-7-desktop-only{--columnGap:1.75rem}}@media screen and (min-width:1280px){.columns.is-variable.is-7-widescreen{--columnGap:1.75rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-7-widescreen-only{--columnGap:1.75rem}}@media screen and (min-width:1472px){.columns.is-variable.is-7-fullhd{--columnGap:1.75rem}}.columns.is-variable.is-8{--columnGap:2rem}@media screen and (max-width:768px){.columns.is-variable.is-8-mobile{--columnGap:2rem}}@media print,screen and (min-width:769px){.columns.is-variable.is-8-tablet{--columnGap:2rem}}@media screen and (min-width:769px) and (max-width:1087px){.columns.is-variable.is-8-tablet-only{--columnGap:2rem}}@media screen and (max-width:1087px){.columns.is-variable.is-8-touch{--columnGap:2rem}}@media screen and (min-width:1088px){.columns.is-variable.is-8-desktop{--columnGap:2rem}}@media screen and (min-width:1088px) and (max-width:1279px){.columns.is-variable.is-8-desktop-only{--columnGap:2rem}}@media screen and (min-width:1280px){.columns.is-variable.is-8-widescreen{--columnGap:2rem}}@media screen and (min-width:1280px) and (max-width:1471px){.columns.is-variable.is-8-widescreen-only{--columnGap:2rem}}@media screen and (min-width:1472px){.columns.is-variable.is-8-fullhd{--columnGap:2rem}}.tile{align-items:stretch;display:block;flex-basis:0;flex-grow:1;flex-shrink:1;min-height:-webkit-min-content;min-height:-moz-min-content;min-height:min-content}.tile.is-ancestor{margin-left:-.75rem;margin-right:-.75rem;margin-top:-.75rem}.tile.is-ancestor:last-child{margin-bottom:-.75rem}.tile.is-ancestor:not(:last-child){margin-bottom:.75rem}.tile.is-child{margin:0!important}.tile.is-parent{padding:.75rem}.tile.is-vertical{flex-direction:column}.tile.is-vertical>.tile.is-child:not(:last-child){margin-bottom:1.5rem!important}@media print,screen and (min-width:769px){.tile:not(.is-child){display:flex}.tile.is-1{flex:none;width:8.33333%}.tile.is-2{flex:none;width:16.66667%}.tile.is-3{flex:none;width:25%}.tile.is-4{flex:none;width:33.33333%}.tile.is-5{flex:none;width:41.66667%}.tile.is-6{flex:none;width:50%}.tile.is-7{flex:none;width:58.33333%}.tile.is-8{flex:none;width:66.66667%}.tile.is-9{flex:none;width:75%}.tile.is-10{flex:none;width:83.33333%}.tile.is-11{flex:none;width:91.66667%}.tile.is-12{flex:none;width:100%}}.hero{align-items:stretch;display:flex;flex-direction:column;justify-content:space-between}.hero .navbar{background:none}.hero .tabs ul{border-bottom:none}.hero.is-white{background-color:#fff;color:#0a0a0a}.hero.is-white a:not(.button):not(.dropdown-item):not(.tag),.hero.is-white strong{color:inherit}.hero.is-white .title{color:#0a0a0a}.hero.is-white .subtitle{color:rgba(10,10,10,.9)}.hero.is-white .subtitle a:not(.button),.hero.is-white .subtitle strong{color:#0a0a0a}@media screen and (max-width:1087px){.hero.is-white .navbar-menu{background-color:#fff}}.hero.is-white .navbar-item,.hero.is-white .navbar-link{color:rgba(10,10,10,.7)}.hero.is-white .navbar-link.is-active,.hero.is-white .navbar-link:hover,.hero.is-white a.navbar-item.is-active,.hero.is-white a.navbar-item:hover{background-color:#f2f2f2;color:#0a0a0a}.hero.is-white .tabs a{color:#0a0a0a;opacity:.9}.hero.is-white .tabs a:hover,.hero.is-white .tabs li.is-active a{opacity:1}.hero.is-white .tabs.is-boxed a,.hero.is-white .tabs.is-toggle a{color:#0a0a0a}.hero.is-white .tabs.is-boxed a:hover,.hero.is-white .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-white .tabs.is-boxed li.is-active a,.hero.is-white .tabs.is-boxed li.is-active a:hover,.hero.is-white .tabs.is-toggle li.is-active a,.hero.is-white .tabs.is-toggle li.is-active a:hover{background-color:#0a0a0a;border-color:#0a0a0a;color:#fff}.hero.is-white.is-bold{background-image:linear-gradient(141deg,#e6e6e6,#fff 71%,#fff)}@media screen and (max-width:768px){.hero.is-white.is-bold .navbar-menu{background-image:linear-gradient(141deg,#e6e6e6,#fff 71%,#fff)}}.hero.is-black{background-color:#0a0a0a;color:#fff}.hero.is-black a:not(.button):not(.dropdown-item):not(.tag),.hero.is-black strong{color:inherit}.hero.is-black .title{color:#fff}.hero.is-black .subtitle{color:hsla(0,0%,100%,.9)}.hero.is-black .subtitle a:not(.button),.hero.is-black .subtitle strong{color:#fff}@media screen and (max-width:1087px){.hero.is-black .navbar-menu{background-color:#0a0a0a}}.hero.is-black .navbar-item,.hero.is-black .navbar-link{color:hsla(0,0%,100%,.7)}.hero.is-black .navbar-link.is-active,.hero.is-black .navbar-link:hover,.hero.is-black a.navbar-item.is-active,.hero.is-black a.navbar-item:hover{background-color:#000;color:#fff}.hero.is-black .tabs a{color:#fff;opacity:.9}.hero.is-black .tabs a:hover,.hero.is-black .tabs li.is-active a{opacity:1}.hero.is-black .tabs.is-boxed a,.hero.is-black .tabs.is-toggle a{color:#fff}.hero.is-black .tabs.is-boxed a:hover,.hero.is-black .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-black .tabs.is-boxed li.is-active a,.hero.is-black .tabs.is-boxed li.is-active a:hover,.hero.is-black .tabs.is-toggle li.is-active a,.hero.is-black .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#0a0a0a}.hero.is-black.is-bold{background-image:linear-gradient(141deg,#000,#0a0a0a 71%,#181616)}@media screen and (max-width:768px){.hero.is-black.is-bold .navbar-menu{background-image:linear-gradient(141deg,#000,#0a0a0a 71%,#181616)}}.hero.is-light{background-color:#f5f5f5;color:#363636}.hero.is-light a:not(.button):not(.dropdown-item):not(.tag),.hero.is-light strong{color:inherit}.hero.is-light .title{color:#363636}.hero.is-light .subtitle{color:rgba(54,54,54,.9)}.hero.is-light .subtitle a:not(.button),.hero.is-light .subtitle strong{color:#363636}@media screen and (max-width:1087px){.hero.is-light .navbar-menu{background-color:#f5f5f5}}.hero.is-light .navbar-item,.hero.is-light .navbar-link{color:rgba(54,54,54,.7)}.hero.is-light .navbar-link.is-active,.hero.is-light .navbar-link:hover,.hero.is-light a.navbar-item.is-active,.hero.is-light a.navbar-item:hover{background-color:#e8e8e8;color:#363636}.hero.is-light .tabs a{color:#363636;opacity:.9}.hero.is-light .tabs a:hover,.hero.is-light .tabs li.is-active a{opacity:1}.hero.is-light .tabs.is-boxed a,.hero.is-light .tabs.is-toggle a{color:#363636}.hero.is-light .tabs.is-boxed a:hover,.hero.is-light .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-light .tabs.is-boxed li.is-active a,.hero.is-light .tabs.is-boxed li.is-active a:hover,.hero.is-light .tabs.is-toggle li.is-active a,.hero.is-light .tabs.is-toggle li.is-active a:hover{background-color:#363636;border-color:#363636;color:#f5f5f5}.hero.is-light.is-bold{background-image:linear-gradient(141deg,#dfd8d9,#f5f5f5 71%,#fff)}@media screen and (max-width:768px){.hero.is-light.is-bold .navbar-menu{background-image:linear-gradient(141deg,#dfd8d9,#f5f5f5 71%,#fff)}}.hero.is-dark{background-color:#363636;color:#f5f5f5}.hero.is-dark a:not(.button):not(.dropdown-item):not(.tag),.hero.is-dark strong{color:inherit}.hero.is-dark .title{color:#f5f5f5}.hero.is-dark .subtitle{color:hsla(0,0%,96.1%,.9)}.hero.is-dark .subtitle a:not(.button),.hero.is-dark .subtitle strong{color:#f5f5f5}@media screen and (max-width:1087px){.hero.is-dark .navbar-menu{background-color:#363636}}.hero.is-dark .navbar-item,.hero.is-dark .navbar-link{color:hsla(0,0%,96.1%,.7)}.hero.is-dark .navbar-link.is-active,.hero.is-dark .navbar-link:hover,.hero.is-dark a.navbar-item.is-active,.hero.is-dark a.navbar-item:hover{background-color:#292929;color:#f5f5f5}.hero.is-dark .tabs a{color:#f5f5f5;opacity:.9}.hero.is-dark .tabs a:hover,.hero.is-dark .tabs li.is-active a{opacity:1}.hero.is-dark .tabs.is-boxed a,.hero.is-dark .tabs.is-toggle a{color:#f5f5f5}.hero.is-dark .tabs.is-boxed a:hover,.hero.is-dark .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-dark .tabs.is-boxed li.is-active a,.hero.is-dark .tabs.is-boxed li.is-active a:hover,.hero.is-dark .tabs.is-toggle li.is-active a,.hero.is-dark .tabs.is-toggle li.is-active a:hover{background-color:#f5f5f5;border-color:#f5f5f5;color:#363636}.hero.is-dark.is-bold{background-image:linear-gradient(141deg,#1f191a,#363636 71%,#46403f)}@media screen and (max-width:768px){.hero.is-dark.is-bold .navbar-menu{background-image:linear-gradient(141deg,#1f191a,#363636 71%,#46403f)}}.hero.is-primary{background-color:#6500e5;color:#fff}.hero.is-primary a:not(.button):not(.dropdown-item):not(.tag),.hero.is-primary strong{color:inherit}.hero.is-primary .title{color:#fff}.hero.is-primary .subtitle{color:hsla(0,0%,100%,.9)}.hero.is-primary .subtitle a:not(.button),.hero.is-primary .subtitle strong{color:#fff}@media screen and (max-width:1087px){.hero.is-primary .navbar-menu{background-color:#6500e5}}.hero.is-primary .navbar-item,.hero.is-primary .navbar-link{color:hsla(0,0%,100%,.7)}.hero.is-primary .navbar-link.is-active,.hero.is-primary .navbar-link:hover,.hero.is-primary a.navbar-item.is-active,.hero.is-primary a.navbar-item:hover{background-color:#5a00cc;color:#fff}.hero.is-primary .tabs a{color:#fff;opacity:.9}.hero.is-primary .tabs a:hover,.hero.is-primary .tabs li.is-active a{opacity:1}.hero.is-primary .tabs.is-boxed a,.hero.is-primary .tabs.is-toggle a{color:#fff}.hero.is-primary .tabs.is-boxed a:hover,.hero.is-primary .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-primary .tabs.is-boxed li.is-active a,.hero.is-primary .tabs.is-boxed li.is-active a:hover,.hero.is-primary .tabs.is-toggle li.is-active a,.hero.is-primary .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#6500e5}.hero.is-primary.is-bold{background-image:linear-gradient(141deg,#3100b2,#6500e5 71%,#9b00ff)}@media screen and (max-width:768px){.hero.is-primary.is-bold .navbar-menu{background-image:linear-gradient(141deg,#3100b2,#6500e5 71%,#9b00ff)}}.hero.is-link{background-color:#6500e5;color:#fff}.hero.is-link a:not(.button):not(.dropdown-item):not(.tag),.hero.is-link strong{color:inherit}.hero.is-link .title{color:#fff}.hero.is-link .subtitle{color:hsla(0,0%,100%,.9)}.hero.is-link .subtitle a:not(.button),.hero.is-link .subtitle strong{color:#fff}@media screen and (max-width:1087px){.hero.is-link .navbar-menu{background-color:#6500e5}}.hero.is-link .navbar-item,.hero.is-link .navbar-link{color:hsla(0,0%,100%,.7)}.hero.is-link .navbar-link.is-active,.hero.is-link .navbar-link:hover,.hero.is-link a.navbar-item.is-active,.hero.is-link a.navbar-item:hover{background-color:#5a00cc;color:#fff}.hero.is-link .tabs a{color:#fff;opacity:.9}.hero.is-link .tabs a:hover,.hero.is-link .tabs li.is-active a{opacity:1}.hero.is-link .tabs.is-boxed a,.hero.is-link .tabs.is-toggle a{color:#fff}.hero.is-link .tabs.is-boxed a:hover,.hero.is-link .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-link .tabs.is-boxed li.is-active a,.hero.is-link .tabs.is-boxed li.is-active a:hover,.hero.is-link .tabs.is-toggle li.is-active a,.hero.is-link .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#6500e5}.hero.is-link.is-bold{background-image:linear-gradient(141deg,#3100b2,#6500e5 71%,#9b00ff)}@media screen and (max-width:768px){.hero.is-link.is-bold .navbar-menu{background-image:linear-gradient(141deg,#3100b2,#6500e5 71%,#9b00ff)}}.hero.is-info{background-color:#209cee;color:#fff}.hero.is-info a:not(.button):not(.dropdown-item):not(.tag),.hero.is-info strong{color:inherit}.hero.is-info .title{color:#fff}.hero.is-info .subtitle{color:hsla(0,0%,100%,.9)}.hero.is-info .subtitle a:not(.button),.hero.is-info .subtitle strong{color:#fff}@media screen and (max-width:1087px){.hero.is-info .navbar-menu{background-color:#209cee}}.hero.is-info .navbar-item,.hero.is-info .navbar-link{color:hsla(0,0%,100%,.7)}.hero.is-info .navbar-link.is-active,.hero.is-info .navbar-link:hover,.hero.is-info a.navbar-item.is-active,.hero.is-info a.navbar-item:hover{background-color:#118fe4;color:#fff}.hero.is-info .tabs a{color:#fff;opacity:.9}.hero.is-info .tabs a:hover,.hero.is-info .tabs li.is-active a{opacity:1}.hero.is-info .tabs.is-boxed a,.hero.is-info .tabs.is-toggle a{color:#fff}.hero.is-info .tabs.is-boxed a:hover,.hero.is-info .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-info .tabs.is-boxed li.is-active a,.hero.is-info .tabs.is-boxed li.is-active a:hover,.hero.is-info .tabs.is-toggle li.is-active a,.hero.is-info .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#209cee}.hero.is-info.is-bold{background-image:linear-gradient(141deg,#04a6d7,#209cee 71%,#3287f5)}@media screen and (max-width:768px){.hero.is-info.is-bold .navbar-menu{background-image:linear-gradient(141deg,#04a6d7,#209cee 71%,#3287f5)}}.hero.is-success{background-color:#23d160;color:#fff}.hero.is-success a:not(.button):not(.dropdown-item):not(.tag),.hero.is-success strong{color:inherit}.hero.is-success .title{color:#fff}.hero.is-success .subtitle{color:hsla(0,0%,100%,.9)}.hero.is-success .subtitle a:not(.button),.hero.is-success .subtitle strong{color:#fff}@media screen and (max-width:1087px){.hero.is-success .navbar-menu{background-color:#23d160}}.hero.is-success .navbar-item,.hero.is-success .navbar-link{color:hsla(0,0%,100%,.7)}.hero.is-success .navbar-link.is-active,.hero.is-success .navbar-link:hover,.hero.is-success a.navbar-item.is-active,.hero.is-success a.navbar-item:hover{background-color:#20bc56;color:#fff}.hero.is-success .tabs a{color:#fff;opacity:.9}.hero.is-success .tabs a:hover,.hero.is-success .tabs li.is-active a{opacity:1}.hero.is-success .tabs.is-boxed a,.hero.is-success .tabs.is-toggle a{color:#fff}.hero.is-success .tabs.is-boxed a:hover,.hero.is-success .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-success .tabs.is-boxed li.is-active a,.hero.is-success .tabs.is-boxed li.is-active a:hover,.hero.is-success .tabs.is-toggle li.is-active a,.hero.is-success .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#23d160}.hero.is-success.is-bold{background-image:linear-gradient(141deg,#12af2f,#23d160 71%,#2ce28a)}@media screen and (max-width:768px){.hero.is-success.is-bold .navbar-menu{background-image:linear-gradient(141deg,#12af2f,#23d160 71%,#2ce28a)}}.hero.is-warning{background-color:#ffdd57;color:rgba(0,0,0,.7)}.hero.is-warning a:not(.button):not(.dropdown-item):not(.tag),.hero.is-warning strong{color:inherit}.hero.is-warning .title{color:rgba(0,0,0,.7)}.hero.is-warning .subtitle{color:rgba(0,0,0,.9)}.hero.is-warning .subtitle a:not(.button),.hero.is-warning .subtitle strong{color:rgba(0,0,0,.7)}@media screen and (max-width:1087px){.hero.is-warning .navbar-menu{background-color:#ffdd57}}.hero.is-warning .navbar-item,.hero.is-warning .navbar-link{color:rgba(0,0,0,.7)}.hero.is-warning .navbar-link.is-active,.hero.is-warning .navbar-link:hover,.hero.is-warning a.navbar-item.is-active,.hero.is-warning a.navbar-item:hover{background-color:#ffd83d;color:rgba(0,0,0,.7)}.hero.is-warning .tabs a{color:rgba(0,0,0,.7);opacity:.9}.hero.is-warning .tabs a:hover,.hero.is-warning .tabs li.is-active a{opacity:1}.hero.is-warning .tabs.is-boxed a,.hero.is-warning .tabs.is-toggle a{color:rgba(0,0,0,.7)}.hero.is-warning .tabs.is-boxed a:hover,.hero.is-warning .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-warning .tabs.is-boxed li.is-active a,.hero.is-warning .tabs.is-boxed li.is-active a:hover,.hero.is-warning .tabs.is-toggle li.is-active a,.hero.is-warning .tabs.is-toggle li.is-active a:hover{background-color:rgba(0,0,0,.7);border-color:rgba(0,0,0,.7);color:#ffdd57}.hero.is-warning.is-bold{background-image:linear-gradient(141deg,#ffaf24,#ffdd57 71%,#fffa70)}@media screen and (max-width:768px){.hero.is-warning.is-bold .navbar-menu{background-image:linear-gradient(141deg,#ffaf24,#ffdd57 71%,#fffa70)}}.hero.is-danger{background-color:#ff3860;color:#fff}.hero.is-danger a:not(.button):not(.dropdown-item):not(.tag),.hero.is-danger strong{color:inherit}.hero.is-danger .title{color:#fff}.hero.is-danger .subtitle{color:hsla(0,0%,100%,.9)}.hero.is-danger .subtitle a:not(.button),.hero.is-danger .subtitle strong{color:#fff}@media screen and (max-width:1087px){.hero.is-danger .navbar-menu{background-color:#ff3860}}.hero.is-danger .navbar-item,.hero.is-danger .navbar-link{color:hsla(0,0%,100%,.7)}.hero.is-danger .navbar-link.is-active,.hero.is-danger .navbar-link:hover,.hero.is-danger a.navbar-item.is-active,.hero.is-danger a.navbar-item:hover{background-color:#ff1f4b;color:#fff}.hero.is-danger .tabs a{color:#fff;opacity:.9}.hero.is-danger .tabs a:hover,.hero.is-danger .tabs li.is-active a{opacity:1}.hero.is-danger .tabs.is-boxed a,.hero.is-danger .tabs.is-toggle a{color:#fff}.hero.is-danger .tabs.is-boxed a:hover,.hero.is-danger .tabs.is-toggle a:hover{background-color:rgba(10,10,10,.1)}.hero.is-danger .tabs.is-boxed li.is-active a,.hero.is-danger .tabs.is-boxed li.is-active a:hover,.hero.is-danger .tabs.is-toggle li.is-active a,.hero.is-danger .tabs.is-toggle li.is-active a:hover{background-color:#fff;border-color:#fff;color:#ff3860}.hero.is-danger.is-bold{background-image:linear-gradient(141deg,#ff0561,#ff3860 71%,#ff5257)}@media screen and (max-width:768px){.hero.is-danger.is-bold .navbar-menu{background-image:linear-gradient(141deg,#ff0561,#ff3860 71%,#ff5257)}}.hero.is-small .hero-body{padding-bottom:1.5rem;padding-top:1.5rem}@media print,screen and (min-width:769px){.hero.is-medium .hero-body{padding-bottom:9rem;padding-top:9rem}}@media print,screen and (min-width:769px){.hero.is-large .hero-body{padding-bottom:18rem;padding-top:18rem}}.hero.is-fullheight-with-navbar .hero-body,.hero.is-fullheight .hero-body,.hero.is-halfheight .hero-body{align-items:center;display:flex}.hero.is-fullheight-with-navbar .hero-body>.container,.hero.is-fullheight .hero-body>.container,.hero.is-halfheight .hero-body>.container{flex-grow:1;flex-shrink:1}.hero.is-halfheight{min-height:50vh}.hero.is-fullheight{min-height:100vh}.hero-video{overflow:hidden}.hero-video video{left:50%;min-height:100%;min-width:100%;position:absolute;top:50%;-webkit-transform:translate3d(-50%,-50%,0);transform:translate3d(-50%,-50%,0)}.hero-video.is-transparent{opacity:.3}@media screen and (max-width:768px){.hero-video{display:none}}.hero-buttons{margin-top:1.5rem}@media screen and (max-width:768px){.hero-buttons .button{display:flex}.hero-buttons .button:not(:last-child){margin-bottom:.75rem}}@media print,screen and (min-width:769px){.hero-buttons{display:flex;justify-content:center}.hero-buttons .button:not(:last-child){margin-right:1.5rem}}.hero-foot,.hero-head{flex-grow:0;flex-shrink:0}.hero-body{flex-grow:1;flex-shrink:0}.hero-body,.section{padding:3rem 1.5rem}@media screen and (min-width:1088px){.section.is-medium{padding:9rem 1.5rem}.section.is-large{padding:18rem 1.5rem}}.footer{background-color:#fafafa;padding:3rem 1.5rem 6rem}.time-wrapper{margin-bottom:1em;color:#b5b5b5}',""])},function(e,r,t){var content=t(218);"string"==typeof content&&(content=[[e.i,content,""]]),content.locals&&(e.exports=content.locals);(0,t(30).default)("9204275a",content,!0,{sourceMap:!1})},function(e,r,t){r=e.exports=t(29)(!1);var n=t(110),o=n(t(219)),l=n(t(220));r.push([e.i,'@font-face{font-family:Capriola;font-style:normal;font-display:swap;font-weight:400;src:local("Capriola Regular"),local("Capriola-Regular"),url('+o+') format("woff2");unicode-range:U+0100-024f,U+0259,U+1e??,U+2020,U+20a0-20ab,U+20ad-20cf,U+2113,U+2c60-2c7f,U+a720-a7ff}@font-face{font-family:Capriola;font-style:normal;font-display:swap;font-weight:400;src:local("Capriola Regular"),local("Capriola-Regular"),url('+l+') format("woff2");unicode-range:U+00??,U+0131,U+0152-0153,U+02bb-02bc,U+02c6,U+02da,U+02dc,U+2000-206f,U+2074,U+20ac,U+2122,U+2191,U+2193,U+2212,U+2215,U+feff,U+fffd}',""])},function(e,r,t){e.exports=t.p+"fonts/fc0df46.woff2"},function(e,r,t){e.exports=t.p+"fonts/b9480f7.woff2"},function(e,r,t){"use strict";t.r(r),t.d(r,"state",function(){return o}),t.d(r,"mutations",function(){return l}),t.d(r,"actions",function(){return d});t(37),t(38),t(31);var n=t(5),o=function(){return{bloglist:[]}},l={set:function(e,r){e.bloglist=r}},d={nuxtServerInit:function(){var e=Object(n.a)(regeneratorRuntime.mark(function e(r){var n,o,l,d,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=r.commit,o=t(111),l=t(54),e.next=5,t(248);case 5:return d=e.sent,c=d.keys().map(function(e){var r=d(e);return r.slug=e.slice(2,-3),r}).map(function(e){var r=o(e.default).attributes;return r.slug=e.slug,r.ctime=l(r.ctime).format("YYYY-MM-DD"),r}).sort(function(a,b){return a.ctime<b.ctime}),e.next=9,n("set",c);case 9:case"end":return e.stop()}},e)}));return function(r){return e.apply(this,arguments)}}()}},,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,r,t){var map={"./angular-consumiendo-aemet.md":113,"./angular-consumiendo-wordpress-rest-api-autenticacion.md":114,"./angular-consumiendo-wordpress-rest-api-crud.md":115,"./angular-consumiendo-wordpress-rest-api-custom-post-types.md":116,"./angular-consumiendo-wordpress-rest-api-endpoints.md":117,"./angular-consumiendo-wordpress-rest-api-trabajando-usuarios.md":118,"./angularjs-consumiendo-de-servicio-django.md":119,"./angularjs-wordpress-theme.md":120,"./angularjs-y-google-keep.md":121,"./animacion-con-css3-avion-en-movimiento.md":122,"./animaciones-css3-transform-translate-x-y-vs-leftx-topy.md":123,"./badges-sass-svg.md":124,"./bonito-menu-horizontal-con-css3.md":125,"./building-my-static-blog-with-nuxtjs-and-markdown-beginner.md":126,"./codeigniter-cloud9-primeros-pasos.md":127,"./codio-y-wordpress.md":128,"./codota-find-great-code-examples.md":129,"./construir-custom-dial-en-android.md":130,"./crear-calculadora-en-android.md":131,"./crud-en-android-con-orm-green-dao.md":132,"./customise-polkit-user-list-default-current.md":133,"./demo-angularjs-shop-01-generando-proyecto-con-yeoman.md":134,"./demo-angularjs-shop-02-configurando-menu-principal.md":135,"./demo-angularjs-shop-03-aplicando-estilos.md":136,"./demo-angularjs-shop-04-directivas.md":137,"./dos-campos-select-relacionados-angularjs.md":138,"./ecuacion-de-segundo-grado-en-java.md":139,"./ejemplo-de-colecciones-en-java.md":140,"./ejemplo-de-programa-java-para-tienda.md":141,"./firebase-google.md":142,"./formulario-web-centrado.md":143,"./foundation-zurb-5-ya-esta-disponible.md":144,"./gridview-con-libreria-picasso-ii.md":145,"./gridview-con-libreria-picasso-viewholder.md":146,"./gridview-con-libreria-picasso.md":147,"./instalacion-de-git-en-windows.md":148,"./intents-en-android-para-llamada-mapas-y-mail.md":149,"./listview-en-android-con-arrayadapter.md":150,"./manejar-eventos-en-java.md":151,"./maquetacion-pagina-con-haml-y-sass.md":152,"./menu-apple-con-css.md":153,"./menu-opciones-en-android.md":154,"./obtener-diferentes-url-imagen-destacada-wordpress.md":155,"./parsear-xml-usando-java-stax-cursor.md":156,"./parsear-xml-usando-java-stax-event.md":157,"./programa-java-gestionar-alumnos.md":158,"./programa-java-gestionar-ascensor.md":159,"./programa-java-venta-de-moviles.md":160,"./rest-android-con-retrofit-slim-php-y-redbean.md":161,"./spinner-enlazados-en-android.md":162,"./tabs-en-android.md":163,"./uso-de-startactivityforresult.md":164,"./visualizar-sqlite-de-app-android-con-eclipse.md":165,"./visualizar-sqlite-de-app-android-con-sqlite-manager.md":166,"./wp-rest-api-habilitar-filtro-de-custom-fields.md":167};function n(e){var r=o(e);return t(r)}function o(e){if(!t.o(map,e)){var r=new Error("Cannot find module '"+e+"'");throw r.code="MODULE_NOT_FOUND",r}return map[e]}n.keys=function(){return Object.keys(map)},n.resolve=o,e.exports=n,n.id=248}],[[168,5,1,6]]]);